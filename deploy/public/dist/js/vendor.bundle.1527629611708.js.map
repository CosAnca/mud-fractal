{"version":3,"sources":["webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_isPlaceholder.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_curry1.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/always.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/F.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/T.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/__.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_curry2.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/add.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_concat.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_arity.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_curryN.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/curryN.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/addIndex.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_curry3.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/adjust.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_isArray.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_isTransformer.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_dispatchable.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_reduced.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_xfBase.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_xall.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/all.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/max.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_map.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_isString.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_isArrayLike.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_xwrap.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/bind.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_reduce.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_xmap.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_has.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_isArguments.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/keys.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/map.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/path.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/prop.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/pluck.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/reduce.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/allPass.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/and.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_xany.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/any.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/anyPass.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/ap.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_xaperture.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/aperture.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_aperture.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/append.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/apply.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/values.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/applySpec.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/applyTo.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/ascend.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/assoc.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_isInteger.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/isNil.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/assocPath.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/nAry.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/binary.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_isFunction.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/liftN.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/lift.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/both.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/curry.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/call.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_makeFlat.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_flatCat.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_forceReduced.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/chain.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_xchain.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/clamp.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_cloneRegExp.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/type.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_clone.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/clone.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/comparator.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/not.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/complement.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_pipe.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_checkForMethod.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/slice.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/tail.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/pipe.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/reverse.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/compose.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/composeK.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_pipeP.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/pipeP.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/composeP.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_arrayFromIterator.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_containsWith.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/identical.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_equals.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_functionName.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/equals.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_indexOf.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_contains.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_quote.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_toISOString.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_complement.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_filter.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_isObject.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_xfilter.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/filter.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/reject.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/toString.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_toString.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/concat.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/cond.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/constructN.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/construct.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/contains.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/converge.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_xreduceBy.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/reduceBy.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/countBy.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/dec.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/defaultTo.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/descend.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/difference.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/differenceWith.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/dissoc.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/remove.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/update.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/dissocPath.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/divide.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_xdrop.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/drop.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_xtake.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/take.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_xdropLast.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/dropLast.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_dropLast.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_xdropLastWhile.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/dropLastWhile.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_dropLastWhile.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_xdropRepeatsWith.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/nth.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/last.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/dropRepeatsWith.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/dropRepeats.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_xdropWhile.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/dropWhile.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/or.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/either.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/empty.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/takeLast.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/endsWith.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/eqBy.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/eqProps.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/evolve.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_xfind.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/find.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_xfindIndex.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/findIndex.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_xfindLast.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/findLast.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_xfindLastIndex.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/findLastIndex.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/flatten.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/flip.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/forEach.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/forEachObjIndexed.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/fromPairs.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/groupBy.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/groupWith.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/gt.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/gte.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/has.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/hasIn.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/head.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_identity.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/identity.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/ifElse.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/inc.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/indexBy.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/indexOf.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/init.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/innerJoin.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/insert.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/insertAll.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_Set.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/uniqBy.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/uniq.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/intersection.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/intersperse.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_assign.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_objectAssign.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/objOf.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_stepCat.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/into.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/invert.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/invertObj.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/invoker.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/is.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/isEmpty.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/join.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/juxt.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/keysIn.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/lastIndexOf.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_isNumber.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/length.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/lens.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/lensIndex.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/lensPath.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/lensProp.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/lt.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/lte.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/mapAccum.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/mapAccumRight.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/mapObjIndexed.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/match.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/mathMod.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/maxBy.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/sum.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/mean.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/median.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/memoizeWith.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/memoize.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/merge.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/mergeAll.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/mergeWithKey.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/mergeDeepWithKey.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/mergeDeepLeft.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/mergeDeepRight.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/mergeDeepWith.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/mergeWith.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/min.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/minBy.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/modulo.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/multiply.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/negate.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/none.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/nthArg.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/o.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/of.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_of.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/omit.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/once.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/over.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/pair.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_createPartialApplicator.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/partial.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/partialRight.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/partition.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/pathEq.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/pathOr.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/pathSatisfies.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/pick.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/pickAll.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/pickBy.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/pipeK.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/prepend.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/product.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/useWith.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/project.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/propEq.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/propIs.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/propOr.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/propSatisfies.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/props.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/range.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/reduceRight.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/reduceWhile.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/reduced.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/times.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/repeat.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/replace.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/scan.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/sequence.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/set.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/sort.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/sortBy.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/sortWith.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/split.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/splitAt.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/splitEvery.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/splitWhen.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/startsWith.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/subtract.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/symmetricDifference.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/symmetricDifferenceWith.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/takeLastWhile.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_xtakeWhile.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/takeWhile.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_xtap.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/tap.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/test.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/internal/_isRegExp.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/toLower.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/toPairs.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/toPairsIn.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/toUpper.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/transduce.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/transpose.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/traverse.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/trim.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/tryCatch.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/unapply.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/unary.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/uncurryN.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/unfold.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/union.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/uniqWith.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/unionWith.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/unless.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/unnest.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/until.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/valuesIn.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/view.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/when.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/where.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/whereEq.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/without.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/xprod.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/zip.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/zipObj.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ramda/es/zipWith.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/dom-delegate/lib/index.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/debug/src/browser.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/domify/index.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/history/createBrowserHistory.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/path-to-regexp/index.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/mitt/dist/mitt.es.js","webpack:///(webpack)/buildin/global.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/history/PathUtils.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/warning/browser.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/process/browser.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/raf/node_modules/performance-now/lib/performance-now.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/history/DOMUtils.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/history/createTransitionManager.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/value-equal/index.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/resolve-pathname/index.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/history/LocationUtils.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/invariant/browser.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/dom-delegate/lib/delegate.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/ms/index.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/debug/src/debug.js","webpack:////Users/davidstockley/websites/_mud/mud-fractal-v2/node_modules/raf/index.js"],"names":["_isPlaceholder","a","_curry1","fn","f1","arguments","length","apply","this","es_always","val","es_F","es_T","_","@@functional/placeholder","_curry2","f2","b","_b","_a","es_add","Number","_concat","set1","set2","idx","len1","len2","result","_arity","n","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","Error","_curryN","received","combined","argsIdx","left","combinedIdx","es_curryN","es_addIndex","origFn","list","args","Array","prototype","slice","call","_curry3","f3","c","_c","es_adjust","_idx","_list","_isArray","isArray","Object","toString","_isTransformer","obj","_dispatchable","methodNames","xf","pop","transducer","_reduced","x","@@transducer/value","@@transducer/reduced","_xfBase","init","_xall_XAll","XAll","f","all","input","es_all","es_max","_map","functor","len","_isString","internal_isArrayLike","nodeType","hasOwnProperty","XWrap","acc","_xwrap","es_bind","thisObj","_iterableReduce","iter","step","next","done","value","_methodReduce","methodName","symIterator","Symbol","iterator","_reduce","_arrayReduce","reduce","TypeError","_xmap_XMap","XMap","internal_xmap","_has","prop","_isArguments_toString","internal_isArguments","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","hasArgsEnumBug","contains","item","es_keys","keys","nIdx","ks","checkArgsLength","es_map","key","es_path","paths","es_prop","p","es_pluck","es_reduce","es_allPass","preds","es_and","_xany_XAny","XAny","any","internal_xany","es_any","es_anyPass","es_ap","applyF","applyX","ap","_xaperture_XAperture","XAperture","pos","full","store","getCopy","es_aperture","limit","es_append","el","es_apply","es_values","props","vals","es_applySpec","applySpec","spec","v","es_applyTo","es_ascend","aa","bb","es_assoc","_isInteger","isInteger","es_isNil","es_assocPath","assocPath","path","nextObj","arr","concat","es_nAry","es_binary","_isFunction","es_liftN","arity","lifted","es_lift","es_both","g","es_curry","es_call","_makeFlat","recursive","flatt","jlen","j","ilen","internal_flatCat","rxf","@@transducer/init","@@transducer/result","@@transducer/step","ret","preservingReduced","es_chain","monad","es_clamp","min","max","_cloneRegExp","pattern","RegExp","source","global","ignoreCase","multiline","sticky","unicode","es_type","undefined","_clone","refFrom","refTo","deep","copy","copiedValue","Date","valueOf","es_clone","clone","es_comparator","pred","es_not","es_complement","_pipe","_checkForMethod","methodname","es_slice","fromIndex","toIndex","es_tail","Infinity","pipe","es_reverse","split","reverse","join","compose","composeK","last","_pipeP","ctx","then","pipeP","composeP","_arrayFromIterator","push","_containsWith","es_identical","_uniqContentEquals","aIterator","bIterator","stackA","stackB","eq","_equals","aItem","match","typeA","equals","constructor","String","name","message","size","entries","values","keysA","extendedStackA","extendedStackB","es_equals","_indexOf","inf","indexOf","_contains","_quote","s","replace","pad","internal_toISOString","toISOString","d","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","_complement","_filter","_isObject","_xfilter_XFilter","XFilter","es_filter","filterable","es_reject","es_toString","_toString","seen","recur","y","xs","mapPairs","k","sort","test","isNaN","NaN","repr","es_concat","es_cond","pairs","pair","es_constructN","Fn","$0","$1","$2","$3","$4","$5","$6","$7","$8","$9","es_construct","es_contains","es_converge","after","fns","context","_xreduceBy_XReduceBy","XReduceBy","valueFn","valueAcc","keyFn","inputs","es_reduceBy","elt","es_countBy","elem","es_dec","es_defaultTo","es_descend","es_difference","first","second","out","firstLen","es_differenceWith","es_dissoc","es_remove","start","count","splice","es_update","es_dissocPath","dissocPath","head","tail","es_divide","_xdrop_XDrop","XDrop","es_drop","Math","_xtake_XTake","XTake","i","es_take","_xdropLast_XDropLast","XDropLast","es_dropLast","_xdropLastWhile_XDropLastWhile","XDropLastWhile","retained","retain","flush","es_dropLastWhile","_xdropRepeatsWith_XDropRepeatsWith","XDropRepeatsWith","lastValue","seenFirstValue","sameAsLast","internal_xdropRepeatsWith","es_nth","offset","charAt","es_last","es_dropRepeatsWith","es_dropRepeats","_xdropWhile_XDropWhile","XDropWhile","es_dropWhile","es_or","es_either","es_empty","empty","es_takeLast","es_endsWith","suffix","es_eqBy","es_eqProps","obj1","obj2","es_evolve","evolve","transformations","object","transformation","type","_xfind_XFind","XFind","found","es_find","_xfindIndex_XFindIndex","XFindIndex","es_findIndex","_xfindLast_XFindLast","XFindLast","es_findLast","_xfindLastIndex_XFindLastIndex","XFindLastIndex","lastIdx","es_findLastIndex","es_flatten","es_flip","es_forEach","es_forEachObjIndexed","keyList","es_fromPairs","es_groupBy","es_groupWith","res","nextidx","es_gt","es_gte","es_has","es_hasIn","es_head","_identity","es_identity","es_ifElse","condition","onTrue","onFalse","es_inc","es_indexBy","es_indexOf","target","es_init","es_innerJoin","ys","es_insert","es_insertAll","elts","hasOrAdd","shouldAdd","set","prevSize","_items","_nativeSet","add","has","bIdx","internal_Set","_Set","Set","es_uniqBy","appliedItem","es_uniq","es_intersection","list1","list2","lookupList","filteredList","es_intersperse","separator","_assign","assign","output","nextKey","es_objOf","_stepCatArray","_stepCatString","_stepCatObject","es_into","_stepCat","es_invert","es_invertObj","es_invoker","method","es_is","Ctor","es_isEmpty","es_join","es_juxt","es_keysIn","es_lastIndexOf","lastIndexOf","_isNumber","es_length","es_lens","getter","setter","toFunctorFn","focus","es_lensIndex","es_lensPath","es_lensProp","es_lt","es_lte","es_mapAccum","tuple","es_mapAccumRight","es_mapObjIndexed","es_match","rx","str","es_mathMod","m","es_maxBy","es_sum","es_mean","es_median","width","es_memoizeWith","mFn","cache","es_memoize","es_merge","l","r","es_mergeAll","es_mergeWithKey","es_mergeDeepWithKey","mergeDeepWithKey","lObj","rObj","lVal","rVal","es_mergeDeepLeft","es_mergeDeepRight","es_mergeDeepWith","es_mergeWith","_l","_r","es_min","es_minBy","es_modulo","es_multiply","es_negate","es_none","es_nthArg","es_o","es_of","es_omit","names","index","es_once","called","Identity","map","es_over","lens","es_pair","fst","snd","_createPartialApplicator","es_partial","es_partialRight","es_partition","es_pathEq","_path","es_pathOr","es_pathSatisfies","propPath","es_pick","es_pickAll","es_pickBy","pipeK","es_prepend","es_product","es_useWith","transformers","es_project","es_propEq","es_propIs","es_propOr","es_propSatisfies","es_props","ps","es_range","from","to","es_reduceRight","es_reduceWhile","es_reduced","es_times","RangeError","es_repeat","es_replace","regex","replacement","es_scan","es_sequence","of","traversable","sequence","es_set","es_sort","comparator","es_sortBy","es_sortWith","es_split","es_splitAt","array","es_splitEvery","es_splitWhen","prefix","es_startsWith","es_subtract","es_symmetricDifference","es_symmetricDifferenceWith","es_takeLastWhile","_xtakeWhile_XTakeWhile","XTakeWhile","es_takeWhile","_xtap_XTap","XTap","es_tap","es_test","es_toLower","es_toPairs","es_toPairsIn","es_toUpper","es_transduce","es_transpose","outerlist","innerlist","es_traverse","ws","es_trim","trim","beginRx","endRx","es_tryCatch","tryer","catcher","e","es_unapply","es_unary","es_uncurryN","depth","endIdx","currentDepth","es_unfold","seed","es_union","es_uniqWith","es_unionWith","es_unless","whenFalseFn","es_unnest","es_until","es_valuesIn","vs","Const","fantasy-land/map","es_view","es_when","whenTrueFn","es_where","testObj","es_whereEq","es_without","es_xprod","es_zip","rv","es_zipObj","es_zipWith","Delegate","__webpack_require__","module","exports","root","process","load","storage","debug","NODE_ENV","DEBUG","log","console","Function","formatArgs","useColors","namespace","humanize","diff","color","lastC","save","namespaces","removeItem","window","navigator","userAgent","toLowerCase","document","documentElement","style","WebkitAppearance","firebug","exception","table","parseInt","chrome","local","localStorage","localstorage","colors","formatters","JSON","stringify","err","enable","html","doc","exec","createTextNode","tag","createElement","innerHTML","removeChild","lastChild","wrap","_default","firstChild","fragment","createDocumentFragment","appendChild","bugTestDiv","innerHTMLBug","getElementsByTagName","legend","tr","col","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","polyline","ellipse","polygon","circle","text","line","rect","__esModule","_typeof","_extends","_warning2","_interopRequireDefault","_invariant2","_LocationUtils","_PathUtils","_createTransitionManager2","_DOMUtils","default","getHistoryState","history","state","canUseDOM","globalHistory","canUseHistory","supportsHistory","needsHashChangeListener","supportsPopStateOnHashChange","_props$forceRefresh","forceRefresh","_props$getUserConfirm","getUserConfirmation","getConfirmation","_props$keyLength","keyLength","basename","stripTrailingSlash","addLeadingSlash","getDOMLocation","historyState","_ref","_window$location","location","pathname","search","hash","hasBasename","stripBasename","createLocation","createKey","random","substr","transitionManager","setState","nextState","notifyListeners","action","handlePopState","event","isExtraneousPopstateEvent","handlePop","handleHashChange","forceNextPop","confirmTransitionTo","ok","revertPop","fromLocation","toLocation","allKeys","delta","go","initialLocation","createHref","createPath","listenerCount","checkDOMListeners","addEventListener","removeEventListener","isBlocked","href","pushState","prevIndex","nextKeys","replaceState","goBack","goForward","block","prompt","unblock","setPrompt","listen","listener","unlisten","appendListener","pathToRegexp","parse","compile","options","tokensToFunction","tokensToRegExp","DEFAULT_DELIMITER","DEFAULT_DELIMITERS","PATH_REGEXP","tokens","defaultDelimiter","delimiter","delimiters","pathEscaped","escaped","prev","capture","group","modifier","partial","repeat","optional","escapeGroup","escapeString","matches","data","encode","encodeURIComponent","token","segment","flags","sensitive","strict","end","endsWith","route","isEndDelimited","groups","regexpToRegexp","parts","arrayToRegexp","stringToRegexp","__webpack_exports__","create","on","handler","off","emit","evt","eval","stripLeadingSlash","parsePath","hashIndex","searchIndex","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","nextTick","title","browser","env","argv","version","versions","addListener","once","removeListener","removeAllListeners","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","getNanoSeconds","hrtime","loadTime","moduleLoadTime","nodeLoadTime","upTime","performance","now","hr","uptime","getTime","node","attachEvent","detachEvent","callback","confirm","ua","supportsGoWithoutReloadUsingHash","_warning","nextPrompt","isActive","filter","_len","_key","forEach","valueEqual","every","aType","aValue","bValue","aKeys","bKeys","isAbsolute","spliceOne","toParts","fromParts","isToAbs","isFromAbs","mustEndAbs","hasTrailingSlash","up","part","unshift","locationsAreEqual","_resolvePathname2","_valueEqual2","currentLocation","decodeURI","URIError","format","error","argIndex","framesToPop","listenerMap","handle","bind","eventType","rootElement","captureForType","selector","useCapture","matcher","matcherParam","matchesTag","matchesId","element","listenerList","singleEventType","returned","parentNode","eventPhase","currentTarget","fire","preventDefault","parentElement","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","Element","tagName","id","destroy","h","plural","ms","floor","ceil","parseFloat","long","round","fmtShort","createDebug","prevTime","enabled","self","curr","coerce","formatter","charCodeAt","abs","selectColor","instances","stack","disable","skips","instance","vendors","raf","caf","_now","cp","cancelled","cancel","polyfill","requestAnimationFrame","cancelAnimationFrame"],"mappings":"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","file":"vendor.bundle.1527629611708.js","sourcesContent":["export default function _isPlaceholder(a) {\n       return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}","import _isPlaceholder from './_isPlaceholder';\n\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}","import _curry1 from './internal/_curry1';\n\n/**\n * Returns a function that always returns the given value. Note that for\n * non-primitives the value returned is a reference to the original value.\n *\n * This function is known as `const`, `constant`, or `K` (for K combinator) in\n * other languages and libraries.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> (* -> a)\n * @param {*} val The value to wrap in a function\n * @return {Function} A Function :: * -> val.\n * @example\n *\n *      var t = R.always('Tee');\n *      t(); //=> 'Tee'\n */\nvar always = /*#__PURE__*/_curry1(function always(val) {\n  return function () {\n    return val;\n  };\n});\nexport default always;","import always from './always';\n\n/**\n * A function that always returns `false`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.always, R.T\n * @example\n *\n *      R.F(); //=> false\n */\nvar F = /*#__PURE__*/always(false);\nexport default F;","import always from './always';\n\n/**\n * A function that always returns `true`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.always, R.F\n * @example\n *\n *      R.T(); //=> true\n */\nvar T = /*#__PURE__*/always(true);\nexport default T;","/**\n * A special placeholder value used to specify \"gaps\" within curried functions,\n * allowing partial application of any combination of arguments, regardless of\n * their positions.\n *\n * If `g` is a curried ternary function and `_` is `R.__`, the following are\n * equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2, _)(1, 3)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @constant\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @example\n *\n *      var greet = R.replace('{name}', R.__, 'Hello, {name}!');\n *      greet('Alice'); //=> 'Hello, Alice!'\n */\nexport default { '@@functional/placeholder': true };","import _curry1 from './_curry1';\nimport _isPlaceholder from './_isPlaceholder';\n\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}","import _curry2 from './internal/_curry2';\n\n/**\n * Adds two values.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a\n * @param {Number} b\n * @return {Number}\n * @see R.subtract\n * @example\n *\n *      R.add(2, 3);       //=>  5\n *      R.add(7)(10);      //=> 17\n */\nvar add = /*#__PURE__*/_curry2(function add(a, b) {\n  return Number(a) + Number(b);\n});\nexport default add;","/**\n * Private `concat` function to merge two array-like objects.\n *\n * @private\n * @param {Array|Arguments} [set1=[]] An array-like object.\n * @param {Array|Arguments} [set2=[]] An array-like object.\n * @return {Array} A new, merged array.\n * @example\n *\n *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n */\nexport default function _concat(set1, set2) {\n  set1 = set1 || [];\n  set2 = set2 || [];\n  var idx;\n  var len1 = set1.length;\n  var len2 = set2.length;\n  var result = [];\n\n  idx = 0;\n  while (idx < len1) {\n    result[result.length] = set1[idx];\n    idx += 1;\n  }\n  idx = 0;\n  while (idx < len2) {\n    result[result.length] = set2[idx];\n    idx += 1;\n  }\n  return result;\n}","export default function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}","import _arity from './_arity';\nimport _isPlaceholder from './_isPlaceholder';\n\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n      combined[combinedIdx] = result;\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n      combinedIdx += 1;\n    }\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}","import _arity from './internal/_arity';\nimport _curry1 from './internal/_curry1';\nimport _curry2 from './internal/_curry2';\nimport _curryN from './internal/_curryN';\n\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      var sumArgs = (...args) => R.sum(args);\n *\n *      var curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\nvar curryN = /*#__PURE__*/_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n  return _arity(length, _curryN(length, [], fn));\n});\nexport default curryN;","import _concat from './internal/_concat';\nimport _curry1 from './internal/_curry1';\nimport curryN from './curryN';\n\n/**\n * Creates a new list iteration function from an existing one by adding two new\n * parameters to its callback function: the current index, and the entire list.\n *\n * This would turn, for instance, [`R.map`](#map) function into one that\n * more closely resembles `Array.prototype.map`. Note that this will only work\n * for functions in which the iteration callback function is the first\n * parameter, and where the list is the last parameter. (This latter might be\n * unimportant if the list parameter is not used.)\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Function\n * @category List\n * @sig ((a ... -> b) ... -> [a] -> *) -> (a ..., Int, [a] -> b) ... -> [a] -> *)\n * @param {Function} fn A list iteration function that does not pass index or list to its callback\n * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n * @example\n *\n *      var mapIndexed = R.addIndex(R.map);\n *      mapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);\n *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n */\nvar addIndex = /*#__PURE__*/_curry1(function addIndex(fn) {\n  return curryN(fn.length, function () {\n    var idx = 0;\n    var origFn = arguments[0];\n    var list = arguments[arguments.length - 1];\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = function () {\n      var result = origFn.apply(this, _concat(arguments, [idx, list]));\n      idx += 1;\n      return result;\n    };\n    return fn.apply(this, args);\n  });\n});\nexport default addIndex;","import _curry1 from './_curry1';\nimport _curry2 from './_curry2';\nimport _isPlaceholder from './_isPlaceholder';\n\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}","import _concat from './internal/_concat';\nimport _curry3 from './internal/_curry3';\n\n/**\n * Applies a function to the value at the given index of an array, returning a\n * new copy of the array with the element at the given index replaced with the\n * result of the function application.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig (a -> a) -> Number -> [a] -> [a]\n * @param {Function} fn The function to apply.\n * @param {Number} idx The index.\n * @param {Array|Arguments} list An array-like object whose value\n *        at the supplied index will be replaced.\n * @return {Array} A copy of the supplied array-like object with\n *         the element at index `idx` replaced with the value\n *         returned by applying `fn` to the existing element.\n * @see R.update\n * @example\n *\n *      R.adjust(R.add(10), 1, [1, 2, 3]);     //=> [1, 12, 3]\n *      R.adjust(R.add(10))(1)([1, 2, 3]);     //=> [1, 12, 3]\n * @symb R.adjust(f, -1, [a, b]) = [a, f(b)]\n * @symb R.adjust(f, 0, [a, b]) = [f(a), b]\n */\nvar adjust = /*#__PURE__*/_curry3(function adjust(fn, idx, list) {\n  if (idx >= list.length || idx < -list.length) {\n    return list;\n  }\n  var start = idx < 0 ? list.length : 0;\n  var _idx = start + idx;\n  var _list = _concat(list);\n  _list[_idx] = fn(list[_idx]);\n  return _list;\n});\nexport default adjust;","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nexport default Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};","export default function _isTransformer(obj) {\n  return typeof obj['@@transducer/step'] === 'function';\n}","import _isArray from './_isArray';\nimport _isTransformer from './_isTransformer';\n\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer [xf] to return a new transformer (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} xf transducer to initialize if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\nexport default function _dispatchable(methodNames, xf, fn) {\n  return function () {\n    if (arguments.length === 0) {\n      return fn();\n    }\n    var args = Array.prototype.slice.call(arguments, 0);\n    var obj = args.pop();\n    if (!_isArray(obj)) {\n      var idx = 0;\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, args);\n        }\n        idx += 1;\n      }\n      if (_isTransformer(obj)) {\n        var transducer = xf.apply(null, args);\n        return transducer(obj);\n      }\n    }\n    return fn.apply(this, arguments);\n  };\n}","export default function _reduced(x) {\n  return x && x['@@transducer/reduced'] ? x : {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}","export default {\n  init: function () {\n    return this.xf['@@transducer/init']();\n  },\n  result: function (result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XAll = /*#__PURE__*/function () {\n  function XAll(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.all = true;\n  }\n  XAll.prototype['@@transducer/init'] = _xfBase.init;\n  XAll.prototype['@@transducer/result'] = function (result) {\n    if (this.all) {\n      result = this.xf['@@transducer/step'](result, true);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XAll.prototype['@@transducer/step'] = function (result, input) {\n    if (!this.f(input)) {\n      this.all = false;\n      result = _reduced(this.xf['@@transducer/step'](result, false));\n    }\n    return result;\n  };\n\n  return XAll;\n}();\n\nvar _xall = /*#__PURE__*/_curry2(function _xall(f, xf) {\n  return new XAll(f, xf);\n});\nexport default _xall;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xall from './internal/_xall';\n\n/**\n * Returns `true` if all elements of the list match the predicate, `false` if\n * there are any that don't.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n *         otherwise.\n * @see R.any, R.none, R.transduce\n * @example\n *\n *      var equals3 = R.equals(3);\n *      R.all(equals3)([3, 3, 3, 3]); //=> true\n *      R.all(equals3)([3, 3, 1, 3]); //=> false\n */\nvar all = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['all'], _xall, function all(fn, list) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (!fn(list[idx])) {\n      return false;\n    }\n    idx += 1;\n  }\n  return true;\n}));\nexport default all;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns the larger of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.maxBy, R.min\n * @example\n *\n *      R.max(789, 123); //=> 789\n *      R.max('a', 'b'); //=> 'b'\n */\nvar max = /*#__PURE__*/_curry2(function max(a, b) {\n  return b > a ? b : a;\n});\nexport default max;","export default function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n  return result;\n}","export default function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}","import _curry1 from './_curry1';\nimport _isArray from './_isArray';\nimport _isString from './_isString';\n\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n */\nvar _isArrayLike = /*#__PURE__*/_curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n  if (!x) {\n    return false;\n  }\n  if (typeof x !== 'object') {\n    return false;\n  }\n  if (_isString(x)) {\n    return false;\n  }\n  if (x.nodeType === 1) {\n    return !!x.length;\n  }\n  if (x.length === 0) {\n    return true;\n  }\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n  return false;\n});\nexport default _isArrayLike;","var XWrap = /*#__PURE__*/function () {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n  XWrap.prototype['@@transducer/init'] = function () {\n    throw new Error('init not implemented on XWrap');\n  };\n  XWrap.prototype['@@transducer/result'] = function (acc) {\n    return acc;\n  };\n  XWrap.prototype['@@transducer/step'] = function (acc, x) {\n    return this.f(acc, x);\n  };\n\n  return XWrap;\n}();\n\nexport default function _xwrap(fn) {\n  return new XWrap(fn);\n}","import _arity from './internal/_arity';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      var log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\nvar bind = /*#__PURE__*/_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\nexport default bind;","import _isArrayLike from './_isArrayLike';\nimport _xwrap from './_xwrap';\nimport bind from '../bind';\n\nfunction _arrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    idx += 1;\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _iterableReduce(xf, acc, iter) {\n  var step = iter.next();\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    step = iter.next();\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _methodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\n\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n\nexport default function _reduce(fn, acc, list) {\n  if (typeof fn === 'function') {\n    fn = _xwrap(fn);\n  }\n  if (_isArrayLike(list)) {\n    return _arrayReduce(fn, acc, list);\n  }\n  if (typeof list['fantasy-land/reduce'] === 'function') {\n    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n  }\n  if (list[symIterator] != null) {\n    return _iterableReduce(fn, acc, list[symIterator]());\n  }\n  if (typeof list.next === 'function') {\n    return _iterableReduce(fn, acc, list);\n  }\n  if (typeof list.reduce === 'function') {\n    return _methodReduce(fn, acc, list, 'reduce');\n  }\n\n  throw new TypeError('reduce: list must be array or iterable');\n}","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XMap = /*#__PURE__*/function () {\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n  XMap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return XMap;\n}();\n\nvar _xmap = /*#__PURE__*/_curry2(function _xmap(f, xf) {\n  return new XMap(f, xf);\n});\nexport default _xmap;","export default function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}","import _has from './_has';\n\nvar toString = Object.prototype.toString;\nvar _isArguments = function () {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n};\n\nexport default _isArguments;","import _curry1 from './internal/_curry1';\nimport _has from './internal/_has';\nimport _isArguments from './internal/_isArguments';\n\n// cover IE < 9 keys issues\nvar hasEnumBug = ! /*#__PURE__*/{ toString: null }.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n// Safari bug\nvar hasArgsEnumBug = /*#__PURE__*/function () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\n\nvar contains = function contains(list, item) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n};\n\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\nvar _keys = typeof Object.keys === 'function' && !hasArgsEnumBug ? function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n} : function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n  var prop, nIdx;\n  var ks = [];\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n      nIdx -= 1;\n    }\n  }\n  return ks;\n};\nvar keys = /*#__PURE__*/_curry1(_keys);\nexport default keys;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _map from './internal/_map';\nimport _reduce from './internal/_reduce';\nimport _xmap from './internal/_xmap';\nimport curryN from './curryN';\nimport keys from './keys';\n\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex\n * @example\n *\n *      var double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\nvar map = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function () {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n    case '[object Object]':\n      return _reduce(function (acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n    default:\n      return _map(fn, functor);\n  }\n}));\nexport default map;","import _curry2 from './internal/_curry2';\n\n/**\n * Retrieve the value at a given path.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n */\nvar path = /*#__PURE__*/_curry2(function path(paths, obj) {\n  var val = obj;\n  var idx = 0;\n  while (idx < paths.length) {\n    if (val == null) {\n      return;\n    }\n    val = val[paths[idx]];\n    idx += 1;\n  }\n  return val;\n});\nexport default path;","import _curry2 from './internal/_curry2';\nimport path from './path';\n\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig s -> {s: a} -> a | Undefined\n * @param {String} p The property name\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n */\n\nvar prop = /*#__PURE__*/_curry2(function prop(p, obj) {\n  return path([p], obj);\n});\nexport default prop;","import _curry2 from './internal/_curry2';\nimport map from './map';\nimport prop from './prop';\n\n/**\n * Returns a new list by plucking the same named property off all objects in\n * the list supplied.\n *\n * `pluck` will work on\n * any [functor](https://github.com/fantasyland/fantasy-land#functor) in\n * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => k -> f {k: v} -> f v\n * @param {Number|String} key The key name to pluck off of each object.\n * @param {Array} f The array or functor to consider.\n * @return {Array} The list of values for the given key.\n * @see R.props\n * @example\n *\n *      R.pluck('a')([{a: 1}, {a: 2}]); //=> [1, 2]\n *      R.pluck(0)([[1, 2], [3, 4]]);   //=> [1, 3]\n *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n */\nvar pluck = /*#__PURE__*/_curry2(function pluck(p, list) {\n  return map(prop(p), list);\n});\nexport default pluck;","import _curry3 from './internal/_curry3';\nimport _reduce from './internal/_reduce';\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\nvar reduce = /*#__PURE__*/_curry3(_reduce);\nexport default reduce;","import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\nimport max from './max';\nimport pluck from './pluck';\nimport reduce from './reduce';\n\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if every one of the provided predicates is satisfied\n * by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.anyPass\n * @example\n *\n *      var isQueen = R.propEq('rank', 'Q');\n *      var isSpade = R.propEq('suit', '♠︎');\n *      var isQueenOfSpades = R.allPass([isQueen, isSpade]);\n *\n *      isQueenOfSpades({rank: 'Q', suit: '♣︎'}); //=> false\n *      isQueenOfSpades({rank: 'Q', suit: '♠︎'}); //=> true\n */\nvar allPass = /*#__PURE__*/_curry1(function allPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function () {\n    var idx = 0;\n    var len = preds.length;\n    while (idx < len) {\n      if (!preds[idx].apply(this, arguments)) {\n        return false;\n      }\n      idx += 1;\n    }\n    return true;\n  });\n});\nexport default allPass;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if both arguments are `true`; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if it is falsy, otherwise the second argument.\n * @see R.both\n * @example\n *\n *      R.and(true, true); //=> true\n *      R.and(true, false); //=> false\n *      R.and(false, true); //=> false\n *      R.and(false, false); //=> false\n */\nvar and = /*#__PURE__*/_curry2(function and(a, b) {\n  return a && b;\n});\nexport default and;","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XAny = /*#__PURE__*/function () {\n  function XAny(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.any = false;\n  }\n  XAny.prototype['@@transducer/init'] = _xfBase.init;\n  XAny.prototype['@@transducer/result'] = function (result) {\n    if (!this.any) {\n      result = this.xf['@@transducer/step'](result, false);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XAny.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.any = true;\n      result = _reduced(this.xf['@@transducer/step'](result, true));\n    }\n    return result;\n  };\n\n  return XAny;\n}();\n\nvar _xany = /*#__PURE__*/_curry2(function _xany(f, xf) {\n  return new XAny(f, xf);\n});\nexport default _xany;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xany from './internal/_xany';\n\n/**\n * Returns `true` if at least one of elements of the list match the predicate,\n * `false` otherwise.\n *\n * Dispatches to the `any` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n *         otherwise.\n * @see R.all, R.none, R.transduce\n * @example\n *\n *      var lessThan0 = R.flip(R.lt)(0);\n *      var lessThan2 = R.flip(R.lt)(2);\n *      R.any(lessThan0)([1, 2]); //=> false\n *      R.any(lessThan2)([1, 2]); //=> true\n */\nvar any = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['any'], _xany, function any(fn, list) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (fn(list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n}));\nexport default any;","import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\nimport max from './max';\nimport pluck from './pluck';\nimport reduce from './reduce';\n\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if at least one of the provided predicates is\n * satisfied by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.allPass\n * @example\n *\n *      var isClub = R.propEq('suit', '♣');\n *      var isSpade = R.propEq('suit', '♠');\n *      var isBlackCard = R.anyPass([isClub, isSpade]);\n *\n *      isBlackCard({rank: '10', suit: '♣'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♠'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♦'}); //=> false\n */\nvar anyPass = /*#__PURE__*/_curry1(function anyPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function () {\n    var idx = 0;\n    var len = preds.length;\n    while (idx < len) {\n      if (preds[idx].apply(this, arguments)) {\n        return true;\n      }\n      idx += 1;\n    }\n    return false;\n  });\n});\nexport default anyPass;","import _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\nimport _reduce from './internal/_reduce';\nimport map from './map';\n\n/**\n * ap applies a list of functions to a list of values.\n *\n * Dispatches to the `ap` method of the second argument, if present. Also\n * treats curried functions as applicatives.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig [a -> b] -> [a] -> [b]\n * @sig Apply f => f (a -> b) -> f a -> f b\n * @sig (a -> b -> c) -> (a -> b) -> (a -> c)\n * @param {*} applyF\n * @param {*} applyX\n * @return {*}\n * @example\n *\n *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n *      R.ap([R.concat('tasty '), R.toUpper], ['pizza', 'salad']); //=> [\"tasty pizza\", \"tasty salad\", \"PIZZA\", \"SALAD\"]\n *\n *      // R.ap can also be used as S combinator\n *      // when only two functions are passed\n *      R.ap(R.concat, R.toUpper)('Ramda') //=> 'RamdaRAMDA'\n * @symb R.ap([f, g], [a, b]) = [f(a), f(b), g(a), g(b)]\n */\nvar ap = /*#__PURE__*/_curry2(function ap(applyF, applyX) {\n  return typeof applyX['fantasy-land/ap'] === 'function' ? applyX['fantasy-land/ap'](applyF) : typeof applyF.ap === 'function' ? applyF.ap(applyX) : typeof applyF === 'function' ? function (x) {\n    return applyF(x)(applyX(x));\n  } :\n  // else\n  _reduce(function (acc, f) {\n    return _concat(acc, map(f, applyX));\n  }, [], applyF);\n});\nexport default ap;","import _concat from './_concat';\nimport _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XAperture = /*#__PURE__*/function () {\n  function XAperture(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n  XAperture.prototype['@@transducer/init'] = _xfBase.init;\n  XAperture.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XAperture.prototype['@@transducer/step'] = function (result, input) {\n    this.store(input);\n    return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;\n  };\n  XAperture.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n  XAperture.prototype.getCopy = function () {\n    return _concat(Array.prototype.slice.call(this.acc, this.pos), Array.prototype.slice.call(this.acc, 0, this.pos));\n  };\n\n  return XAperture;\n}();\n\nvar _xaperture = /*#__PURE__*/_curry2(function _xaperture(n, xf) {\n  return new XAperture(n, xf);\n});\nexport default _xaperture;","import _aperture from './internal/_aperture';\nimport _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xaperture from './internal/_xaperture';\n\n/**\n * Returns a new list, composed of n-tuples of consecutive elements. If `n` is\n * greater than the length of the list, an empty list is returned.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @param {Number} n The size of the tuples to create\n * @param {Array} list The list to split into `n`-length tuples\n * @return {Array} The resulting list of `n`-length tuples\n * @see R.transduce\n * @example\n *\n *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]\n *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\n *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []\n */\nvar aperture = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xaperture, _aperture));\nexport default aperture;","export default function _aperture(n, list) {\n  var idx = 0;\n  var limit = list.length - (n - 1);\n  var acc = new Array(limit >= 0 ? limit : 0);\n  while (idx < limit) {\n    acc[idx] = Array.prototype.slice.call(list, idx, idx + n);\n    idx += 1;\n  }\n  return acc;\n}","import _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Returns a new list containing the contents of the given list, followed by\n * the given element.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The element to add to the end of the new list.\n * @param {Array} list The list of elements to add a new item to.\n *        list.\n * @return {Array} A new list containing the elements of the old list followed by `el`.\n * @see R.prepend\n * @example\n *\n *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n *      R.append('tests', []); //=> ['tests']\n *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n */\nvar append = /*#__PURE__*/_curry2(function append(el, list) {\n  return _concat(list, [el]);\n});\nexport default append;","import _curry2 from './internal/_curry2';\n\n/**\n * Applies function `fn` to the argument list `args`. This is useful for\n * creating a fixed-arity function from a variadic function. `fn` should be a\n * bound function if context is significant.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> a) -> [*] -> a\n * @param {Function} fn The function which will be called with `args`\n * @param {Array} args The arguments to call `fn` with\n * @return {*} result The result, equivalent to `fn(...args)`\n * @see R.call, R.unapply\n * @example\n *\n *      var nums = [1, 2, 3, -99, 42, 6, 7];\n *      R.apply(Math.max, nums); //=> 42\n * @symb R.apply(f, [a, b, c]) = f(a, b, c)\n */\nvar apply = /*#__PURE__*/_curry2(function apply(fn, args) {\n  return fn.apply(this, args);\n});\nexport default apply;","import _curry1 from './internal/_curry1';\nimport keys from './keys';\n\n/**\n * Returns a list of all the enumerable own properties of the supplied object.\n * Note that the order of the output array is not guaranteed across different\n * JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own properties.\n * @see R.valuesIn, R.keys\n * @example\n *\n *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n */\nvar values = /*#__PURE__*/_curry1(function values(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var vals = [];\n  var idx = 0;\n  while (idx < len) {\n    vals[idx] = obj[props[idx]];\n    idx += 1;\n  }\n  return vals;\n});\nexport default values;","import _curry1 from './internal/_curry1';\nimport apply from './apply';\nimport curryN from './curryN';\nimport map from './map';\nimport max from './max';\nimport pluck from './pluck';\nimport reduce from './reduce';\nimport values from './values';\n\n/**\n * Given a spec object recursively mapping properties to functions, creates a\n * function producing an object of the same structure, by mapping each property\n * to the result of calling its associated function with the supplied arguments.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig {k: ((a, b, ..., m) -> v)} -> ((a, b, ..., m) -> {k: v})\n * @param {Object} spec an object recursively mapping properties to functions for\n *        producing the values for these properties.\n * @return {Function} A function that returns an object of the same structure\n * as `spec', with each property set to the value returned by calling its\n * associated function with the supplied arguments.\n * @see R.converge, R.juxt\n * @example\n *\n *      var getMetrics = R.applySpec({\n *        sum: R.add,\n *        nested: { mul: R.multiply }\n *      });\n *      getMetrics(2, 4); // => { sum: 6, nested: { mul: 8 } }\n * @symb R.applySpec({ x: f, y: { z: g } })(a, b) = { x: f(a, b), y: { z: g(a, b) } }\n */\nvar applySpec = /*#__PURE__*/_curry1(function applySpec(spec) {\n  spec = map(function (v) {\n    return typeof v == 'function' ? v : applySpec(v);\n  }, spec);\n  return curryN(reduce(max, 0, pluck('length', values(spec))), function () {\n    var args = arguments;\n    return map(function (f) {\n      return apply(f, args);\n    }, spec);\n  });\n});\nexport default applySpec;","import _curry2 from './internal/_curry2';\n\n/**\n* Takes a value and applies a function to it.\n*\n* This function is also known as the `thrush` combinator.\n*\n* @func\n* @memberOf R\n * @since v0.25.0\n* @category Function\n* @sig a -> (a -> b) -> b\n* @param {*} x The value\n* @param {Function} f The function to apply\n* @return {*} The result of applying `f` to `x`\n* @example\n*\n*      var t42 = R.applyTo(42);\n*      t42(R.identity); //=> 42\n*      t42(R.add(1)); //=> 43\n*/\nvar applyTo = /*#__PURE__*/_curry2(function applyTo(x, f) {\n  return f(x);\n});\nexport default applyTo;","import _curry3 from './internal/_curry3';\n\n/**\n * Makes an ascending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) < fn(b), `1` if fn(b) < fn(a), otherwise `0`\n * @see R.descend\n * @example\n *\n *      var byAge = R.ascend(R.prop('age'));\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByYoungestFirst = R.sort(byAge, people);\n */\nvar ascend = /*#__PURE__*/_curry3(function ascend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa < bb ? -1 : aa > bb ? 1 : 0;\n});\nexport default ascend;","import _curry3 from './internal/_curry3';\n\n/**\n * Makes a shallow clone of an object, setting or overriding the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig String -> a -> {k: v} -> {k: v}\n * @param {String} prop The property name to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except for the changed property.\n * @see R.dissoc\n * @example\n *\n *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n */\nvar assoc = /*#__PURE__*/_curry3(function assoc(prop, val, obj) {\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  result[prop] = val;\n  return result;\n});\nexport default assoc;","/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nexport default Number.isInteger || function _isInteger(n) {\n  return n << 0 === n;\n};","import _curry1 from './internal/_curry1';\n\n/**\n * Checks if the input value is `null` or `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Type\n * @sig * -> Boolean\n * @param {*} x The value to test.\n * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n * @example\n *\n *      R.isNil(null); //=> true\n *      R.isNil(undefined); //=> true\n *      R.isNil(0); //=> false\n *      R.isNil([]); //=> false\n */\nvar isNil = /*#__PURE__*/_curry1(function isNil(x) {\n  return x == null;\n});\nexport default isNil;","import _curry3 from './internal/_curry3';\nimport _has from './internal/_has';\nimport _isArray from './internal/_isArray';\nimport _isInteger from './internal/_isInteger';\nimport assoc from './assoc';\nimport isNil from './isNil';\n\n/**\n * Makes a shallow clone of an object, setting or overriding the nodes required\n * to create the given path, and placing the specific value at the tail end of\n * that path. Note that this copies and flattens prototype properties onto the\n * new object as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> {a}\n * @param {Array} path the path to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except along the specified path.\n * @see R.dissocPath\n * @example\n *\n *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n *\n *      // Any missing or non-object keys in path will be overridden\n *      R.assocPath(['a', 'b', 'c'], 42, {a: 5}); //=> {a: {b: {c: 42}}}\n */\nvar assocPath = /*#__PURE__*/_curry3(function assocPath(path, val, obj) {\n  if (path.length === 0) {\n    return val;\n  }\n  var idx = path[0];\n  if (path.length > 1) {\n    var nextObj = !isNil(obj) && _has(idx, obj) ? obj[idx] : _isInteger(path[1]) ? [] : {};\n    val = assocPath(Array.prototype.slice.call(path, 1), val, nextObj);\n  }\n  if (_isInteger(idx) && _isArray(obj)) {\n    var arr = [].concat(obj);\n    arr[idx] = val;\n    return arr;\n  } else {\n    return assoc(idx, val, obj);\n  }\n});\nexport default assocPath;","import _curry2 from './internal/_curry2';\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly `n` parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} n The desired arity of the new function.\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity `n`.\n * @see R.binary, R.unary\n * @example\n *\n *      var takesTwoArgs = (a, b) => [a, b];\n *\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      var takesOneArg = R.nAry(1, takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only `n` arguments are passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.nAry(0, f)(a, b) = f()\n * @symb R.nAry(1, f)(a, b) = f(a)\n * @symb R.nAry(2, f)(a, b) = f(a, b)\n */\nvar nAry = /*#__PURE__*/_curry2(function nAry(n, fn) {\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.call(this);\n      };\n    case 1:\n      return function (a0) {\n        return fn.call(this, a0);\n      };\n    case 2:\n      return function (a0, a1) {\n        return fn.call(this, a0, a1);\n      };\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.call(this, a0, a1, a2);\n      };\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.call(this, a0, a1, a2, a3);\n      };\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.call(this, a0, a1, a2, a3, a4);\n      };\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5);\n      };\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6);\n      };\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);\n      };\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);\n      };\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n      };\n    default:\n      throw new Error('First argument to nAry must be a non-negative integer no greater than ten');\n  }\n});\nexport default nAry;","import _curry1 from './internal/_curry1';\nimport nAry from './nAry';\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 2 parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (* -> c) -> (a, b -> c)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 2.\n * @see R.nAry, R.unary\n * @example\n *\n *      var takesThreeArgs = function(a, b, c) {\n *        return [a, b, c];\n *      };\n *      takesThreeArgs.length; //=> 3\n *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]\n *\n *      var takesTwoArgs = R.binary(takesThreeArgs);\n *      takesTwoArgs.length; //=> 2\n *      // Only 2 arguments are passed to the wrapped function\n *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]\n * @symb R.binary(f)(a, b, c) = f(a, b)\n */\nvar binary = /*#__PURE__*/_curry1(function binary(fn) {\n  return nAry(2, fn);\n});\nexport default binary;","export default function _isFunction(x) {\n  return Object.prototype.toString.call(x) === '[object Function]';\n}","import _curry2 from './internal/_curry2';\nimport _reduce from './internal/_reduce';\nimport ap from './ap';\nimport curryN from './curryN';\nimport map from './map';\n\n/**\n * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig Number -> (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.lift, R.ap\n * @example\n *\n *      var madd3 = R.liftN(3, (...args) => R.sum(args));\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n */\nvar liftN = /*#__PURE__*/_curry2(function liftN(arity, fn) {\n  var lifted = curryN(arity, fn);\n  return curryN(arity, function () {\n    return _reduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));\n  });\n});\nexport default liftN;","import _curry1 from './internal/_curry1';\nimport liftN from './liftN';\n\n/**\n * \"lifts\" a function of arity > 1 so that it may \"map over\" a list, Function or other\n * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.liftN\n * @example\n *\n *      var madd3 = R.lift((a, b, c) => a + b + c);\n *\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n *\n *      var madd5 = R.lift((a, b, c, d, e) => a + b + c + d + e);\n *\n *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n */\nvar lift = /*#__PURE__*/_curry1(function lift(fn) {\n  return liftN(fn.length, fn);\n});\nexport default lift;","import _curry2 from './internal/_curry2';\nimport _isFunction from './internal/_isFunction';\nimport and from './and';\nimport lift from './lift';\n\n/**\n * A function which calls the two provided functions and returns the `&&`\n * of the results.\n * It returns the result of the first function if it is false-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * false-y value.\n *\n * In addition to functions, `R.both` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f A predicate\n * @param {Function} g Another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n * @see R.and\n * @example\n *\n *      var gt10 = R.gt(R.__, 10)\n *      var lt20 = R.lt(R.__, 20)\n *      var f = R.both(gt10, lt20);\n *      f(15); //=> true\n *      f(30); //=> false\n */\nvar both = /*#__PURE__*/_curry2(function both(f, g) {\n  return _isFunction(f) ? function _both() {\n    return f.apply(this, arguments) && g.apply(this, arguments);\n  } : lift(and)(f, g);\n});\nexport default both;","import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\n\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN\n * @example\n *\n *      var addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      var curriedAddFourNumbers = R.curry(addFourNumbers);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\nvar curry = /*#__PURE__*/_curry1(function curry(fn) {\n  return curryN(fn.length, fn);\n});\nexport default curry;","import curry from './curry';\n\n/**\n * Returns the result of calling its first argument with the remaining\n * arguments. This is occasionally useful as a converging function for\n * [`R.converge`](#converge): the first branch can produce a function while the\n * remaining branches produce values to be passed to that function as its\n * arguments.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig (*... -> a),*... -> a\n * @param {Function} fn The function to apply to the remaining arguments.\n * @param {...*} args Any number of positional arguments.\n * @return {*}\n * @see R.apply\n * @example\n *\n *      R.call(R.add, 1, 2); //=> 3\n *\n *      var indentN = R.pipe(R.repeat(' '),\n *                           R.join(''),\n *                           R.replace(/^(?!$)/gm));\n *\n *      var format = R.converge(R.call, [\n *                                  R.pipe(R.prop('indent'), indentN),\n *                                  R.prop('value')\n *                              ]);\n *\n *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n * @symb R.call(f, a, b) = f(a, b)\n */\nvar call = /*#__PURE__*/curry(function call(fn) {\n  return fn.apply(this, Array.prototype.slice.call(arguments, 1));\n});\nexport default call;","import _isArrayLike from './_isArrayLike';\n\n/**\n * `_makeFlat` is a helper function that returns a one-level or fully recursive\n * function based on the flag passed in.\n *\n * @private\n */\nexport default function _makeFlat(recursive) {\n  return function flatt(list) {\n    var value, jlen, j;\n    var result = [];\n    var idx = 0;\n    var ilen = list.length;\n\n    while (idx < ilen) {\n      if (_isArrayLike(list[idx])) {\n        value = recursive ? flatt(list[idx]) : list[idx];\n        j = 0;\n        jlen = value.length;\n        while (j < jlen) {\n          result[result.length] = value[j];\n          j += 1;\n        }\n      } else {\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n    return result;\n  };\n}","import _forceReduced from './_forceReduced';\nimport _isArrayLike from './_isArrayLike';\nimport _reduce from './_reduce';\nimport _xfBase from './_xfBase';\n\nvar preservingReduced = function (xf) {\n  return {\n    '@@transducer/init': _xfBase.init,\n    '@@transducer/result': function (result) {\n      return xf['@@transducer/result'](result);\n    },\n    '@@transducer/step': function (result, input) {\n      var ret = xf['@@transducer/step'](result, input);\n      return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n    }\n  };\n};\n\nvar _flatCat = function _xcat(xf) {\n  var rxf = preservingReduced(xf);\n  return {\n    '@@transducer/init': _xfBase.init,\n    '@@transducer/result': function (result) {\n      return rxf['@@transducer/result'](result);\n    },\n    '@@transducer/step': function (result, input) {\n      return !_isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\n    }\n  };\n};\n\nexport default _flatCat;","export default function _forceReduced(x) {\n  return {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _makeFlat from './internal/_makeFlat';\nimport _xchain from './internal/_xchain';\nimport map from './map';\n\n/**\n * `chain` maps a function over a list and concatenates the results. `chain`\n * is also known as `flatMap` in some libraries\n *\n * Dispatches to the `chain` method of the second argument, if present,\n * according to the [FantasyLand Chain spec](https://github.com/fantasyland/fantasy-land#chain).\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain m => (a -> m b) -> m a -> m b\n * @param {Function} fn The function to map with\n * @param {Array} list The list to map over\n * @return {Array} The result of flat-mapping `list` with `fn`\n * @example\n *\n *      var duplicate = n => [n, n];\n *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n *\n *      R.chain(R.append, R.head)([1, 2, 3]); //=> [1, 2, 3, 1]\n */\nvar chain = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['fantasy-land/chain', 'chain'], _xchain, function chain(fn, monad) {\n  if (typeof monad === 'function') {\n    return function (x) {\n      return fn(monad(x))(x);\n    };\n  }\n  return _makeFlat(false)(map(fn, monad));\n}));\nexport default chain;","import _curry2 from './_curry2';\nimport _flatCat from './_flatCat';\nimport map from '../map';\n\nvar _xchain = /*#__PURE__*/_curry2(function _xchain(f, xf) {\n  return map(f, _flatCat(xf));\n});\nexport default _xchain;","import _curry3 from './internal/_curry3';\n\n/**\n * Restricts a number to be within a range.\n *\n * Also works for other ordered types such as Strings and Dates.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Relation\n * @sig Ord a => a -> a -> a -> a\n * @param {Number} minimum The lower limit of the clamp (inclusive)\n * @param {Number} maximum The upper limit of the clamp (inclusive)\n * @param {Number} value Value to be clamped\n * @return {Number} Returns `minimum` when `val < minimum`, `maximum` when `val > maximum`, returns `val` otherwise\n * @example\n *\n *      R.clamp(1, 10, -5) // => 1\n *      R.clamp(1, 10, 15) // => 10\n *      R.clamp(1, 10, 4)  // => 4\n */\nvar clamp = /*#__PURE__*/_curry3(function clamp(min, max, value) {\n  if (min > max) {\n    throw new Error('min must not be greater than max in clamp(min, max, value)');\n  }\n  return value < min ? min : value > max ? max : value;\n});\nexport default clamp;","export default function _cloneRegExp(pattern) {\n                                  return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n}","import _curry1 from './internal/_curry1';\n\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\nvar type = /*#__PURE__*/_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\nexport default type;","import _cloneRegExp from './_cloneRegExp';\nimport type from '../type';\n\n/**\n * Copies an object.\n *\n * @private\n * @param {*} value The value to be copied\n * @param {Array} refFrom Array containing the source references\n * @param {Array} refTo Array containing the copied source references\n * @param {Boolean} deep Whether or not to perform deep cloning.\n * @return {*} The copied value.\n */\nexport default function _clone(value, refFrom, refTo, deep) {\n  var copy = function copy(copiedValue) {\n    var len = refFrom.length;\n    var idx = 0;\n    while (idx < len) {\n      if (value === refFrom[idx]) {\n        return refTo[idx];\n      }\n      idx += 1;\n    }\n    refFrom[idx + 1] = value;\n    refTo[idx + 1] = copiedValue;\n    for (var key in value) {\n      copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];\n    }\n    return copiedValue;\n  };\n  switch (type(value)) {\n    case 'Object':\n      return copy({});\n    case 'Array':\n      return copy([]);\n    case 'Date':\n      return new Date(value.valueOf());\n    case 'RegExp':\n      return _cloneRegExp(value);\n    default:\n      return value;\n  }\n}","import _clone from './internal/_clone';\nimport _curry1 from './internal/_curry1';\n\n/**\n * Creates a deep copy of the value which may contain (nested) `Array`s and\n * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are\n * assigned by reference rather than copied\n *\n * Dispatches to a `clone` method if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {*} -> {*}\n * @param {*} value The object or array to clone\n * @return {*} A deeply cloned copy of `val`\n * @example\n *\n *      var objects = [{}, {}, {}];\n *      var objectsClone = R.clone(objects);\n *      objects === objectsClone; //=> false\n *      objects[0] === objectsClone[0]; //=> false\n */\nvar clone = /*#__PURE__*/_curry1(function clone(value) {\n  return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, [], [], true);\n});\nexport default clone;","import _curry1 from './internal/_curry1';\n\n/**\n * Makes a comparator function out of a function that reports whether the first\n * element is less than the second.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b) -> Boolean) -> ((a, b) -> Number)\n * @param {Function} pred A predicate function of arity two which will return `true` if the first argument\n * is less than the second, `false` otherwise\n * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`\n * @example\n *\n *      var byAge = R.comparator((a, b) => a.age < b.age);\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByIncreasingAge = R.sort(byAge, people);\n */\nvar comparator = /*#__PURE__*/_curry1(function comparator(pred) {\n  return function (a, b) {\n    return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;\n  };\n});\nexport default comparator;","import _curry1 from './internal/_curry1';\n\n/**\n * A function that returns the `!` of its argument. It will return `true` when\n * passed false-y value, and `false` when passed a truth-y one.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig * -> Boolean\n * @param {*} a any value\n * @return {Boolean} the logical inverse of passed argument.\n * @see R.complement\n * @example\n *\n *      R.not(true); //=> false\n *      R.not(false); //=> true\n *      R.not(0); //=> true\n *      R.not(1); //=> false\n */\nvar not = /*#__PURE__*/_curry1(function not(a) {\n  return !a;\n});\nexport default not;","import lift from './lift';\nimport not from './not';\n\n/**\n * Takes a function `f` and returns a function `g` such that if called with the same arguments\n * when `f` returns a \"truthy\" value, `g` returns `false` and when `f` returns a \"falsy\" value `g` returns `true`.\n *\n * `R.complement` may be applied to any functor\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> *) -> (*... -> Boolean)\n * @param {Function} f\n * @return {Function}\n * @see R.not\n * @example\n *\n *      var isNotNil = R.complement(R.isNil);\n *      isNil(null); //=> true\n *      isNotNil(null); //=> false\n *      isNil(7); //=> false\n *      isNotNil(7); //=> true\n */\nvar complement = /*#__PURE__*/lift(not);\nexport default complement;","export default function _pipe(f, g) {\n  return function () {\n    return g.call(this, f.apply(this, arguments));\n  };\n}","import _isArray from './_isArray';\n\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\nexport default function _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n    if (length === 0) {\n      return fn();\n    }\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}","import _checkForMethod from './internal/_checkForMethod';\nimport _curry3 from './internal/_curry3';\n\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\nvar slice = /*#__PURE__*/_curry3( /*#__PURE__*/_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\nexport default slice;","import _checkForMethod from './internal/_checkForMethod';\nimport _curry1 from './internal/_curry1';\nimport slice from './slice';\n\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\nvar tail = /*#__PURE__*/_curry1( /*#__PURE__*/_checkForMethod('tail', /*#__PURE__*/slice(1, Infinity)));\nexport default tail;","import _arity from './internal/_arity';\nimport _pipe from './internal/_pipe';\nimport reduce from './reduce';\nimport tail from './tail';\n\n/**\n * Performs left-to-right function composition. The leftmost function may have\n * any arity; the remaining functions must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      var f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n */\nexport default function pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n}","import _curry1 from './internal/_curry1';\nimport _isString from './internal/_isString';\n\n/**\n * Returns a new list or string with the elements or characters in reverse\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {Array|String} list\n * @return {Array|String}\n * @example\n *\n *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n *      R.reverse([1, 2]);     //=> [2, 1]\n *      R.reverse([1]);        //=> [1]\n *      R.reverse([]);         //=> []\n *\n *      R.reverse('abc');      //=> 'cba'\n *      R.reverse('ab');       //=> 'ba'\n *      R.reverse('a');        //=> 'a'\n *      R.reverse('');         //=> ''\n */\nvar reverse = /*#__PURE__*/_curry1(function reverse(list) {\n  return _isString(list) ? list.split('').reverse().join('') : Array.prototype.slice.call(list, 0).reverse();\n});\nexport default reverse;","import pipe from './pipe';\nimport reverse from './reverse';\n\n/**\n * Performs right-to-left function composition. The rightmost function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of compose is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipe\n * @example\n *\n *      var classyGreeting = (firstName, lastName) => \"The name's \" + lastName + \", \" + firstName + \" \" + lastName\n *      var yellGreeting = R.compose(R.toUpper, classyGreeting);\n *      yellGreeting('James', 'Bond'); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.compose(Math.abs, R.add(1), R.multiply(2))(-4) //=> 7\n *\n * @symb R.compose(f, g, h)(a, b) = f(g(h(a, b)))\n */\nexport default function compose() {\n  if (arguments.length === 0) {\n    throw new Error('compose requires at least one argument');\n  }\n  return pipe.apply(this, reverse(arguments));\n}","import chain from './chain';\nimport compose from './compose';\nimport map from './map';\n\n/**\n * Returns the right-to-left Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.composeK(h, g, f)` is equivalent to `R.compose(R.chain(h), R.chain(g), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((y -> m z), (x -> m y), ..., (a -> m b)) -> (a -> m z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipeK\n * @example\n *\n *       //  get :: String -> Object -> Maybe *\n *       var get = R.curry((propName, obj) => Maybe(obj[propName]))\n *\n *       //  getStateCode :: Maybe String -> Maybe String\n *       var getStateCode = R.composeK(\n *         R.compose(Maybe.of, R.toUpper),\n *         get('state'),\n *         get('address'),\n *         get('user'),\n *       );\n *       getStateCode({\"user\":{\"address\":{\"state\":\"ny\"}}}); //=> Maybe.Just(\"NY\")\n *       getStateCode({}); //=> Maybe.Nothing()\n * @symb R.composeK(f, g, h)(a) = R.chain(f, R.chain(g, h(a)))\n */\nexport default function composeK() {\n  if (arguments.length === 0) {\n    throw new Error('composeK requires at least one argument');\n  }\n  var init = Array.prototype.slice.call(arguments);\n  var last = init.pop();\n  return compose(compose.apply(this, map(chain, init)), last);\n}","export default function _pipeP(f, g) {\n  return function () {\n    var ctx = this;\n    return f.apply(ctx, arguments).then(function (x) {\n      return g.call(ctx, x);\n    });\n  };\n}","import _arity from './internal/_arity';\nimport _pipeP from './internal/_pipeP';\nimport reduce from './reduce';\nimport tail from './tail';\n\n/**\n * Performs left-to-right composition of one or more Promise-returning\n * functions. The leftmost function may have any arity; the remaining functions\n * must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.composeP\n * @example\n *\n *      //  followersForUser :: String -> Promise [User]\n *      var followersForUser = R.pipeP(db.getUserById, db.getFollowers);\n */\nexport default function pipeP() {\n  if (arguments.length === 0) {\n    throw new Error('pipeP requires at least one argument');\n  }\n  return _arity(arguments[0].length, reduce(_pipeP, arguments[0], tail(arguments)));\n}","import pipeP from './pipeP';\nimport reverse from './reverse';\n\n/**\n * Performs right-to-left composition of one or more Promise-returning\n * functions. The rightmost function may have any arity; the remaining\n * functions must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((y -> Promise z), (x -> Promise y), ..., (a -> Promise b)) -> (a -> Promise z)\n * @param {...Function} functions The functions to compose\n * @return {Function}\n * @see R.pipeP\n * @example\n *\n *      var db = {\n *        users: {\n *          JOE: {\n *            name: 'Joe',\n *            followers: ['STEVE', 'SUZY']\n *          }\n *        }\n *      }\n *\n *      // We'll pretend to do a db lookup which returns a promise\n *      var lookupUser = (userId) => Promise.resolve(db.users[userId])\n *      var lookupFollowers = (user) => Promise.resolve(user.followers)\n *      lookupUser('JOE').then(lookupFollowers)\n *\n *      //  followersForUser :: String -> Promise [UserId]\n *      var followersForUser = R.composeP(lookupFollowers, lookupUser);\n *      followersForUser('JOE').then(followers => console.log('Followers:', followers))\n *      // Followers: [\"STEVE\",\"SUZY\"]\n */\nexport default function composeP() {\n  if (arguments.length === 0) {\n    throw new Error('composeP requires at least one argument');\n  }\n  return pipeP.apply(this, reverse(arguments));\n}","export default function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n  return list;\n}","export default function _containsWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n}","import _curry2 from './internal/_curry2';\n\n/**\n * Returns true if its arguments are identical, false otherwise. Values are\n * identical if they reference the same memory. `NaN` is identical to `NaN`;\n * `0` and `-0` are not identical.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      var o = {};\n *      R.identical(o, o); //=> true\n *      R.identical(1, 1); //=> true\n *      R.identical(1, '1'); //=> false\n *      R.identical([], []); //=> false\n *      R.identical(0, -0); //=> false\n *      R.identical(NaN, NaN); //=> true\n */\nvar identical = /*#__PURE__*/_curry2(function identical(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n});\nexport default identical;","import _arrayFromIterator from './_arrayFromIterator';\nimport _containsWith from './_containsWith';\nimport _functionName from './_functionName';\nimport _has from './_has';\nimport identical from '../identical';\nimport keys from '../keys';\nimport type from '../type';\n\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparision of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\n\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n  var b = _arrayFromIterator(bIterator);\n\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  }\n\n  // if *a* array contains any element that is not included in *b*\n  return !_containsWith(function (b, aItem) {\n    return !_containsWith(eq, aItem, b);\n  }, b, a);\n}\n\nexport default function _equals(a, b, stackA, stackB) {\n  if (identical(a, b)) {\n    return true;\n  }\n\n  var typeA = type(a);\n\n  if (typeA !== type(b)) {\n    return false;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n      break;\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n      break;\n    case 'Date':\n      if (!identical(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n      break;\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n      break;\n  }\n\n  var idx = stackA.length - 1;\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n    idx -= 1;\n  }\n\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n\n  idx = keysA.length - 1;\n  while (idx >= 0) {\n    var key = keysA[idx];\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n    idx -= 1;\n  }\n  return true;\n}","export default function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n}","import _curry2 from './internal/_curry2';\nimport _equals from './internal/_equals';\n\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      var a = {}; a.v = a;\n *      var b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\nvar equals = /*#__PURE__*/_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\nexport default equals;","import equals from '../equals';\n\nexport default function _indexOf(list, a, idx) {\n  var inf, item;\n  // Array.prototype.indexOf doesn't exist below IE9\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n          while (idx < list.length) {\n            item = list[idx];\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        }\n        // non-zero numbers can utilise Set\n        return list.indexOf(a, idx);\n\n      // all these types can utilise Set\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n    }\n  }\n  // anything else not covered above, defer to R.equals\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}","import _indexOf from './_indexOf';\n\nexport default function _contains(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n}","export default function _quote(s) {\n  var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b') // \\b matches word boundary; [\\b] matches backspace\n  .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n\n  return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n}","/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nvar pad = function pad(n) {\n  return (n < 10 ? '0' : '') + n;\n};\n\nvar _toISOString = typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n  return d.toISOString();\n} : function _toISOString(d) {\n  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n};\n\nexport default _toISOString;","export default function _complement(f) {\n  return function () {\n    return !f.apply(this, arguments);\n  };\n}","export default function _filter(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      result[result.length] = list[idx];\n    }\n    idx += 1;\n  }\n  return result;\n}","export default function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n}","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XFilter = /*#__PURE__*/function () {\n  function XFilter(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n  XFilter.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return XFilter;\n}();\n\nvar _xfilter = /*#__PURE__*/_curry2(function _xfilter(f, xf) {\n  return new XFilter(f, xf);\n});\nexport default _xfilter;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _filter from './internal/_filter';\nimport _isObject from './internal/_isObject';\nimport _reduce from './internal/_reduce';\nimport _xfilter from './internal/_xfilter';\nimport keys from './keys';\n\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      var isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nvar filter = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['filter'], _xfilter, function (pred, filterable) {\n  return _isObject(filterable) ? _reduce(function (acc, key) {\n    if (pred(filterable[key])) {\n      acc[key] = filterable[key];\n    }\n    return acc;\n  }, {}, keys(filterable)) :\n  // else\n  _filter(pred, filterable);\n}));\nexport default filter;","import _complement from './internal/_complement';\nimport _curry2 from './internal/_curry2';\nimport filter from './filter';\n\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      var isOdd = (n) => n % 2 === 1;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nvar reject = /*#__PURE__*/_curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\nexport default reject;","import _curry1 from './internal/_curry1';\nimport _toString from './internal/_toString';\n\n/**\n * Returns the string representation of the given value. `eval`'ing the output\n * should result in a value equivalent to the input value. Many of the built-in\n * `toString` methods do not satisfy this requirement.\n *\n * If the given value is an `[object Object]` with a `toString` method other\n * than `Object.prototype.toString`, this method is invoked with no arguments\n * to produce the return value. This means user-defined constructor functions\n * can provide a suitable `toString` method. For example:\n *\n *     function Point(x, y) {\n *       this.x = x;\n *       this.y = y;\n *     }\n *\n *     Point.prototype.toString = function() {\n *       return 'new Point(' + this.x + ', ' + this.y + ')';\n *     };\n *\n *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category String\n * @sig * -> String\n * @param {*} val\n * @return {String}\n * @example\n *\n *      R.toString(42); //=> '42'\n *      R.toString('abc'); //=> '\"abc\"'\n *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n */\nvar toString = /*#__PURE__*/_curry1(function toString(val) {\n  return _toString(val, []);\n});\nexport default toString;","import _contains from './_contains';\nimport _map from './_map';\nimport _quote from './_quote';\nimport _toISOString from './_toISOString';\nimport keys from '../keys';\nimport reject from '../reject';\n\nexport default function _toString(x, seen) {\n  var recur = function recur(y) {\n    var xs = seen.concat([x]);\n    return _contains(y, xs) ? '<Circular>' : _toString(y, xs);\n  };\n\n  //  mapPairs :: (Object, [String]) -> [String]\n  var mapPairs = function (obj, keys) {\n    return _map(function (k) {\n      return _quote(k) + ': ' + recur(obj[k]);\n    }, keys.slice().sort());\n  };\n\n  switch (Object.prototype.toString.call(x)) {\n    case '[object Arguments]':\n      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n    case '[object Array]':\n      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n        return (/^\\d+$/.test(k)\n        );\n      }, keys(x)))).join(', ') + ']';\n    case '[object Boolean]':\n      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n    case '[object Date]':\n      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n    case '[object Null]':\n      return 'null';\n    case '[object Number]':\n      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n    case '[object String]':\n      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n    case '[object Undefined]':\n      return 'undefined';\n    default:\n      if (typeof x.toString === 'function') {\n        var repr = x.toString();\n        if (repr !== '[object Object]') {\n          return repr;\n        }\n      }\n      return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n  }\n}","import _curry2 from './internal/_curry2';\nimport _isArray from './internal/_isArray';\nimport _isFunction from './internal/_isFunction';\nimport _isString from './internal/_isString';\nimport toString from './toString';\n\n/**\n * Returns the result of concatenating the given lists or strings.\n *\n * Note: `R.concat` expects both arguments to be of the same type,\n * unlike the native `Array.prototype.concat` method. It will throw\n * an error if you `concat` an Array with a non-Array value.\n *\n * Dispatches to the `concat` method of the first argument, if present.\n * Can also concatenate two members of a [fantasy-land\n * compatible semigroup](https://github.com/fantasyland/fantasy-land#semigroup).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @sig String -> String -> String\n * @param {Array|String} firstList The first list\n * @param {Array|String} secondList The second list\n * @return {Array|String} A list consisting of the elements of `firstList` followed by the elements of\n * `secondList`.\n *\n * @example\n *\n *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n *      R.concat([], []); //=> []\n */\nvar concat = /*#__PURE__*/_curry2(function concat(a, b) {\n  if (_isArray(a)) {\n    if (_isArray(b)) {\n      return a.concat(b);\n    }\n    throw new TypeError(toString(b) + ' is not an array');\n  }\n  if (_isString(a)) {\n    if (_isString(b)) {\n      return a + b;\n    }\n    throw new TypeError(toString(b) + ' is not a string');\n  }\n  if (a != null && _isFunction(a['fantasy-land/concat'])) {\n    return a['fantasy-land/concat'](b);\n  }\n  if (a != null && _isFunction(a.concat)) {\n    return a.concat(b);\n  }\n  throw new TypeError(toString(a) + ' does not have a method named \"concat\" or \"fantasy-land/concat\"');\n});\nexport default concat;","import _arity from './internal/_arity';\nimport _curry1 from './internal/_curry1';\nimport map from './map';\nimport max from './max';\nimport reduce from './reduce';\n\n/**\n * Returns a function, `fn`, which encapsulates `if/else, if/else, ...` logic.\n * `R.cond` takes a list of [predicate, transformer] pairs. All of the arguments\n * to `fn` are applied to each of the predicates in turn until one returns a\n * \"truthy\" value, at which point `fn` returns the result of applying its\n * arguments to the corresponding transformer. If none of the predicates\n * matches, `fn` returns undefined.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Logic\n * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n * @param {Array} pairs A list of [predicate, transformer]\n * @return {Function}\n * @example\n *\n *      var fn = R.cond([\n *        [R.equals(0),   R.always('water freezes at 0°C')],\n *        [R.equals(100), R.always('water boils at 100°C')],\n *        [R.T,           temp => 'nothing special happens at ' + temp + '°C']\n *      ]);\n *      fn(0); //=> 'water freezes at 0°C'\n *      fn(50); //=> 'nothing special happens at 50°C'\n *      fn(100); //=> 'water boils at 100°C'\n */\nvar cond = /*#__PURE__*/_curry1(function cond(pairs) {\n  var arity = reduce(max, 0, map(function (pair) {\n    return pair[0].length;\n  }, pairs));\n  return _arity(arity, function () {\n    var idx = 0;\n    while (idx < pairs.length) {\n      if (pairs[idx][0].apply(this, arguments)) {\n        return pairs[idx][1].apply(this, arguments);\n      }\n      idx += 1;\n    }\n  });\n});\nexport default cond;","import _curry2 from './internal/_curry2';\nimport curry from './curry';\nimport nAry from './nAry';\n\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type. The arity of the function\n * returned is specified to allow using variadic constructor functions.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Function\n * @sig Number -> (* -> {*}) -> (* -> {*})\n * @param {Number} n The arity of the constructor function.\n * @param {Function} Fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @example\n *\n *      // Variadic Constructor function\n *      function Salad() {\n *        this.ingredients = arguments;\n *      }\n *\n *      Salad.prototype.recipe = function() {\n *        var instructions = R.map(ingredient => 'Add a dollop of ' + ingredient, this.ingredients);\n *        return R.join('\\n', instructions);\n *      };\n *\n *      var ThreeLayerSalad = R.constructN(3, Salad);\n *\n *      // Notice we no longer need the 'new' keyword, and the constructor is curried for 3 arguments.\n *      var salad = ThreeLayerSalad('Mayonnaise')('Potato Chips')('Ketchup');\n *\n *      console.log(salad.recipe());\n *      // Add a dollop of Mayonnaise\n *      // Add a dollop of Potato Chips\n *      // Add a dollop of Ketchup\n */\nvar constructN = /*#__PURE__*/_curry2(function constructN(n, Fn) {\n  if (n > 10) {\n    throw new Error('Constructor with greater than ten arguments');\n  }\n  if (n === 0) {\n    return function () {\n      return new Fn();\n    };\n  }\n  return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\n    switch (arguments.length) {\n      case 1:\n        return new Fn($0);\n      case 2:\n        return new Fn($0, $1);\n      case 3:\n        return new Fn($0, $1, $2);\n      case 4:\n        return new Fn($0, $1, $2, $3);\n      case 5:\n        return new Fn($0, $1, $2, $3, $4);\n      case 6:\n        return new Fn($0, $1, $2, $3, $4, $5);\n      case 7:\n        return new Fn($0, $1, $2, $3, $4, $5, $6);\n      case 8:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\n      case 9:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\n      case 10:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\n    }\n  }));\n});\nexport default constructN;","import _curry1 from './internal/_curry1';\nimport constructN from './constructN';\n\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> {*}) -> (* -> {*})\n * @param {Function} fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @see R.invoker\n * @example\n *\n *      // Constructor function\n *      function Animal(kind) {\n *        this.kind = kind;\n *      };\n *      Animal.prototype.sighting = function() {\n *        return \"It's a \" + this.kind + \"!\";\n *      }\n *\n *      var AnimalConstructor = R.construct(Animal)\n *\n *      // Notice we no longer need the 'new' keyword:\n *      AnimalConstructor('Pig'); //=> {\"kind\": \"Pig\", \"sighting\": function (){...}};\n *\n *      var animalTypes = [\"Lion\", \"Tiger\", \"Bear\"];\n *      var animalSighting = R.invoker(0, 'sighting');\n *      var sightNewAnimal = R.compose(animalSighting, AnimalConstructor);\n *      R.map(sightNewAnimal, animalTypes); //=> [\"It's a Lion!\", \"It's a Tiger!\", \"It's a Bear!\"]\n */\nvar construct = /*#__PURE__*/_curry1(function construct(Fn) {\n  return constructN(Fn.length, Fn);\n});\nexport default construct;","import _contains from './internal/_contains';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if the specified value is equal, in [`R.equals`](#equals)\n * terms, to at least one element of the given list; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.any\n * @example\n *\n *      R.contains(3, [1, 2, 3]); //=> true\n *      R.contains(4, [1, 2, 3]); //=> false\n *      R.contains({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.contains([42], [[42]]); //=> true\n */\nvar contains = /*#__PURE__*/_curry2(_contains);\nexport default contains;","import _curry2 from './internal/_curry2';\nimport _map from './internal/_map';\nimport curryN from './curryN';\nimport max from './max';\nimport pluck from './pluck';\nimport reduce from './reduce';\n\n/**\n * Accepts a converging function and a list of branching functions and returns\n * a new function. When invoked, this new function is applied to some\n * arguments, each branching function is applied to those same arguments. The\n * results of each branching function are passed as arguments to the converging\n * function to produce the return value.\n *\n * @func\n * @memberOf R\n * @since v0.4.2\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [((a, b, ...) -> x1), ((a, b, ...) -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} after A function. `after` will be invoked with the return values of\n *        `fn1` and `fn2` as its arguments.\n * @param {Array} functions A list of functions.\n * @return {Function} A new function.\n * @see R.useWith\n * @example\n *\n *      var average = R.converge(R.divide, [R.sum, R.length])\n *      average([1, 2, 3, 4, 5, 6, 7]) //=> 4\n *\n *      var strangeConcat = R.converge(R.concat, [R.toUpper, R.toLower])\n *      strangeConcat(\"Yodel\") //=> \"YODELyodel\"\n *\n * @symb R.converge(f, [g, h])(a, b) = f(g(a, b), h(a, b))\n */\nvar converge = /*#__PURE__*/_curry2(function converge(after, fns) {\n  return curryN(reduce(max, 0, pluck('length', fns)), function () {\n    var args = arguments;\n    var context = this;\n    return after.apply(context, _map(function (fn) {\n      return fn.apply(context, args);\n    }, fns));\n  });\n});\nexport default converge;","import _curryN from './_curryN';\nimport _has from './_has';\nimport _xfBase from './_xfBase';\n\nvar XReduceBy = /*#__PURE__*/function () {\n  function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n    this.valueFn = valueFn;\n    this.valueAcc = valueAcc;\n    this.keyFn = keyFn;\n    this.xf = xf;\n    this.inputs = {};\n  }\n  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n  XReduceBy.prototype['@@transducer/result'] = function (result) {\n    var key;\n    for (key in this.inputs) {\n      if (_has(key, this.inputs)) {\n        result = this.xf['@@transducer/step'](result, this.inputs[key]);\n        if (result['@@transducer/reduced']) {\n          result = result['@@transducer/value'];\n          break;\n        }\n      }\n    }\n    this.inputs = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XReduceBy.prototype['@@transducer/step'] = function (result, input) {\n    var key = this.keyFn(input);\n    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];\n    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n    return result;\n  };\n\n  return XReduceBy;\n}();\n\nvar _xreduceBy = /*#__PURE__*/_curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n  return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n});\nexport default _xreduceBy;","import _curryN from './internal/_curryN';\nimport _dispatchable from './internal/_dispatchable';\nimport _has from './internal/_has';\nimport _reduce from './internal/_reduce';\nimport _xreduceBy from './internal/_xreduceBy';\n\n/**\n * Groups the elements of the list according to the result of calling\n * the String-returning function `keyFn` on each element and reduces the elements\n * of each group to a single value via the reducer function `valueFn`.\n *\n * This function is basically a more general [`groupBy`](#groupBy) function.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category List\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n * @param {Function} valueFn The function that reduces the elements of each group to a single\n *        value. Receives two values, accumulator for a particular group and the current element.\n * @param {*} acc The (initial) accumulator value for each group.\n * @param {Function} keyFn The function that maps the list's element into a key.\n * @param {Array} list The array to group.\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\n * @see R.groupBy, R.reduce\n * @example\n *\n *      var reduceToNamesBy = R.reduceBy((acc, student) => acc.concat(student.name), []);\n *      var namesByGrade = reduceToNamesBy(function(student) {\n *        var score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      var students = [{name: 'Lucy', score: 92},\n *                      {name: 'Drew', score: 85},\n *                      // ...\n *                      {name: 'Bart', score: 62}];\n *      namesByGrade(students);\n *      // {\n *      //   'A': ['Lucy'],\n *      //   'B': ['Drew']\n *      //   // ...,\n *      //   'F': ['Bart']\n *      // }\n */\nvar reduceBy = /*#__PURE__*/_curryN(4, [], /*#__PURE__*/_dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {\n  return _reduce(function (acc, elt) {\n    var key = keyFn(elt);\n    acc[key] = valueFn(_has(key, acc) ? acc[key] : valueAcc, elt);\n    return acc;\n  }, {}, list);\n}));\nexport default reduceBy;","import reduceBy from './reduceBy';\n\n/**\n * Counts the elements of a list according to how many match each value of a\n * key generated by the supplied function. Returns an object mapping the keys\n * produced by `fn` to the number of occurrences in the list. Note that all\n * keys are coerced to strings because of how JavaScript objects work.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig (a -> String) -> [a] -> {*}\n * @param {Function} fn The function used to map values to keys.\n * @param {Array} list The list to count elements from.\n * @return {Object} An object mapping keys to number of occurrences in the list.\n * @example\n *\n *      var numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\n *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\n *\n *      var letters = ['a', 'b', 'A', 'a', 'B', 'c'];\n *      R.countBy(R.toLower)(letters);   //=> {'a': 3, 'b': 2, 'c': 1}\n */\nvar countBy = /*#__PURE__*/reduceBy(function (acc, elem) {\n  return acc + 1;\n}, 0);\nexport default countBy;","import add from './add';\n\n/**\n * Decrements its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n - 1\n * @see R.inc\n * @example\n *\n *      R.dec(42); //=> 41\n */\nvar dec = /*#__PURE__*/add(-1);\nexport default dec;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns the second argument if it is not `null`, `undefined` or `NaN`;\n * otherwise the first argument is returned.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {a} default The default value.\n * @param {b} val `val` will be returned instead of `default` unless `val` is `null`, `undefined` or `NaN`.\n * @return {*} The second value if it is not `null`, `undefined` or `NaN`, otherwise the default value\n * @example\n *\n *      var defaultTo42 = R.defaultTo(42);\n *\n *      defaultTo42(null);  //=> 42\n *      defaultTo42(undefined);  //=> 42\n *      defaultTo42('Ramda');  //=> 'Ramda'\n *      // parseInt('string') results in NaN\n *      defaultTo42(parseInt('string')); //=> 42\n */\nvar defaultTo = /*#__PURE__*/_curry2(function defaultTo(d, v) {\n  return v == null || v !== v ? d : v;\n});\nexport default defaultTo;","import _curry3 from './internal/_curry3';\n\n/**\n * Makes a descending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) > fn(b), `1` if fn(b) > fn(a), otherwise `0`\n * @see R.ascend\n * @example\n *\n *      var byAge = R.descend(R.prop('age'));\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByOldestFirst = R.sort(byAge, people);\n */\nvar descend = /*#__PURE__*/_curry3(function descend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa > bb ? -1 : aa < bb ? 1 : 0;\n});\nexport default descend;","import _contains from './internal/_contains';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Objects and Arrays are compared in terms of\n * value equality, not reference equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.differenceWith, R.symmetricDifference, R.symmetricDifferenceWith, R.without\n * @example\n *\n *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n *      R.difference([{a: 1}, {b: 2}], [{a: 1}, {c: 3}]) //=> [{b: 2}]\n */\nvar difference = /*#__PURE__*/_curry2(function difference(first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  while (idx < firstLen) {\n    if (!_contains(first[idx], second) && !_contains(first[idx], out)) {\n      out[out.length] = first[idx];\n    }\n    idx += 1;\n  }\n  return out;\n});\nexport default difference;","import _containsWith from './internal/_containsWith';\nimport _curry3 from './internal/_curry3';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Duplication is determined according to the\n * value returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.difference, R.symmetricDifference, R.symmetricDifferenceWith\n * @example\n *\n *      var cmp = (x, y) => x.a === y.a;\n *      var l1 = [{a: 1}, {a: 2}, {a: 3}];\n *      var l2 = [{a: 3}, {a: 4}];\n *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]\n */\nvar differenceWith = /*#__PURE__*/_curry3(function differenceWith(pred, first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  while (idx < firstLen) {\n    if (!_containsWith(pred, first[idx], second) && !_containsWith(pred, first[idx], out)) {\n      out.push(first[idx]);\n    }\n    idx += 1;\n  }\n  return out;\n});\nexport default differenceWith;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns a new object that does not contain a `prop` property.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Object\n * @sig String -> {k: v} -> {k: v}\n * @param {String} prop The name of the property to dissociate\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original but without the specified property\n * @see R.assoc\n * @example\n *\n *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}\n */\nvar dissoc = /*#__PURE__*/_curry2(function dissoc(prop, obj) {\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  delete result[prop];\n  return result;\n});\nexport default dissoc;","import _curry3 from './internal/_curry3';\n\n/**\n * Removes the sub-list of `list` starting at index `start` and containing\n * `count` elements. _Note that this is not destructive_: it returns a copy of\n * the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number} start The position to start removing elements\n * @param {Number} count The number of elements to remove\n * @param {Array} list The list to remove from\n * @return {Array} A new Array with `count` elements from `start` removed.\n * @example\n *\n *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n */\nvar remove = /*#__PURE__*/_curry3(function remove(start, count, list) {\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(start, count);\n  return result;\n});\nexport default remove;","import _curry3 from './internal/_curry3';\nimport adjust from './adjust';\nimport always from './always';\n\n/**\n * Returns a new copy of the array with the element at the provided index\n * replaced with the given value.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} idx The index to update.\n * @param {*} x The value to exist at the given index of the returned array.\n * @param {Array|Arguments} list The source array-like object to be updated.\n * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n * @see R.adjust\n * @example\n *\n *      R.update(1, 11, [0, 1, 2]);     //=> [0, 11, 2]\n *      R.update(1)(11)([0, 1, 2]);     //=> [0, 11, 2]\n * @symb R.update(-1, a, [b, c]) = [b, a]\n * @symb R.update(0, a, [b, c]) = [a, c]\n * @symb R.update(1, a, [b, c]) = [b, a]\n */\nvar update = /*#__PURE__*/_curry3(function update(idx, x, list) {\n  return adjust(always(x), idx, list);\n});\nexport default update;","import _curry2 from './internal/_curry2';\nimport _isInteger from './internal/_isInteger';\nimport assoc from './assoc';\nimport dissoc from './dissoc';\nimport remove from './remove';\nimport update from './update';\n\n/**\n * Makes a shallow clone of an object, omitting the property at the given path.\n * Note that this copies and flattens prototype properties onto the new object\n * as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.11.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {k: v} -> {k: v}\n * @param {Array} path The path to the value to omit\n * @param {Object} obj The object to clone\n * @return {Object} A new object without the property at path\n * @see R.assocPath\n * @example\n *\n *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n */\nvar dissocPath = /*#__PURE__*/_curry2(function dissocPath(path, obj) {\n  switch (path.length) {\n    case 0:\n      return obj;\n    case 1:\n      return _isInteger(path[0]) ? remove(path[0], 1, obj) : dissoc(path[0], obj);\n    default:\n      var head = path[0];\n      var tail = Array.prototype.slice.call(path, 1);\n      if (obj[head] == null) {\n        return obj;\n      } else if (_isInteger(path[0])) {\n        return update(head, dissocPath(tail, obj[head]), obj);\n      } else {\n        return assoc(head, dissocPath(tail, obj[head]), obj);\n      }\n  }\n});\nexport default dissocPath;","import _curry2 from './internal/_curry2';\n\n/**\n * Divides two numbers. Equivalent to `a / b`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a / b`.\n * @see R.multiply\n * @example\n *\n *      R.divide(71, 100); //=> 0.71\n *\n *      var half = R.divide(R.__, 2);\n *      half(42); //=> 21\n *\n *      var reciprocal = R.divide(1);\n *      reciprocal(4);   //=> 0.25\n */\nvar divide = /*#__PURE__*/_curry2(function divide(a, b) {\n  return a / b;\n});\nexport default divide;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XDrop = /*#__PURE__*/function () {\n  function XDrop(n, xf) {\n    this.xf = xf;\n    this.n = n;\n  }\n  XDrop.prototype['@@transducer/init'] = _xfBase.init;\n  XDrop.prototype['@@transducer/result'] = _xfBase.result;\n  XDrop.prototype['@@transducer/step'] = function (result, input) {\n    if (this.n > 0) {\n      this.n -= 1;\n      return result;\n    }\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDrop;\n}();\n\nvar _xdrop = /*#__PURE__*/_curry2(function _xdrop(n, xf) {\n  return new XDrop(n, xf);\n});\nexport default _xdrop;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xdrop from './internal/_xdrop';\nimport slice from './slice';\n\n/**\n * Returns all but the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `drop` method).\n *\n * Dispatches to the `drop` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*} A copy of list without the first `n` elements\n * @see R.take, R.transduce, R.dropLast, R.dropWhile\n * @example\n *\n *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(3, 'ramda');               //=> 'da'\n */\nvar drop = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['drop'], _xdrop, function drop(n, xs) {\n  return slice(Math.max(0, n), Infinity, xs);\n}));\nexport default drop;","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XTake = /*#__PURE__*/function () {\n  function XTake(n, xf) {\n    this.xf = xf;\n    this.n = n;\n    this.i = 0;\n  }\n  XTake.prototype['@@transducer/init'] = _xfBase.init;\n  XTake.prototype['@@transducer/result'] = _xfBase.result;\n  XTake.prototype['@@transducer/step'] = function (result, input) {\n    this.i += 1;\n    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\n    return this.n >= 0 && this.i >= this.n ? _reduced(ret) : ret;\n  };\n\n  return XTake;\n}();\n\nvar _xtake = /*#__PURE__*/_curry2(function _xtake(n, xf) {\n  return new XTake(n, xf);\n});\nexport default _xtake;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xtake from './internal/_xtake';\nimport slice from './slice';\n\n/**\n * Returns the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `take` method).\n *\n * Dispatches to the `take` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*}\n * @see R.drop\n * @example\n *\n *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(3, 'ramda');               //=> 'ram'\n *\n *      var personnel = [\n *        'Dave Brubeck',\n *        'Paul Desmond',\n *        'Eugene Wright',\n *        'Joe Morello',\n *        'Gerry Mulligan',\n *        'Bob Bates',\n *        'Joe Dodge',\n *        'Ron Crotty'\n *      ];\n *\n *      var takeFive = R.take(5);\n *      takeFive(personnel);\n *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n * @symb R.take(-1, [a, b]) = [a, b]\n * @symb R.take(0, [a, b]) = []\n * @symb R.take(1, [a, b]) = [a]\n * @symb R.take(2, [a, b]) = [a, b]\n */\nvar take = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['take'], _xtake, function take(n, xs) {\n  return slice(0, n < 0 ? Infinity : n, xs);\n}));\nexport default take;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XDropLast = /*#__PURE__*/function () {\n  function XDropLast(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n  XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLast.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.full) {\n      result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n    }\n    this.store(input);\n    return result;\n  };\n  XDropLast.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  return XDropLast;\n}();\n\nvar _xdropLast = /*#__PURE__*/_curry2(function _xdropLast(n, xf) {\n  return new XDropLast(n, xf);\n});\nexport default _xdropLast;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _dropLast from './internal/_dropLast';\nimport _xdropLast from './internal/_xdropLast';\n\n/**\n * Returns a list containing all but the last `n` elements of the given `list`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements of `list` to skip.\n * @param {Array} list The list of elements to consider.\n * @return {Array} A copy of the list with only the first `list.length - n` elements\n * @see R.takeLast, R.drop, R.dropWhile, R.dropLastWhile\n * @example\n *\n *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(3, 'ramda');               //=> 'ra'\n */\nvar dropLast = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropLast, _dropLast));\nexport default dropLast;","import take from '../take';\n\nexport default function dropLast(n, xs) {\n  return take(n < xs.length ? xs.length - n : 0, xs);\n}","import _curry2 from './_curry2';\nimport _reduce from './_reduce';\nimport _xfBase from './_xfBase';\n\nvar XDropLastWhile = /*#__PURE__*/function () {\n  function XDropLastWhile(fn, xf) {\n    this.f = fn;\n    this.retained = [];\n    this.xf = xf;\n  }\n  XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLastWhile.prototype['@@transducer/result'] = function (result) {\n    this.retained = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLastWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.retain(result, input) : this.flush(result, input);\n  };\n  XDropLastWhile.prototype.flush = function (result, input) {\n    result = _reduce(this.xf['@@transducer/step'], result, this.retained);\n    this.retained = [];\n    return this.xf['@@transducer/step'](result, input);\n  };\n  XDropLastWhile.prototype.retain = function (result, input) {\n    this.retained.push(input);\n    return result;\n  };\n\n  return XDropLastWhile;\n}();\n\nvar _xdropLastWhile = /*#__PURE__*/_curry2(function _xdropLastWhile(fn, xf) {\n  return new XDropLastWhile(fn, xf);\n});\nexport default _xdropLastWhile;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _dropLastWhile from './internal/_dropLastWhile';\nimport _xdropLastWhile from './internal/_xdropLastWhile';\n\n/**\n * Returns a new list excluding all the tailing elements of a given list which\n * satisfy the supplied predicate function. It passes each value from the right\n * to the supplied predicate function, skipping elements until the predicate\n * function returns a `falsy` value. The predicate function is applied to one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} predicate The function to be called on each element\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array without any trailing elements that return `falsy` values from the `predicate`.\n * @see R.takeLastWhile, R.addIndex, R.drop, R.dropWhile\n * @example\n *\n *      var lteThree = x => x <= 3;\n *\n *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3, 4]\n *\n *      R.dropLastWhile(x => x !== 'd' , 'Ramda'); //=> 'Ramd'\n */\nvar dropLastWhile = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropLastWhile, _dropLastWhile));\nexport default dropLastWhile;","import slice from '../slice';\n\nexport default function dropLastWhile(pred, xs) {\n  var idx = xs.length - 1;\n  while (idx >= 0 && pred(xs[idx])) {\n    idx -= 1;\n  }\n  return slice(0, idx + 1, xs);\n}","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XDropRepeatsWith = /*#__PURE__*/function () {\n  function XDropRepeatsWith(pred, xf) {\n    this.xf = xf;\n    this.pred = pred;\n    this.lastValue = undefined;\n    this.seenFirstValue = false;\n  }\n\n  XDropRepeatsWith.prototype['@@transducer/init'] = _xfBase.init;\n  XDropRepeatsWith.prototype['@@transducer/result'] = _xfBase.result;\n  XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {\n    var sameAsLast = false;\n    if (!this.seenFirstValue) {\n      this.seenFirstValue = true;\n    } else if (this.pred(this.lastValue, input)) {\n      sameAsLast = true;\n    }\n    this.lastValue = input;\n    return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDropRepeatsWith;\n}();\n\nvar _xdropRepeatsWith = /*#__PURE__*/_curry2(function _xdropRepeatsWith(pred, xf) {\n  return new XDropRepeatsWith(pred, xf);\n});\nexport default _xdropRepeatsWith;","import _curry2 from './internal/_curry2';\nimport _isString from './internal/_isString';\n\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      var list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\nvar nth = /*#__PURE__*/_curry2(function nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n});\nexport default nth;","import nth from './nth';\n\n/**\n * Returns the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.init, R.head, R.tail\n * @example\n *\n *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n *      R.last([]); //=> undefined\n *\n *      R.last('abc'); //=> 'c'\n *      R.last(''); //=> ''\n */\nvar last = /*#__PURE__*/nth(-1);\nexport default last;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xdropRepeatsWith from './internal/_xdropRepeatsWith';\nimport last from './last';\n\n/**\n * Returns a new list without any consecutively repeating elements. Equality is\n * determined by applying the supplied predicate to each pair of consecutive elements. The\n * first element in a series of equal elements will be preserved.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *      var l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\n *      R.dropRepeatsWith(R.eqBy(Math.abs), l); //=> [1, 3, 4, -5, 3]\n */\nvar dropRepeatsWith = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropRepeatsWith, function dropRepeatsWith(pred, list) {\n  var result = [];\n  var idx = 1;\n  var len = list.length;\n  if (len !== 0) {\n    result[0] = list[0];\n    while (idx < len) {\n      if (!pred(last(result), list[idx])) {\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n  }\n  return result;\n}));\nexport default dropRepeatsWith;","import _curry1 from './internal/_curry1';\nimport _dispatchable from './internal/_dispatchable';\nimport _xdropRepeatsWith from './internal/_xdropRepeatsWith';\nimport dropRepeatsWith from './dropRepeatsWith';\nimport equals from './equals';\n\n/**\n * Returns a new list without any consecutively repeating elements.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n */\nvar dropRepeats = /*#__PURE__*/_curry1( /*#__PURE__*/_dispatchable([], /*#__PURE__*/_xdropRepeatsWith(equals), /*#__PURE__*/dropRepeatsWith(equals)));\nexport default dropRepeats;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XDropWhile = /*#__PURE__*/function () {\n  function XDropWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n  XDropWhile.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f) {\n      if (this.f(input)) {\n        return result;\n      }\n      this.f = null;\n    }\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDropWhile;\n}();\n\nvar _xdropWhile = /*#__PURE__*/_curry2(function _xdropWhile(f, xf) {\n  return new XDropWhile(f, xf);\n});\nexport default _xdropWhile;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xdropWhile from './internal/_xdropWhile';\nimport slice from './slice';\n\n/**\n * Returns a new list excluding the leading elements of a given list which\n * satisfy the supplied predicate function. It passes each value to the supplied\n * predicate function, skipping elements while the predicate function returns\n * `true`. The predicate function is applied to one argument: *(value)*.\n *\n * Dispatches to the `dropWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.takeWhile, R.transduce, R.addIndex\n * @example\n *\n *      var lteTwo = x => x <= 2;\n *\n *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\n *\n *      R.dropWhile(x => x !== 'd' , 'Ramda'); //=> 'da'\n */\nvar dropWhile = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['dropWhile'], _xdropWhile, function dropWhile(pred, xs) {\n  var idx = 0;\n  var len = xs.length;\n  while (idx < len && pred(xs[idx])) {\n    idx += 1;\n  }\n  return slice(idx, Infinity, xs);\n}));\nexport default dropWhile;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if one or both of its arguments are `true`. Returns `false`\n * if both arguments are `false`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if truthy, otherwise the second argument.\n * @see R.either\n * @example\n *\n *      R.or(true, true); //=> true\n *      R.or(true, false); //=> true\n *      R.or(false, true); //=> true\n *      R.or(false, false); //=> false\n */\nvar or = /*#__PURE__*/_curry2(function or(a, b) {\n  return a || b;\n});\nexport default or;","import _curry2 from './internal/_curry2';\nimport _isFunction from './internal/_isFunction';\nimport lift from './lift';\nimport or from './or';\n\n/**\n * A function wrapping calls to the two functions in an `||` operation,\n * returning the result of the first function if it is truth-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * truth-y value.\n *\n * In addition to functions, `R.either` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f a predicate\n * @param {Function} g another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n * @see R.or\n * @example\n *\n *      var gt10 = x => x > 10;\n *      var even = x => x % 2 === 0;\n *      var f = R.either(gt10, even);\n *      f(101); //=> true\n *      f(8); //=> true\n */\nvar either = /*#__PURE__*/_curry2(function either(f, g) {\n  return _isFunction(f) ? function _either() {\n    return f.apply(this, arguments) || g.apply(this, arguments);\n  } : lift(or)(f, g);\n});\nexport default either;","import _curry1 from './internal/_curry1';\nimport _isArguments from './internal/_isArguments';\nimport _isArray from './internal/_isArray';\nimport _isObject from './internal/_isObject';\nimport _isString from './internal/_isString';\n\n/**\n * Returns the empty value of its argument's type. Ramda defines the empty\n * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n * types are supported if they define `<Type>.empty`,\n * `<Type>.prototype.empty` or implement the\n * [FantasyLand Monoid spec](https://github.com/fantasyland/fantasy-land#monoid).\n *\n * Dispatches to the `empty` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> a\n * @param {*} x\n * @return {*}\n * @example\n *\n *      R.empty(Just(42));      //=> Nothing()\n *      R.empty([1, 2, 3]);     //=> []\n *      R.empty('unicorns');    //=> ''\n *      R.empty({x: 1, y: 2});  //=> {}\n */\nvar empty = /*#__PURE__*/_curry1(function empty(x) {\n  return x != null && typeof x['fantasy-land/empty'] === 'function' ? x['fantasy-land/empty']() : x != null && x.constructor != null && typeof x.constructor['fantasy-land/empty'] === 'function' ? x.constructor['fantasy-land/empty']() : x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {\n    return arguments;\n  }() :\n  // else\n  void 0;\n});\nexport default empty;","import _curry2 from './internal/_curry2';\nimport drop from './drop';\n\n/**\n * Returns a new list containing the last `n` elements of the given list.\n * If `n > list.length`, returns a list of `list.length` elements.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements to return.\n * @param {Array} xs The collection to consider.\n * @return {Array}\n * @see R.dropLast\n * @example\n *\n *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(3, 'ramda');               //=> 'mda'\n */\nvar takeLast = /*#__PURE__*/_curry2(function takeLast(n, xs) {\n  return drop(n >= 0 ? xs.length - n : 0, xs);\n});\nexport default takeLast;","import _curry2 from './internal/_curry2';\nimport equals from './equals';\nimport takeLast from './takeLast';\n\n/**\n * Checks if a list ends with the provided values\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> Boolean\n * @sig String -> Boolean\n * @param {*} suffix\n * @param {*} list\n * @return {Boolean}\n * @example\n *\n *      R.endsWith('c', 'abc')                //=> true\n *      R.endsWith('b', 'abc')                //=> false\n *      R.endsWith(['c'], ['a', 'b', 'c'])    //=> true\n *      R.endsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\nvar endsWith = /*#__PURE__*/_curry2(function (suffix, list) {\n  return equals(takeLast(suffix.length, list), suffix);\n});\nexport default endsWith;","import _curry3 from './internal/_curry3';\nimport equals from './equals';\n\n/**\n * Takes a function and two values in its domain and returns `true` if the\n * values map to the same value in the codomain; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Relation\n * @sig (a -> b) -> a -> a -> Boolean\n * @param {Function} f\n * @param {*} x\n * @param {*} y\n * @return {Boolean}\n * @example\n *\n *      R.eqBy(Math.abs, 5, -5); //=> true\n */\nvar eqBy = /*#__PURE__*/_curry3(function eqBy(f, x, y) {\n  return equals(f(x), f(y));\n});\nexport default eqBy;","import _curry3 from './internal/_curry3';\nimport equals from './equals';\n\n/**\n * Reports whether two objects have the same value, in [`R.equals`](#equals)\n * terms, for the specified property. Useful as a curried predicate.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig k -> {k: v} -> {k: v} -> Boolean\n * @param {String} prop The name of the property to compare\n * @param {Object} obj1\n * @param {Object} obj2\n * @return {Boolean}\n *\n * @example\n *\n *      var o1 = { a: 1, b: 2, c: 3, d: 4 };\n *      var o2 = { a: 10, b: 20, c: 3, d: 40 };\n *      R.eqProps('a', o1, o2); //=> false\n *      R.eqProps('c', o1, o2); //=> true\n */\nvar eqProps = /*#__PURE__*/_curry3(function eqProps(prop, obj1, obj2) {\n  return equals(obj1[prop], obj2[prop]);\n});\nexport default eqProps;","import _curry2 from './internal/_curry2';\n\n/**\n * Creates a new object by recursively evolving a shallow copy of `object`,\n * according to the `transformation` functions. All non-primitive properties\n * are copied by reference.\n *\n * A `transformation` function will not be invoked if its corresponding key\n * does not exist in the evolved object.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n * @param {Object} transformations The object specifying transformation functions to apply\n *        to the object.\n * @param {Object} object The object to be transformed.\n * @return {Object} The transformed object.\n * @example\n *\n *      var tomato  = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n *      var transformations = {\n *        firstName: R.trim,\n *        lastName: R.trim, // Will not get invoked.\n *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n *      };\n *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n */\nvar evolve = /*#__PURE__*/_curry2(function evolve(transformations, object) {\n  var result = {};\n  var transformation, key, type;\n  for (key in object) {\n    transformation = transformations[key];\n    type = typeof transformation;\n    result[key] = type === 'function' ? transformation(object[key]) : transformation && type === 'object' ? evolve(transformation, object[key]) : object[key];\n  }\n  return result;\n});\nexport default evolve;","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XFind = /*#__PURE__*/function () {\n  function XFind(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.found = false;\n  }\n  XFind.prototype['@@transducer/init'] = _xfBase.init;\n  XFind.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, void 0);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFind.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, input));\n    }\n    return result;\n  };\n\n  return XFind;\n}();\n\nvar _xfind = /*#__PURE__*/_curry2(function _xfind(f, xf) {\n  return new XFind(f, xf);\n});\nexport default _xfind;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xfind from './internal/_xfind';\n\n/**\n * Returns the first element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Dispatches to the `find` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n *        desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n *      R.find(R.propEq('a', 4))(xs); //=> undefined\n */\nvar find = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['find'], _xfind, function find(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n    idx += 1;\n  }\n}));\nexport default find;","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XFindIndex = /*#__PURE__*/function () {\n  function XFindIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.found = false;\n  }\n  XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n  XFindIndex.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, -1);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFindIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n    }\n    return result;\n  };\n\n  return XFindIndex;\n}();\n\nvar _xfindIndex = /*#__PURE__*/_curry2(function _xfindIndex(f, xf) {\n  return new XFindIndex(f, xf);\n});\nexport default _xfindIndex;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xfindIndex from './internal/_xfindIndex';\n\n/**\n * Returns the index of the first element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n */\nvar findIndex = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xfindIndex, function findIndex(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}));\nexport default findIndex;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XFindLast = /*#__PURE__*/function () {\n  function XFindLast(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFindLast.prototype['@@transducer/init'] = _xfBase.init;\n  XFindLast.prototype['@@transducer/result'] = function (result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\n  };\n  XFindLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.last = input;\n    }\n    return result;\n  };\n\n  return XFindLast;\n}();\n\nvar _xfindLast = /*#__PURE__*/_curry2(function _xfindLast(f, xf) {\n  return new XFindLast(f, xf);\n});\nexport default _xfindLast;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xfindLast from './internal/_xfindLast';\n\n/**\n * Returns the last element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLast(R.propEq('a', 1))(xs); //=> {a: 1, b: 1}\n *      R.findLast(R.propEq('a', 4))(xs); //=> undefined\n */\nvar findLast = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xfindLast, function findLast(fn, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n    idx -= 1;\n  }\n}));\nexport default findLast;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XFindLastIndex = /*#__PURE__*/function () {\n  function XFindLastIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.lastIdx = -1;\n  }\n  XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\n  XFindLastIndex.prototype['@@transducer/result'] = function (result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\n  };\n  XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n    if (this.f(input)) {\n      this.lastIdx = this.idx;\n    }\n    return result;\n  };\n\n  return XFindLastIndex;\n}();\n\nvar _xfindLastIndex = /*#__PURE__*/_curry2(function _xfindLastIndex(f, xf) {\n  return new XFindLastIndex(f, xf);\n});\nexport default _xfindLastIndex;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xfindLastIndex from './internal/_xfindLastIndex';\n\n/**\n * Returns the index of the last element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1\n *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1\n */\nvar findLastIndex = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xfindLastIndex, function findLastIndex(fn, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n    idx -= 1;\n  }\n  return -1;\n}));\nexport default findLastIndex;","import _curry1 from './internal/_curry1';\nimport _makeFlat from './internal/_makeFlat';\n\n/**\n * Returns a new list by pulling every item out of it (and all its sub-arrays)\n * and putting them in a new array, depth-first.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b]\n * @param {Array} list The array to consider.\n * @return {Array} The flattened list.\n * @see R.unnest\n * @example\n *\n *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n */\nvar flatten = /*#__PURE__*/_curry1( /*#__PURE__*/_makeFlat(true));\nexport default flatten;","import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\n\n/**\n * Returns a new function much like the supplied one, except that the first two\n * arguments' order is reversed.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b, c, ...) -> z) -> (b -> a -> c -> ... -> z)\n * @param {Function} fn The function to invoke with its first two parameters reversed.\n * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n * @example\n *\n *      var mergeThree = (a, b, c) => [].concat(a, b, c);\n *\n *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n *\n *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n * @symb R.flip(f)(a, b, c) = f(b, a, c)\n */\nvar flip = /*#__PURE__*/_curry1(function flip(fn) {\n  return curryN(fn.length, function (a, b) {\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = b;\n    args[1] = a;\n    return fn.apply(this, args);\n  });\n});\nexport default flip;","import _checkForMethod from './internal/_checkForMethod';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Iterate over an input `list`, calling a provided function `fn` for each\n * element in the list.\n *\n * `fn` receives one argument: *(value)*.\n *\n * Note: `R.forEach` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.forEach` method. For more\n * details on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n *\n * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns\n * the original array. In some libraries this function is named `each`.\n *\n * Dispatches to the `forEach` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> *) -> [a] -> [a]\n * @param {Function} fn The function to invoke. Receives one argument, `value`.\n * @param {Array} list The list to iterate over.\n * @return {Array} The original list.\n * @see R.addIndex\n * @example\n *\n *      var printXPlusFive = x => console.log(x + 5);\n *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n *      // logs 6\n *      // logs 7\n *      // logs 8\n * @symb R.forEach(f, [a, b, c]) = [a, b, c]\n */\nvar forEach = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('forEach', function forEach(fn, list) {\n  var len = list.length;\n  var idx = 0;\n  while (idx < len) {\n    fn(list[idx]);\n    idx += 1;\n  }\n  return list;\n}));\nexport default forEach;","import _curry2 from './internal/_curry2';\nimport keys from './keys';\n\n/**\n * Iterate over an input `object`, calling a provided function `fn` for each\n * key and value in the object.\n *\n * `fn` receives three argument: *(value, key, obj)*.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Object\n * @sig ((a, String, StrMap a) -> Any) -> StrMap a -> StrMap a\n * @param {Function} fn The function to invoke. Receives three argument, `value`, `key`, `obj`.\n * @param {Object} obj The object to iterate over.\n * @return {Object} The original object.\n * @example\n *\n *      var printKeyConcatValue = (value, key) => console.log(key + ':' + value);\n *      R.forEachObjIndexed(printKeyConcatValue, {x: 1, y: 2}); //=> {x: 1, y: 2}\n *      // logs x:1\n *      // logs y:2\n * @symb R.forEachObjIndexed(f, {x: a, y: b}) = {x: a, y: b}\n */\nvar forEachObjIndexed = /*#__PURE__*/_curry2(function forEachObjIndexed(fn, obj) {\n  var keyList = keys(obj);\n  var idx = 0;\n  while (idx < keyList.length) {\n    var key = keyList[idx];\n    fn(obj[key], key, obj);\n    idx += 1;\n  }\n  return obj;\n});\nexport default forEachObjIndexed;","import _curry1 from './internal/_curry1';\n\n/**\n * Creates a new object from a list key-value pairs. If a key appears in\n * multiple pairs, the rightmost pair is included in the object.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [[k,v]] -> {k: v}\n * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n * @return {Object} The object made by pairing up `keys` and `values`.\n * @see R.toPairs, R.pair\n * @example\n *\n *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n */\nvar fromPairs = /*#__PURE__*/_curry1(function fromPairs(pairs) {\n  var result = {};\n  var idx = 0;\n  while (idx < pairs.length) {\n    result[pairs[idx][0]] = pairs[idx][1];\n    idx += 1;\n  }\n  return result;\n});\nexport default fromPairs;","import _checkForMethod from './internal/_checkForMethod';\nimport _curry2 from './internal/_curry2';\nimport reduceBy from './reduceBy';\n\n/**\n * Splits a list into sub-lists stored in an object, based on the result of\n * calling a String-returning function on each element, and grouping the\n * results according to values returned.\n *\n * Dispatches to the `groupBy` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> String) -> [a] -> {String: [a]}\n * @param {Function} fn Function :: a -> String\n * @param {Array} list The array to group\n * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n *         that produced that key when passed to `fn`.\n * @see R.transduce\n * @example\n *\n *      var byGrade = R.groupBy(function(student) {\n *        var score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      var students = [{name: 'Abby', score: 84},\n *                      {name: 'Eddy', score: 58},\n *                      // ...\n *                      {name: 'Jack', score: 69}];\n *      byGrade(students);\n *      // {\n *      //   'A': [{name: 'Dianne', score: 99}],\n *      //   'B': [{name: 'Abby', score: 84}]\n *      //   // ...,\n *      //   'F': [{name: 'Eddy', score: 58}]\n *      // }\n */\nvar groupBy = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('groupBy', /*#__PURE__*/reduceBy(function (acc, item) {\n  if (acc == null) {\n    acc = [];\n  }\n  acc.push(item);\n  return acc;\n}, null)));\nexport default groupBy;","import _curry2 from './internal/_curry2';\n\n/**\n * Takes a list and returns a list of lists where each sublist's elements are\n * all satisfied pairwise comparison according to the provided function.\n * Only adjacent elements are passed to the comparison function.\n *\n * @func\n * @memberOf R\n * @since v0.21.0\n * @category List\n * @sig ((a, a) → Boolean) → [a] → [[a]]\n * @param {Function} fn Function for determining whether two given (adjacent)\n *        elements should be in the same group\n * @param {Array} list The array to group. Also accepts a string, which will be\n *        treated as a list of characters.\n * @return {List} A list that contains sublists of elements,\n *         whose concatenations are equal to the original list.\n * @example\n *\n * R.groupWith(R.equals, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a + 1 === b, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0, 1], [1, 2, 3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a % 2 === b % 2, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3, 5], [8], [13, 21]]\n *\n * R.groupWith(R.eqBy(isVowel), 'aestiou')\n * //=> ['ae', 'st', 'iou']\n */\nvar groupWith = /*#__PURE__*/_curry2(function (fn, list) {\n  var res = [];\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    var nextidx = idx + 1;\n    while (nextidx < len && fn(list[nextidx - 1], list[nextidx])) {\n      nextidx += 1;\n    }\n    res.push(list.slice(idx, nextidx));\n    idx = nextidx;\n  }\n  return res;\n});\nexport default groupWith;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if the first argument is greater than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.lt\n * @example\n *\n *      R.gt(2, 1); //=> true\n *      R.gt(2, 2); //=> false\n *      R.gt(2, 3); //=> false\n *      R.gt('a', 'z'); //=> false\n *      R.gt('z', 'a'); //=> true\n */\nvar gt = /*#__PURE__*/_curry2(function gt(a, b) {\n  return a > b;\n});\nexport default gt;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if the first argument is greater than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.lte\n * @example\n *\n *      R.gte(2, 1); //=> true\n *      R.gte(2, 2); //=> true\n *      R.gte(2, 3); //=> false\n *      R.gte('a', 'z'); //=> false\n *      R.gte('z', 'a'); //=> true\n */\nvar gte = /*#__PURE__*/_curry2(function gte(a, b) {\n  return a >= b;\n});\nexport default gte;","import _curry2 from './internal/_curry2';\nimport _has from './internal/_has';\n\n/**\n * Returns whether or not an object has an own property with the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      var hasName = R.has('name');\n *      hasName({name: 'alice'});   //=> true\n *      hasName({name: 'bob'});     //=> true\n *      hasName({});                //=> false\n *\n *      var point = {x: 0, y: 0};\n *      var pointHas = R.has(R.__, point);\n *      pointHas('x');  //=> true\n *      pointHas('y');  //=> true\n *      pointHas('z');  //=> false\n */\nvar has = /*#__PURE__*/_curry2(_has);\nexport default has;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns whether or not an object or its prototype chain has a property with\n * the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      function Rectangle(width, height) {\n *        this.width = width;\n *        this.height = height;\n *      }\n *      Rectangle.prototype.area = function() {\n *        return this.width * this.height;\n *      };\n *\n *      var square = new Rectangle(2, 2);\n *      R.hasIn('width', square);  //=> true\n *      R.hasIn('area', square);  //=> true\n */\nvar hasIn = /*#__PURE__*/_curry2(function hasIn(prop, obj) {\n  return prop in obj;\n});\nexport default hasIn;","import nth from './nth';\n\n/**\n * Returns the first element of the given list or string. In some libraries\n * this function is named `first`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {Array|String} list\n * @return {*}\n * @see R.tail, R.init, R.last\n * @example\n *\n *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n *      R.head([]); //=> undefined\n *\n *      R.head('abc'); //=> 'a'\n *      R.head(''); //=> ''\n */\nvar head = /*#__PURE__*/nth(0);\nexport default head;","export default function _identity(x) {\n  return x;\n}","import _curry1 from './internal/_curry1';\nimport _identity from './internal/_identity';\n\n/**\n * A function that does nothing but return the parameter supplied to it. Good\n * as a default or placeholder function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> a\n * @param {*} x The value to return.\n * @return {*} The input value, `x`.\n * @example\n *\n *      R.identity(1); //=> 1\n *\n *      var obj = {};\n *      R.identity(obj) === obj; //=> true\n * @symb R.identity(a) = a\n */\nvar identity = /*#__PURE__*/_curry1(_identity);\nexport default identity;","import _curry3 from './internal/_curry3';\nimport curryN from './curryN';\n\n/**\n * Creates a function that will process either the `onTrue` or the `onFalse`\n * function depending upon the result of the `condition` predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n * @param {Function} condition A predicate function\n * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n * @return {Function} A new unary function that will process either the `onTrue` or the `onFalse`\n *                    function depending upon the result of the `condition` predicate.\n * @see R.unless, R.when\n * @example\n *\n *      var incCount = R.ifElse(\n *        R.has('count'),\n *        R.over(R.lensProp('count'), R.inc),\n *        R.assoc('count', 1)\n *      );\n *      incCount({});           //=> { count: 1 }\n *      incCount({ count: 1 }); //=> { count: 2 }\n */\nvar ifElse = /*#__PURE__*/_curry3(function ifElse(condition, onTrue, onFalse) {\n  return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {\n    return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n  });\n});\nexport default ifElse;","import add from './add';\n\n/**\n * Increments its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n + 1\n * @see R.dec\n * @example\n *\n *      R.inc(42); //=> 43\n */\nvar inc = /*#__PURE__*/add(1);\nexport default inc;","import reduceBy from './reduceBy';\n\n/**\n * Given a function that generates a key, turns a list of objects into an\n * object indexing the objects by the given key. Note that if multiple\n * objects generate the same value for the indexing key only the last value\n * will be included in the generated object.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\n * @param {Function} fn Function :: a -> String\n * @param {Array} array The array of objects to index\n * @return {Object} An object indexing each array element by the given property.\n * @example\n *\n *      var list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n *      R.indexBy(R.prop('id'), list);\n *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n */\nvar indexBy = /*#__PURE__*/reduceBy(function (acc, elem) {\n  return elem;\n}, null);\nexport default indexBy;","import _curry2 from './internal/_curry2';\nimport _indexOf from './internal/_indexOf';\nimport _isArray from './internal/_isArray';\n\n/**\n * Returns the position of the first occurrence of an item in an array, or -1\n * if the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.lastIndexOf\n * @example\n *\n *      R.indexOf(3, [1,2,3,4]); //=> 2\n *      R.indexOf(10, [1,2,3,4]); //=> -1\n */\nvar indexOf = /*#__PURE__*/_curry2(function indexOf(target, xs) {\n  return typeof xs.indexOf === 'function' && !_isArray(xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);\n});\nexport default indexOf;","import slice from './slice';\n\n/**\n * Returns all but the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.last, R.head, R.tail\n * @example\n *\n *      R.init([1, 2, 3]);  //=> [1, 2]\n *      R.init([1, 2]);     //=> [1]\n *      R.init([1]);        //=> []\n *      R.init([]);         //=> []\n *\n *      R.init('abc');  //=> 'ab'\n *      R.init('ab');   //=> 'a'\n *      R.init('a');    //=> ''\n *      R.init('');     //=> ''\n */\nvar init = /*#__PURE__*/slice(0, -1);\nexport default init;","import _containsWith from './internal/_containsWith';\nimport _curry3 from './internal/_curry3';\nimport _filter from './internal/_filter';\n\n/**\n * Takes a predicate `pred`, a list `xs`, and a list `ys`, and returns a list\n * `xs'` comprising each of the elements of `xs` which is equal to one or more\n * elements of `ys` according to `pred`.\n *\n * `pred` must be a binary function expecting an element from each list.\n *\n * `xs`, `ys`, and `xs'` are treated as sets, semantically, so ordering should\n * not be significant, but since `xs'` is ordered the implementation guarantees\n * that its values are in the same order as they appear in `xs`. Duplicates are\n * not removed, so `xs'` may contain duplicates if `xs` contains duplicates.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Relation\n * @sig ((a, b) -> Boolean) -> [a] -> [b] -> [a]\n * @param {Function} pred\n * @param {Array} xs\n * @param {Array} ys\n * @return {Array}\n * @see R.intersection\n * @example\n *\n *      R.innerJoin(\n *        (record, id) => record.id === id,\n *        [{id: 824, name: 'Richie Furay'},\n *         {id: 956, name: 'Dewey Martin'},\n *         {id: 313, name: 'Bruce Palmer'},\n *         {id: 456, name: 'Stephen Stills'},\n *         {id: 177, name: 'Neil Young'}],\n *        [177, 456, 999]\n *      );\n *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n */\nvar innerJoin = /*#__PURE__*/_curry3(function innerJoin(pred, xs, ys) {\n  return _filter(function (x) {\n    return _containsWith(pred, x, ys);\n  }, xs);\n});\nexport default innerJoin;","import _curry3 from './internal/_curry3';\n\n/**\n * Inserts the supplied element into the list, at the specified `index`. _Note that\n\n * this is not destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} index The position to insert the element\n * @param {*} elt The element to insert into the Array\n * @param {Array} list The list to insert into\n * @return {Array} A new Array with `elt` inserted at `index`.\n * @example\n *\n *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]\n */\nvar insert = /*#__PURE__*/_curry3(function insert(idx, elt, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(idx, 0, elt);\n  return result;\n});\nexport default insert;","import _curry3 from './internal/_curry3';\n\n/**\n * Inserts the sub-list into the list, at the specified `index`. _Note that this is not\n * destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig Number -> [a] -> [a] -> [a]\n * @param {Number} index The position to insert the sub-list\n * @param {Array} elts The sub-list to insert into the Array\n * @param {Array} list The list to insert the sub-list into\n * @return {Array} A new Array with `elts` inserted starting at `index`.\n * @example\n *\n *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]\n */\nvar insertAll = /*#__PURE__*/_curry3(function insertAll(idx, elts, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  return [].concat(Array.prototype.slice.call(list, 0, idx), elts, Array.prototype.slice.call(list, idx));\n});\nexport default insertAll;","import _contains from './_contains';\n\nvar _Set = /*#__PURE__*/function () {\n  function _Set() {\n    /* globals Set */\n    this._nativeSet = typeof Set === 'function' ? new Set() : null;\n    this._items = {};\n  }\n\n  // until we figure out why jsdoc chokes on this\n  // @param item The item to add to the Set\n  // @returns {boolean} true if the item did not exist prior, otherwise false\n  //\n  _Set.prototype.add = function (item) {\n    return !hasOrAdd(item, true, this);\n  };\n\n  //\n  // @param item The item to check for existence in the Set\n  // @returns {boolean} true if the item exists in the Set, otherwise false\n  //\n  _Set.prototype.has = function (item) {\n    return hasOrAdd(item, false, this);\n  };\n\n  //\n  // Combines the logic for checking whether an item is a member of the set and\n  // for adding a new item to the set.\n  //\n  // @param item       The item to check or add to the Set instance.\n  // @param shouldAdd  If true, the item will be added to the set if it doesn't\n  //                   already exist.\n  // @param set        The set instance to check or add to.\n  // @return {boolean} true if the item already existed, otherwise false.\n  //\n  return _Set;\n}();\n\nfunction hasOrAdd(item, shouldAdd, set) {\n  var type = typeof item;\n  var prevSize, newSize;\n  switch (type) {\n    case 'string':\n    case 'number':\n      // distinguish between +0 and -0\n      if (item === 0 && 1 / item === -Infinity) {\n        if (set._items['-0']) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items['-0'] = true;\n          }\n          return false;\n        }\n      }\n      // these types can all utilise the native Set\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n          set._nativeSet.add(item);\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = {};\n            set._items[type][item] = true;\n          }\n          return false;\n        } else if (item in set._items[type]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][item] = true;\n          }\n          return false;\n        }\n      }\n\n    case 'boolean':\n      // set._items['boolean'] holds a two element array\n      // representing [ falseExists, trueExists ]\n      if (type in set._items) {\n        var bIdx = item ? 1 : 0;\n        if (set._items[type][bIdx]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][bIdx] = true;\n          }\n          return false;\n        }\n      } else {\n        if (shouldAdd) {\n          set._items[type] = item ? [false, true] : [true, false];\n        }\n        return false;\n      }\n\n    case 'function':\n      // compare functions for reference equality\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n          set._nativeSet.add(item);\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = [item];\n          }\n          return false;\n        }\n        if (!_contains(item, set._items[type])) {\n          if (shouldAdd) {\n            set._items[type].push(item);\n          }\n          return false;\n        }\n        return true;\n      }\n\n    case 'undefined':\n      if (set._items[type]) {\n        return true;\n      } else {\n        if (shouldAdd) {\n          set._items[type] = true;\n        }\n        return false;\n      }\n\n    case 'object':\n      if (item === null) {\n        if (!set._items['null']) {\n          if (shouldAdd) {\n            set._items['null'] = true;\n          }\n          return false;\n        }\n        return true;\n      }\n    /* falls through */\n    default:\n      // reduce the search size of heterogeneous sets by creating buckets\n      // for each type.\n      type = Object.prototype.toString.call(item);\n      if (!(type in set._items)) {\n        if (shouldAdd) {\n          set._items[type] = [item];\n        }\n        return false;\n      }\n      // scan through all previously applied items\n      if (!_contains(item, set._items[type])) {\n        if (shouldAdd) {\n          set._items[type].push(item);\n        }\n        return false;\n      }\n      return true;\n  }\n}\n\n// A simple Set type that honours R.equals semantics\nexport default _Set;","import _Set from './internal/_Set';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied function to\n * each list element. Prefers the first item if the supplied function produces\n * the same value on two items. [`R.equals`](#equals) is used for comparison.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> b) -> [a] -> [a]\n * @param {Function} fn A function used to produce a value to use during comparisons.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n */\nvar uniqBy = /*#__PURE__*/_curry2(function uniqBy(fn, list) {\n  var set = new _Set();\n  var result = [];\n  var idx = 0;\n  var appliedItem, item;\n\n  while (idx < list.length) {\n    item = list[idx];\n    appliedItem = fn(item);\n    if (set.add(appliedItem)) {\n      result.push(item);\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default uniqBy;","import identity from './identity';\nimport uniqBy from './uniqBy';\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list. [`R.equals`](#equals) is used to determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n *      R.uniq([1, '1']);     //=> [1, '1']\n *      R.uniq([[42], [42]]); //=> [[42]]\n */\nvar uniq = /*#__PURE__*/uniqBy(identity);\nexport default uniq;","import _contains from './internal/_contains';\nimport _curry2 from './internal/_curry2';\nimport _filter from './internal/_filter';\nimport flip from './flip';\nimport uniq from './uniq';\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of those\n * elements common to both lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The list of elements found in both `list1` and `list2`.\n * @see R.innerJoin\n * @example\n *\n *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n */\nvar intersection = /*#__PURE__*/_curry2(function intersection(list1, list2) {\n  var lookupList, filteredList;\n  if (list1.length > list2.length) {\n    lookupList = list1;\n    filteredList = list2;\n  } else {\n    lookupList = list2;\n    filteredList = list1;\n  }\n  return uniq(_filter(flip(_contains)(lookupList), filteredList));\n});\nexport default intersection;","import _checkForMethod from './internal/_checkForMethod';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Creates a new list with the separator interposed between elements.\n *\n * Dispatches to the `intersperse` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} separator The element to add to the list.\n * @param {Array} list The list to be interposed.\n * @return {Array} The new list.\n * @example\n *\n *      R.intersperse('n', ['ba', 'a', 'a']); //=> ['ba', 'n', 'a', 'n', 'a']\n */\nvar intersperse = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('intersperse', function intersperse(separator, list) {\n  var out = [];\n  var idx = 0;\n  var length = list.length;\n  while (idx < length) {\n    if (idx === length - 1) {\n      out.push(list[idx]);\n    } else {\n      out.push(list[idx], separator);\n    }\n    idx += 1;\n  }\n  return out;\n}));\nexport default intersperse;","import _objectAssign from './_objectAssign';\n\nexport default typeof Object.assign === 'function' ? Object.assign : _objectAssign;","import _has from './_has';\n\n// Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nexport default function _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n  while (idx < length) {\n    var source = arguments[idx];\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n    idx += 1;\n  }\n  return output;\n}","import _curry2 from './internal/_curry2';\n\n/**\n * Creates an object containing a single key:value pair.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @sig String -> a -> {String:a}\n * @param {String} key\n * @param {*} val\n * @return {Object}\n * @see R.pair\n * @example\n *\n *      var matchPhrases = R.compose(\n *        R.objOf('must'),\n *        R.map(R.objOf('match_phrase'))\n *      );\n *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n */\nvar objOf = /*#__PURE__*/_curry2(function objOf(key, val) {\n  var obj = {};\n  obj[key] = val;\n  return obj;\n});\nexport default objOf;","import _assign from './_assign';\nimport _identity from './_identity';\nimport _isArrayLike from './_isArrayLike';\nimport _isTransformer from './_isTransformer';\nimport objOf from '../objOf';\n\nvar _stepCatArray = {\n  '@@transducer/init': Array,\n  '@@transducer/step': function (xs, x) {\n    xs.push(x);\n    return xs;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatString = {\n  '@@transducer/init': String,\n  '@@transducer/step': function (a, b) {\n    return a + b;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatObject = {\n  '@@transducer/init': Object,\n  '@@transducer/step': function (result, input) {\n    return _assign(result, _isArrayLike(input) ? objOf(input[0], input[1]) : input);\n  },\n  '@@transducer/result': _identity\n};\n\nexport default function _stepCat(obj) {\n  if (_isTransformer(obj)) {\n    return obj;\n  }\n  if (_isArrayLike(obj)) {\n    return _stepCatArray;\n  }\n  if (typeof obj === 'string') {\n    return _stepCatString;\n  }\n  if (typeof obj === 'object') {\n    return _stepCatObject;\n  }\n  throw new Error('Cannot create transformer for ' + obj);\n}","import _clone from './internal/_clone';\nimport _curry3 from './internal/_curry3';\nimport _isTransformer from './internal/_isTransformer';\nimport _reduce from './internal/_reduce';\nimport _stepCat from './internal/_stepCat';\n\n/**\n * Transforms the items of the list with the transducer and appends the\n * transformed items to the accumulator using an appropriate iterator function\n * based on the accumulator type.\n *\n * The accumulator can be an array, string, object or a transformer. Iterated\n * items will be appended to arrays and concatenated to strings. Objects will\n * be merged directly or 2-item arrays will be merged as key, value pairs.\n *\n * The accumulator can also be a transformer object that provides a 2-arity\n * reducing iterator function, step, 0-arity initial value function, init, and\n * 1-arity result extraction function result. The step function is used as the\n * iterator function in reduce. The result function is used to convert the\n * final accumulator into the return type and in most cases is R.identity. The\n * init function is used to provide the initial accumulator.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the\n * transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig a -> (b -> b) -> [c] -> a\n * @param {*} acc The initial accumulator value.\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n *\n *      R.into([], transducer, numbers); //=> [2, 3]\n *\n *      var intoArray = R.into([]);\n *      intoArray(transducer, numbers); //=> [2, 3]\n */\nvar into = /*#__PURE__*/_curry3(function into(acc, xf, list) {\n  return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);\n});\nexport default into;","import _curry1 from './internal/_curry1';\nimport _has from './internal/_has';\nimport keys from './keys';\n\n/**\n * Same as [`R.invertObj`](#invertObj), however this accounts for objects with\n * duplicate values by putting the values into an array.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: [ s, ... ]}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object with keys in an array.\n * @see R.invertObj\n * @example\n *\n *      var raceResultsByFirstName = {\n *        first: 'alice',\n *        second: 'jake',\n *        third: 'alice',\n *      };\n *      R.invert(raceResultsByFirstName);\n *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n */\nvar invert = /*#__PURE__*/_curry1(function invert(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    var val = obj[key];\n    var list = _has(val, out) ? out[val] : out[val] = [];\n    list[list.length] = key;\n    idx += 1;\n  }\n  return out;\n});\nexport default invert;","import _curry1 from './internal/_curry1';\nimport keys from './keys';\n\n/**\n * Returns a new object with the keys of the given object as values, and the\n * values of the given object, which are coerced to strings, as keys. Note\n * that the last key found is preferred when handling the same value.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: s}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object\n * @see R.invert\n * @example\n *\n *      var raceResults = {\n *        first: 'alice',\n *        second: 'jake'\n *      };\n *      R.invertObj(raceResults);\n *      //=> { 'alice': 'first', 'jake':'second' }\n *\n *      // Alternatively:\n *      var raceResults = ['alice', 'jake'];\n *      R.invertObj(raceResults);\n *      //=> { 'alice': '0', 'jake':'1' }\n */\nvar invertObj = /*#__PURE__*/_curry1(function invertObj(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    out[obj[key]] = key;\n    idx += 1;\n  }\n  return out;\n});\nexport default invertObj;","import _curry2 from './internal/_curry2';\nimport _isFunction from './internal/_isFunction';\nimport curryN from './curryN';\nimport toString from './toString';\n\n/**\n * Turns a named method with a specified arity into a function that can be\n * called directly supplied with arguments and a target object.\n *\n * The returned function is curried and accepts `arity + 1` parameters where\n * the final parameter is the target object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of the method to call.\n * @return {Function} A new curried function.\n * @see R.construct\n * @example\n *\n *      var sliceFrom = R.invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *      var sliceFrom6 = R.invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\nvar invoker = /*#__PURE__*/_curry2(function invoker(arity, method) {\n  return curryN(arity + 1, function () {\n    var target = arguments[arity];\n    if (target != null && _isFunction(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n  });\n});\nexport default invoker;","import _curry2 from './internal/_curry2';\n\n/**\n * See if an object (`val`) is an instance of the supplied constructor. This\n * function will check up the inheritance chain, if any.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Type\n * @sig (* -> {*}) -> a -> Boolean\n * @param {Object} ctor A constructor\n * @param {*} val The value to test\n * @return {Boolean}\n * @example\n *\n *      R.is(Object, {}); //=> true\n *      R.is(Number, 1); //=> true\n *      R.is(Object, 1); //=> false\n *      R.is(String, 's'); //=> true\n *      R.is(String, new String('')); //=> true\n *      R.is(Object, new String('')); //=> true\n *      R.is(Object, 's'); //=> false\n *      R.is(Number, {}); //=> false\n */\nvar is = /*#__PURE__*/_curry2(function is(Ctor, val) {\n  return val != null && val.constructor === Ctor || val instanceof Ctor;\n});\nexport default is;","import _curry1 from './internal/_curry1';\nimport empty from './empty';\nimport equals from './equals';\n\n/**\n * Returns `true` if the given value is its type's empty value; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> Boolean\n * @param {*} x\n * @return {Boolean}\n * @see R.empty\n * @example\n *\n *      R.isEmpty([1, 2, 3]);   //=> false\n *      R.isEmpty([]);          //=> true\n *      R.isEmpty('');          //=> true\n *      R.isEmpty(null);        //=> false\n *      R.isEmpty({});          //=> true\n *      R.isEmpty({length: 0}); //=> false\n */\nvar isEmpty = /*#__PURE__*/_curry1(function isEmpty(x) {\n  return x != null && equals(x, empty(x));\n});\nexport default isEmpty;","import invoker from './invoker';\n\n/**\n * Returns a string made by inserting the `separator` between each element and\n * concatenating all the elements into a single string.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig String -> [a] -> String\n * @param {Number|String} separator The string used to separate the elements.\n * @param {Array} xs The elements to join into a string.\n * @return {String} str The string made by concatenating `xs` with `separator`.\n * @see R.split\n * @example\n *\n *      var spacer = R.join(' ');\n *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n */\nvar join = /*#__PURE__*/invoker(1, 'join');\nexport default join;","import _curry1 from './internal/_curry1';\nimport converge from './converge';\n\n/**\n * juxt applies a list of functions to a list of values.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Function\n * @sig [(a, b, ..., m) -> n] -> ((a, b, ..., m) -> [n])\n * @param {Array} fns An array of functions\n * @return {Function} A function that returns a list of values after applying each of the original `fns` to its parameters.\n * @see R.applySpec\n * @example\n *\n *      var getRange = R.juxt([Math.min, Math.max]);\n *      getRange(3, 4, 9, -3); //=> [-3, 9]\n * @symb R.juxt([f, g, h])(a, b) = [f(a, b), g(a, b), h(a, b)]\n */\nvar juxt = /*#__PURE__*/_curry1(function juxt(fns) {\n  return converge(function () {\n    return Array.prototype.slice.call(arguments, 0);\n  }, fns);\n});\nexport default juxt;","import _curry1 from './internal/_curry1';\n\n/**\n * Returns a list containing the names of all the properties of the supplied\n * object, including prototype properties.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own and prototype properties.\n * @see R.keys, R.valuesIn\n * @example\n *\n *      var F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      var f = new F();\n *      R.keysIn(f); //=> ['x', 'y']\n */\nvar keysIn = /*#__PURE__*/_curry1(function keysIn(obj) {\n  var prop;\n  var ks = [];\n  for (prop in obj) {\n    ks[ks.length] = prop;\n  }\n  return ks;\n});\nexport default keysIn;","import _curry2 from './internal/_curry2';\nimport _isArray from './internal/_isArray';\nimport equals from './equals';\n\n/**\n * Returns the position of the last occurrence of an item in an array, or -1 if\n * the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.indexOf\n * @example\n *\n *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\n *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\n */\nvar lastIndexOf = /*#__PURE__*/_curry2(function lastIndexOf(target, xs) {\n  if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {\n    return xs.lastIndexOf(target);\n  } else {\n    var idx = xs.length - 1;\n    while (idx >= 0) {\n      if (equals(xs[idx], target)) {\n        return idx;\n      }\n      idx -= 1;\n    }\n    return -1;\n  }\n});\nexport default lastIndexOf;","export default function _isNumber(x) {\n  return Object.prototype.toString.call(x) === '[object Number]';\n}","import _curry1 from './internal/_curry1';\nimport _isNumber from './internal/_isNumber';\n\n/**\n * Returns the number of elements in the array by returning `list.length`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [a] -> Number\n * @param {Array} list The array to inspect.\n * @return {Number} The length of the array.\n * @example\n *\n *      R.length([]); //=> 0\n *      R.length([1, 2, 3]); //=> 3\n */\nvar length = /*#__PURE__*/_curry1(function length(list) {\n  return list != null && _isNumber(list.length) ? list.length : NaN;\n});\nexport default length;","import _curry2 from './internal/_curry2';\nimport map from './map';\n\n/**\n * Returns a lens for the given getter and setter functions. The getter \"gets\"\n * the value of the focus; the setter \"sets\" the value of the focus. The setter\n * should not mutate the data structure.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n * @param {Function} getter\n * @param {Function} setter\n * @return {Lens}\n * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lens(R.prop('x'), R.assoc('x'));\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\nvar lens = /*#__PURE__*/_curry2(function lens(getter, setter) {\n  return function (toFunctorFn) {\n    return function (target) {\n      return map(function (focus) {\n        return setter(focus, target);\n      }, toFunctorFn(getter(target)));\n    };\n  };\n});\nexport default lens;","import _curry1 from './internal/_curry1';\nimport lens from './lens';\nimport nth from './nth';\nimport update from './update';\n\n/**\n * Returns a lens whose focus is the specified index.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Number -> Lens s a\n * @param {Number} n\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var headLens = R.lensIndex(0);\n *\n *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'\n *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']\n *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']\n */\nvar lensIndex = /*#__PURE__*/_curry1(function lensIndex(n) {\n  return lens(nth(n), update(n));\n});\nexport default lensIndex;","import _curry1 from './internal/_curry1';\nimport assocPath from './assocPath';\nimport lens from './lens';\nimport path from './path';\n\n/**\n * Returns a lens whose focus is the specified path.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @typedefn Idx = String | Int\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig [Idx] -> Lens s a\n * @param {Array} path The path to use.\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var xHeadYLens = R.lensPath(['x', 0, 'y']);\n *\n *      R.view(xHeadYLens, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> 2\n *      R.set(xHeadYLens, 1, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: 1, z: 3}, {y: 4, z: 5}]}\n *      R.over(xHeadYLens, R.negate, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: -2, z: 3}, {y: 4, z: 5}]}\n */\nvar lensPath = /*#__PURE__*/_curry1(function lensPath(p) {\n  return lens(path(p), assocPath(p));\n});\nexport default lensPath;","import _curry1 from './internal/_curry1';\nimport assoc from './assoc';\nimport lens from './lens';\nimport prop from './prop';\n\n/**\n * Returns a lens whose focus is the specified property.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig String -> Lens s a\n * @param {String} k\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\nvar lensProp = /*#__PURE__*/_curry1(function lensProp(k) {\n  return lens(prop(k), assoc(k));\n});\nexport default lensProp;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if the first argument is less than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.gt\n * @example\n *\n *      R.lt(2, 1); //=> false\n *      R.lt(2, 2); //=> false\n *      R.lt(2, 3); //=> true\n *      R.lt('a', 'z'); //=> true\n *      R.lt('z', 'a'); //=> false\n */\nvar lt = /*#__PURE__*/_curry2(function lt(a, b) {\n  return a < b;\n});\nexport default lt;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if the first argument is less than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.gte\n * @example\n *\n *      R.lte(2, 1); //=> false\n *      R.lte(2, 2); //=> true\n *      R.lte(2, 3); //=> true\n *      R.lte('a', 'z'); //=> true\n *      R.lte('z', 'a'); //=> false\n */\nvar lte = /*#__PURE__*/_curry2(function lte(a, b) {\n  return a <= b;\n});\nexport default lte;","import _curry3 from './internal/_curry3';\n\n/**\n * The `mapAccum` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from left to right, and returning a final value of this\n * accumulator together with the new list.\n *\n * The iterator function receives two arguments, *acc* and *value*, and should\n * return a tuple *[acc, value]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((acc, x) -> (acc, y)) -> acc -> [x] -> (acc, [y])\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.addIndex, R.mapAccumRight\n * @example\n *\n *      var digits = ['1', '2', '3', '4'];\n *      var appender = (a, b) => [a + b, a + b];\n *\n *      R.mapAccum(appender, 0, digits); //=> ['01234', ['01', '012', '0123', '01234']]\n * @symb R.mapAccum(f, a, [b, c, d]) = [\n *   f(f(f(a, b)[0], c)[0], d)[0],\n *   [\n *     f(a, b)[1],\n *     f(f(a, b)[0], c)[1],\n *     f(f(f(a, b)[0], c)[0], d)[1]\n *   ]\n * ]\n */\nvar mapAccum = /*#__PURE__*/_curry3(function mapAccum(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var tuple = [acc];\n  while (idx < len) {\n    tuple = fn(tuple[0], list[idx]);\n    result[idx] = tuple[1];\n    idx += 1;\n  }\n  return [tuple[0], result];\n});\nexport default mapAccum;","import _curry3 from './internal/_curry3';\n\n/**\n * The `mapAccumRight` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from right to left, and returning a final value of this\n * accumulator together with the new list.\n *\n * Similar to [`mapAccum`](#mapAccum), except moves through the input list from\n * the right to the left.\n *\n * The iterator function receives two arguments, *value* and *acc*, and should\n * return a tuple *[value, acc]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((x, acc) -> (y, acc)) -> acc -> [x] -> ([y], acc)\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.addIndex, R.mapAccum\n * @example\n *\n *      var digits = ['1', '2', '3', '4'];\n *      var append = (a, b) => [a + b, a + b];\n *\n *      R.mapAccumRight(append, 5, digits); //=> [['12345', '2345', '345', '45'], '12345']\n * @symb R.mapAccumRight(f, a, [b, c, d]) = [\n *   [\n *     f(b, f(c, f(d, a)[0])[0])[1],\n *     f(c, f(d, a)[0])[1],\n *     f(d, a)[1],\n *   ]\n *   f(b, f(c, f(d, a)[0])[0])[0],\n * ]\n */\nvar mapAccumRight = /*#__PURE__*/_curry3(function mapAccumRight(fn, acc, list) {\n  var idx = list.length - 1;\n  var result = [];\n  var tuple = [acc];\n  while (idx >= 0) {\n    tuple = fn(list[idx], tuple[0]);\n    result[idx] = tuple[1];\n    idx -= 1;\n  }\n  return [result, tuple[0]];\n});\nexport default mapAccumRight;","import _curry2 from './internal/_curry2';\nimport _reduce from './internal/_reduce';\nimport keys from './keys';\n\n/**\n * An Object-specific version of [`map`](#map). The function is applied to three\n * arguments: *(value, key, obj)*. If only the value is significant, use\n * [`map`](#map) instead.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig ((*, String, Object) -> *) -> Object -> Object\n * @param {Function} fn\n * @param {Object} obj\n * @return {Object}\n * @see R.map\n * @example\n *\n *      var values = { x: 1, y: 2, z: 3 };\n *      var prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n *\n *      R.mapObjIndexed(prependKeyAndDouble, values); //=> { x: 'x2', y: 'y4', z: 'z6' }\n */\nvar mapObjIndexed = /*#__PURE__*/_curry2(function mapObjIndexed(fn, obj) {\n  return _reduce(function (acc, key) {\n    acc[key] = fn(obj[key], key, obj);\n    return acc;\n  }, {}, keys(obj));\n});\nexport default mapObjIndexed;","import _curry2 from './internal/_curry2';\n\n/**\n * Tests a regular expression against a String. Note that this function will\n * return an empty array when there are no matches. This differs from\n * [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\n * which returns `null` when there are no matches.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig RegExp -> String -> [String | Undefined]\n * @param {RegExp} rx A regular expression.\n * @param {String} str The string to match against\n * @return {Array} The list of matches or empty array.\n * @see R.test\n * @example\n *\n *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n *      R.match(/a/, 'b'); //=> []\n *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\n */\nvar match = /*#__PURE__*/_curry2(function match(rx, str) {\n  return str.match(rx) || [];\n});\nexport default match;","import _curry2 from './internal/_curry2';\nimport _isInteger from './internal/_isInteger';\n\n/**\n * `mathMod` behaves like the modulo operator should mathematically, unlike the\n * `%` operator (and by extension, [`R.modulo`](#modulo)). So while\n * `-17 % 5` is `-2`, `mathMod(-17, 5)` is `3`. `mathMod` requires Integer\n * arguments, and returns NaN when the modulus is zero or negative.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} m The dividend.\n * @param {Number} p the modulus.\n * @return {Number} The result of `b mod a`.\n * @see R.modulo\n * @example\n *\n *      R.mathMod(-17, 5);  //=> 3\n *      R.mathMod(17, 5);   //=> 2\n *      R.mathMod(17, -5);  //=> NaN\n *      R.mathMod(17, 0);   //=> NaN\n *      R.mathMod(17.2, 5); //=> NaN\n *      R.mathMod(17, 5.3); //=> NaN\n *\n *      var clock = R.mathMod(R.__, 12);\n *      clock(15); //=> 3\n *      clock(24); //=> 0\n *\n *      var seventeenMod = R.mathMod(17);\n *      seventeenMod(3);  //=> 2\n *      seventeenMod(4);  //=> 1\n *      seventeenMod(10); //=> 7\n */\nvar mathMod = /*#__PURE__*/_curry2(function mathMod(m, p) {\n  if (!_isInteger(m)) {\n    return NaN;\n  }\n  if (!_isInteger(p) || p < 1) {\n    return NaN;\n  }\n  return (m % p + p) % p;\n});\nexport default mathMod;","import _curry3 from './internal/_curry3';\n\n/**\n * Takes a function and two values, and returns whichever value produces the\n * larger result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.max, R.minBy\n * @example\n *\n *      //  square :: Number -> Number\n *      var square = n => n * n;\n *\n *      R.maxBy(square, -3, 2); //=> -3\n *\n *      R.reduce(R.maxBy(square), 0, [3, -5, 4, 1, -2]); //=> -5\n *      R.reduce(R.maxBy(square), 0, []); //=> 0\n */\nvar maxBy = /*#__PURE__*/_curry3(function maxBy(f, a, b) {\n  return f(b) > f(a) ? b : a;\n});\nexport default maxBy;","import add from './add';\nimport reduce from './reduce';\n\n/**\n * Adds together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The sum of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.sum([2,4,6,8,100,1]); //=> 121\n */\nvar sum = /*#__PURE__*/reduce(add, 0);\nexport default sum;","import _curry1 from './internal/_curry1';\nimport sum from './sum';\n\n/**\n * Returns the mean of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.median\n * @example\n *\n *      R.mean([2, 7, 9]); //=> 6\n *      R.mean([]); //=> NaN\n */\nvar mean = /*#__PURE__*/_curry1(function mean(list) {\n  return sum(list) / list.length;\n});\nexport default mean;","import _curry1 from './internal/_curry1';\nimport mean from './mean';\n\n/**\n * Returns the median of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.mean\n * @example\n *\n *      R.median([2, 9, 7]); //=> 7\n *      R.median([7, 2, 10, 9]); //=> 8\n *      R.median([]); //=> NaN\n */\nvar median = /*#__PURE__*/_curry1(function median(list) {\n  var len = list.length;\n  if (len === 0) {\n    return NaN;\n  }\n  var width = 2 - len % 2;\n  var idx = (len - width) / 2;\n  return mean(Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n  }).slice(idx, idx + width));\n});\nexport default median;","import _arity from './internal/_arity';\nimport _curry2 from './internal/_curry2';\nimport _has from './internal/_has';\n\n/**\n * A customisable version of [`R.memoize`](#memoize). `memoizeWith` takes an\n * additional function that will be applied to a given argument set and used to\n * create the cache key under which the results of the function to be memoized\n * will be stored. Care must be taken when implementing key generation to avoid\n * clashes that may overwrite previous entries erroneously.\n *\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (*... -> String) -> (*... -> a) -> (*... -> a)\n * @param {Function} fn The function to generate the cache key.\n * @param {Function} fn The function to memoize.\n * @return {Function} Memoized version of `fn`.\n * @see R.memoize\n * @example\n *\n *      let count = 0;\n *      const factorial = R.memoizeWith(R.identity, n => {\n *        count += 1;\n *        return R.product(R.range(1, n + 1));\n *      });\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      count; //=> 1\n */\nvar memoizeWith = /*#__PURE__*/_curry2(function memoizeWith(mFn, fn) {\n  var cache = {};\n  return _arity(fn.length, function () {\n    var key = mFn.apply(this, arguments);\n    if (!_has(key, cache)) {\n      cache[key] = fn.apply(this, arguments);\n    }\n    return cache[key];\n  });\n});\nexport default memoizeWith;","import memoizeWith from './memoizeWith';\nimport toString from './toString';\n\n/**\n * Creates a new function that, when invoked, caches the result of calling `fn`\n * for a given argument set and returns the result. Subsequent calls to the\n * memoized `fn` with the same argument set will not result in an additional\n * call to `fn`; instead, the cached result for that set of arguments will be\n * returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (*... -> a) -> (*... -> a)\n * @param {Function} fn The function to memoize.\n * @return {Function} Memoized version of `fn`.\n * @see R.memoizeWith\n * @deprecated since v0.25.0\n * @example\n *\n *      let count = 0;\n *      const factorial = R.memoize(n => {\n *        count += 1;\n *        return R.product(R.range(1, n + 1));\n *      });\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      count; //=> 1\n */\nvar memoize = /*#__PURE__*/memoizeWith(function () {\n  return toString(arguments);\n});\nexport default memoize;","import _assign from './internal/_assign';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      var resetToDefault = R.merge(R.__, {x: 0});\n *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n * @symb R.merge({ x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: 5, z: 3 }\n */\nvar merge = /*#__PURE__*/_curry2(function merge(l, r) {\n  return _assign({}, l, r);\n});\nexport default merge;","import _assign from './internal/_assign';\nimport _curry1 from './internal/_curry1';\n\n/**\n * Merges a list of objects together into one object.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig [{k: v}] -> {k: v}\n * @param {Array} list An array of objects\n * @return {Object} A merged object.\n * @see R.reduce\n * @example\n *\n *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n * @symb R.mergeAll([{ x: 1 }, { y: 2 }, { z: 3 }]) = { x: 1, y: 2, z: 3 }\n */\nvar mergeAll = /*#__PURE__*/_curry1(function mergeAll(list) {\n  return _assign.apply(null, [{}].concat(list));\n});\nexport default mergeAll;","import _curry3 from './internal/_curry3';\nimport _has from './internal/_has';\n\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the key\n * and the values associated with the key in each object, with the result being\n * used as the value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWithKey, R.merge, R.mergeWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeWithKey(concatValues,\n *                     { a: true, thing: 'foo', values: [10, 20] },\n *                     { b: true, thing: 'bar', values: [15, 35] });\n *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n * @symb R.mergeWithKey(f, { x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: f('y', 2, 5), z: 3 }\n */\nvar mergeWithKey = /*#__PURE__*/_curry3(function mergeWithKey(fn, l, r) {\n  var result = {};\n  var k;\n\n  for (k in l) {\n    if (_has(k, l)) {\n      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n    }\n  }\n\n  for (k in r) {\n    if (_has(k, r) && !_has(k, result)) {\n      result[k] = r[k];\n    }\n  }\n\n  return result;\n});\nexport default mergeWithKey;","import _curry3 from './internal/_curry3';\nimport _isObject from './internal/_isObject';\nimport mergeWithKey from './mergeWithKey';\n\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to the key and associated values\n *   using the resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWithKey, R.mergeDeep, R.mergeDeepWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeDeepWithKey(concatValues,\n *                         { a: true, c: { thing: 'foo', values: [10, 20] }},\n *                         { b: true, c: { thing: 'bar', values: [15, 35] }});\n *      //=> { a: true, b: true, c: { thing: 'bar', values: [10, 20, 15, 35] }}\n */\nvar mergeDeepWithKey = /*#__PURE__*/_curry3(function mergeDeepWithKey(fn, lObj, rObj) {\n  return mergeWithKey(function (k, lVal, rVal) {\n    if (_isObject(lVal) && _isObject(rVal)) {\n      return mergeDeepWithKey(fn, lVal, rVal);\n    } else {\n      return fn(k, lVal, rVal);\n    }\n  }, lObj, rObj);\n});\nexport default mergeDeepWithKey;","import _curry2 from './internal/_curry2';\nimport mergeDeepWithKey from './mergeDeepWithKey';\n\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the first object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepRight, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepLeft({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                      { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 10, contact: { email: 'moo@example.com' }}\n */\nvar mergeDeepLeft = /*#__PURE__*/_curry2(function mergeDeepLeft(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return lVal;\n  }, lObj, rObj);\n});\nexport default mergeDeepLeft;","import _curry2 from './internal/_curry2';\nimport mergeDeepWithKey from './mergeDeepWithKey';\n\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepLeft, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepRight({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                       { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 40, contact: { email: 'baa@example.com' }}\n */\nvar mergeDeepRight = /*#__PURE__*/_curry2(function mergeDeepRight(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return rVal;\n  }, lObj, rObj);\n});\nexport default mergeDeepRight;","import _curry3 from './internal/_curry3';\nimport mergeDeepWithKey from './mergeDeepWithKey';\n\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to associated values using the\n *   resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWith, R.mergeDeep, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepWith(R.concat,\n *                      { a: true, c: { values: [10, 20] }},\n *                      { b: true, c: { values: [15, 35] }});\n *      //=> { a: true, b: true, c: { values: [10, 20, 15, 35] }}\n */\nvar mergeDeepWith = /*#__PURE__*/_curry3(function mergeDeepWith(fn, lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return fn(lVal, rVal);\n  }, lObj, rObj);\n});\nexport default mergeDeepWith;","import _curry3 from './internal/_curry3';\nimport mergeWithKey from './mergeWithKey';\n\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the values\n * associated with the key in each object, with the result being used as the\n * value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWith, R.merge, R.mergeWithKey\n * @example\n *\n *      R.mergeWith(R.concat,\n *                  { a: true, values: [10, 20] },\n *                  { b: true, values: [15, 35] });\n *      //=> { a: true, b: true, values: [10, 20, 15, 35] }\n */\nvar mergeWith = /*#__PURE__*/_curry3(function mergeWith(fn, l, r) {\n  return mergeWithKey(function (_, _l, _r) {\n    return fn(_l, _r);\n  }, l, r);\n});\nexport default mergeWith;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns the smaller of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.minBy, R.max\n * @example\n *\n *      R.min(789, 123); //=> 123\n *      R.min('a', 'b'); //=> 'a'\n */\nvar min = /*#__PURE__*/_curry2(function min(a, b) {\n  return b < a ? b : a;\n});\nexport default min;","import _curry3 from './internal/_curry3';\n\n/**\n * Takes a function and two values, and returns whichever value produces the\n * smaller result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.min, R.maxBy\n * @example\n *\n *      //  square :: Number -> Number\n *      var square = n => n * n;\n *\n *      R.minBy(square, -3, 2); //=> 2\n *\n *      R.reduce(R.minBy(square), Infinity, [3, -5, 4, 1, -2]); //=> 1\n *      R.reduce(R.minBy(square), Infinity, []); //=> Infinity\n */\nvar minBy = /*#__PURE__*/_curry3(function minBy(f, a, b) {\n  return f(b) < f(a) ? b : a;\n});\nexport default minBy;","import _curry2 from './internal/_curry2';\n\n/**\n * Divides the first parameter by the second and returns the remainder. Note\n * that this function preserves the JavaScript-style behavior for modulo. For\n * mathematical modulo see [`mathMod`](#mathMod).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The value to the divide.\n * @param {Number} b The pseudo-modulus\n * @return {Number} The result of `b % a`.\n * @see R.mathMod\n * @example\n *\n *      R.modulo(17, 3); //=> 2\n *      // JS behavior:\n *      R.modulo(-17, 3); //=> -2\n *      R.modulo(17, -3); //=> 2\n *\n *      var isOdd = R.modulo(R.__, 2);\n *      isOdd(42); //=> 0\n *      isOdd(21); //=> 1\n */\nvar modulo = /*#__PURE__*/_curry2(function modulo(a, b) {\n  return a % b;\n});\nexport default modulo;","import _curry2 from './internal/_curry2';\n\n/**\n * Multiplies two numbers. Equivalent to `a * b` but curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a * b`.\n * @see R.divide\n * @example\n *\n *      var double = R.multiply(2);\n *      var triple = R.multiply(3);\n *      double(3);       //=>  6\n *      triple(4);       //=> 12\n *      R.multiply(2, 5);  //=> 10\n */\nvar multiply = /*#__PURE__*/_curry2(function multiply(a, b) {\n  return a * b;\n});\nexport default multiply;","import _curry1 from './internal/_curry1';\n\n/**\n * Negates its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number}\n * @example\n *\n *      R.negate(42); //=> -42\n */\nvar negate = /*#__PURE__*/_curry1(function negate(n) {\n  return -n;\n});\nexport default negate;","import _complement from './internal/_complement';\nimport _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xany from './internal/_xany';\nimport any from './any';\n\n/**\n * Returns `true` if no elements of the list match the predicate, `false`\n * otherwise.\n *\n * Dispatches to the `any` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n * @see R.all, R.any\n * @example\n *\n *      var isEven = n => n % 2 === 0;\n *      var isOdd = n => n % 2 === 1;\n *\n *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true\n *      R.none(isOdd, [1, 3, 5, 7, 8, 11]); //=> false\n */\nvar none = /*#__PURE__*/_curry2( /*#__PURE__*/_complement( /*#__PURE__*/_dispatchable(['any'], _xany, any)));\nexport default none;","import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\nimport nth from './nth';\n\n/**\n * Returns a function which returns its nth argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig Number -> *... -> *\n * @param {Number} n\n * @return {Function}\n * @example\n *\n *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\n *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\n * @symb R.nthArg(-1)(a, b, c) = c\n * @symb R.nthArg(0)(a, b, c) = a\n * @symb R.nthArg(1)(a, b, c) = b\n */\nvar nthArg = /*#__PURE__*/_curry1(function nthArg(n) {\n  var arity = n < 0 ? 1 : n + 1;\n  return curryN(arity, function () {\n    return nth(n, arguments);\n  });\n});\nexport default nthArg;","import _curry3 from './internal/_curry3';\n\n/**\n * `o` is a curried composition function that returns a unary function.\n * Like [`compose`](#compose), `o` performs right-to-left function composition.\n * Unlike [`compose`](#compose), the rightmost function passed to `o` will be\n * invoked with only one argument.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (b -> c) -> (a -> b) -> a -> c\n * @param {Function} f\n * @param {Function} g\n * @return {Function}\n * @see R.compose, R.pipe\n * @example\n *\n *      var classyGreeting = name => \"The name's \" + name.last + \", \" + name.first + \" \" + name.last\n *      var yellGreeting = R.o(R.toUpper, classyGreeting);\n *      yellGreeting({first: 'James', last: 'Bond'}); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.o(R.multiply(10), R.add(10))(-4) //=> 60\n *\n * @symb R.o(f, g, x) = f(g(x))\n */\nvar o = /*#__PURE__*/_curry3(function o(f, g, x) {\n  return f(g(x));\n});\nexport default o;","import _curry1 from './internal/_curry1';\nimport _of from './internal/_of';\n\n/**\n * Returns a singleton array containing the value provided.\n *\n * Note this `of` is different from the ES6 `of`; See\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> [a]\n * @param {*} x any value\n * @return {Array} An array wrapping `x`.\n * @example\n *\n *      R.of(null); //=> [null]\n *      R.of([42]); //=> [[42]]\n */\nvar of = /*#__PURE__*/_curry1(_of);\nexport default of;","export default function _of(x) {\n  return [x];\n}","import _curry2 from './internal/_curry2';\n\n/**\n * Returns a partial copy of an object omitting the keys specified.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [String] -> {String: *} -> {String: *}\n * @param {Array} names an array of String property names to omit from the new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with properties from `names` not on it.\n * @see R.pick\n * @example\n *\n *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n */\nvar omit = /*#__PURE__*/_curry2(function omit(names, obj) {\n  var result = {};\n  var index = {};\n  var idx = 0;\n  var len = names.length;\n\n  while (idx < len) {\n    index[names[idx]] = 1;\n    idx += 1;\n  }\n\n  for (var prop in obj) {\n    if (!index.hasOwnProperty(prop)) {\n      result[prop] = obj[prop];\n    }\n  }\n  return result;\n});\nexport default omit;","import _arity from './internal/_arity';\nimport _curry1 from './internal/_curry1';\n\n/**\n * Accepts a function `fn` and returns a function that guards invocation of\n * `fn` such that `fn` can only ever be called once, no matter how many times\n * the returned function is invoked. The first value calculated is returned in\n * subsequent invocations.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a... -> b) -> (a... -> b)\n * @param {Function} fn The function to wrap in a call-only-once wrapper.\n * @return {Function} The wrapped function.\n * @example\n *\n *      var addOneOnce = R.once(x => x + 1);\n *      addOneOnce(10); //=> 11\n *      addOneOnce(addOneOnce(50)); //=> 11\n */\nvar once = /*#__PURE__*/_curry1(function once(fn) {\n  var called = false;\n  var result;\n  return _arity(fn.length, function () {\n    if (called) {\n      return result;\n    }\n    called = true;\n    result = fn.apply(this, arguments);\n    return result;\n  });\n});\nexport default once;","import _curry3 from './internal/_curry3';\n\n// `Identity` is a functor that holds a single value, where `map` simply\n// transforms the held value with the provided function.\nvar Identity = function (x) {\n  return { value: x, map: function (f) {\n      return Identity(f(x));\n    } };\n};\n\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the result of applying the given function to\n * the focused value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> (a -> a) -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var headLens = R.lensIndex(0);\n *\n *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\n */\nvar over = /*#__PURE__*/_curry3(function over(lens, f, x) {\n  // The value returned by the getter function is first transformed with `f`,\n  // then set as the value of an `Identity`. This is then mapped over with the\n  // setter function of the lens.\n  return lens(function (y) {\n    return Identity(f(y));\n  })(x).value;\n});\nexport default over;","import _curry2 from './internal/_curry2';\n\n/**\n * Takes two arguments, `fst` and `snd`, and returns `[fst, snd]`.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category List\n * @sig a -> b -> (a,b)\n * @param {*} fst\n * @param {*} snd\n * @return {Array}\n * @see R.objOf, R.of\n * @example\n *\n *      R.pair('foo', 'bar'); //=> ['foo', 'bar']\n */\nvar pair = /*#__PURE__*/_curry2(function pair(fst, snd) {\n  return [fst, snd];\n});\nexport default pair;","import _arity from './_arity';\nimport _curry2 from './_curry2';\n\nexport default function _createPartialApplicator(concat) {\n  return _curry2(function (fn, args) {\n    return _arity(Math.max(0, fn.length - args.length), function () {\n      return fn.apply(this, concat(args, arguments));\n    });\n  });\n}","import _concat from './internal/_concat';\nimport _createPartialApplicator from './internal/_createPartialApplicator';\n\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided initially followed by the arguments provided to `g`.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [a, b, c, ...] -> ((d, e, f, ..., n) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partialRight\n * @example\n *\n *      var multiply2 = (a, b) => a * b;\n *      var double = R.partial(multiply2, [2]);\n *      double(2); //=> 4\n *\n *      var greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      var sayHello = R.partial(greet, ['Hello']);\n *      var sayHelloToMs = R.partial(sayHello, ['Ms.']);\n *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partial(f, [a, b])(c, d) = f(a, b, c, d)\n */\nvar partial = /*#__PURE__*/_createPartialApplicator(_concat);\nexport default partial;","import _concat from './internal/_concat';\nimport _createPartialApplicator from './internal/_createPartialApplicator';\nimport flip from './flip';\n\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided to `g` followed by the arguments provided initially.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [d, e, f, ..., n] -> ((a, b, c, ...) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partial\n * @example\n *\n *      var greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      var greetMsJaneJones = R.partialRight(greet, ['Ms.', 'Jane', 'Jones']);\n *\n *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partialRight(f, [a, b])(c, d) = f(c, d, a, b)\n */\nvar partialRight = /*#__PURE__*/_createPartialApplicator( /*#__PURE__*/flip(_concat));\nexport default partialRight;","import filter from './filter';\nimport juxt from './juxt';\nimport reject from './reject';\n\n/**\n * Takes a predicate and a list or other `Filterable` object and returns the\n * pair of filterable objects of the same type of elements which do and do not\n * satisfy, the predicate, respectively. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> [f a, f a]\n * @param {Function} pred A predicate to determine which side the element belongs to.\n * @param {Array} filterable the list (or other filterable) to partition.\n * @return {Array} An array, containing first the subset of elements that satisfy the\n *         predicate, and second the subset of elements that do not satisfy.\n * @see R.filter, R.reject\n * @example\n *\n *      R.partition(R.contains('s'), ['sss', 'ttt', 'foo', 'bars']);\n *      // => [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n *\n *      R.partition(R.contains('s'), { a: 'sss', b: 'ttt', foo: 'bars' });\n *      // => [ { a: 'sss', foo: 'bars' }, { b: 'ttt' }  ]\n */\nvar partition = /*#__PURE__*/juxt([filter, reject]);\nexport default partition;","import _curry3 from './internal/_curry3';\nimport equals from './equals';\nimport path from './path';\n\n/**\n * Determines whether a nested path on an object has a specific value, in\n * [`R.equals`](#equals) terms. Most likely used to filter a list.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Relation\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> Boolean\n * @param {Array} path The path of the nested property to use\n * @param {*} val The value to compare the nested property with\n * @param {Object} obj The object to check the nested property in\n * @return {Boolean} `true` if the value equals the nested object property,\n *         `false` otherwise.\n * @example\n *\n *      var user1 = { address: { zipCode: 90210 } };\n *      var user2 = { address: { zipCode: 55555 } };\n *      var user3 = { name: 'Bob' };\n *      var users = [ user1, user2, user3 ];\n *      var isFamous = R.pathEq(['address', 'zipCode'], 90210);\n *      R.filter(isFamous, users); //=> [ user1 ]\n */\nvar pathEq = /*#__PURE__*/_curry3(function pathEq(_path, val, obj) {\n  return equals(path(_path, obj), val);\n});\nexport default pathEq;","import _curry3 from './internal/_curry3';\nimport defaultTo from './defaultTo';\nimport path from './path';\n\n/**\n * If the given, non-null object has a value at the given path, returns the\n * value at that path. Otherwise returns the provided default value.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig a -> [Idx] -> {a} -> a\n * @param {*} d The default value.\n * @param {Array} p The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path` of the supplied object or the default value.\n * @example\n *\n *      R.pathOr('N/A', ['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.pathOr('N/A', ['a', 'b'], {c: {b: 2}}); //=> \"N/A\"\n */\nvar pathOr = /*#__PURE__*/_curry3(function pathOr(d, p, obj) {\n  return defaultTo(d, path(p, obj));\n});\nexport default pathOr;","import _curry3 from './internal/_curry3';\nimport path from './path';\n\n/**\n * Returns `true` if the specified object property at given path satisfies the\n * given predicate; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Logic\n * @typedefn Idx = String | Int\n * @sig (a -> Boolean) -> [Idx] -> {a} -> Boolean\n * @param {Function} pred\n * @param {Array} propPath\n * @param {*} obj\n * @return {Boolean}\n * @see R.propSatisfies, R.path\n * @example\n *\n *      R.pathSatisfies(y => y > 0, ['x', 'y'], {x: {y: 2}}); //=> true\n */\nvar pathSatisfies = /*#__PURE__*/_curry3(function pathSatisfies(pred, propPath, obj) {\n  return propPath.length > 0 && pred(path(propPath, obj));\n});\nexport default pathSatisfies;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns a partial copy of an object containing only the keys specified. If\n * the key does not exist, the property is ignored.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.omit, R.props\n * @example\n *\n *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n */\nvar pick = /*#__PURE__*/_curry2(function pick(names, obj) {\n  var result = {};\n  var idx = 0;\n  while (idx < names.length) {\n    if (names[idx] in obj) {\n      result[names[idx]] = obj[names[idx]];\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default pick;","import _curry2 from './internal/_curry2';\n\n/**\n * Similar to `pick` except that this one includes a `key: undefined` pair for\n * properties that don't exist.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.pick\n * @example\n *\n *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n */\nvar pickAll = /*#__PURE__*/_curry2(function pickAll(names, obj) {\n  var result = {};\n  var idx = 0;\n  var len = names.length;\n  while (idx < len) {\n    var name = names[idx];\n    result[name] = obj[name];\n    idx += 1;\n  }\n  return result;\n});\nexport default pickAll;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns a partial copy of an object containing only the keys that satisfy\n * the supplied predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig ((v, k) -> Boolean) -> {k: v} -> {k: v}\n * @param {Function} pred A predicate to determine whether or not a key\n *        should be included on the output object.\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties that satisfy `pred`\n *         on it.\n * @see R.pick, R.filter\n * @example\n *\n *      var isUpperCase = (val, key) => key.toUpperCase() === key;\n *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n */\nvar pickBy = /*#__PURE__*/_curry2(function pickBy(test, obj) {\n  var result = {};\n  for (var prop in obj) {\n    if (test(obj[prop], prop, obj)) {\n      result[prop] = obj[prop];\n    }\n  }\n  return result;\n});\nexport default pickBy;","import composeK from './composeK';\nimport reverse from './reverse';\n\n/**\n * Returns the left-to-right Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.pipeK(f, g, h)` is equivalent to `R.pipe(f, R.chain(g), R.chain(h))`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((a -> m b), (b -> m c), ..., (y -> m z)) -> (a -> m z)\n * @param {...Function}\n * @return {Function}\n * @see R.composeK\n * @example\n *\n *      //  parseJson :: String -> Maybe *\n *      //  get :: String -> Object -> Maybe *\n *\n *      //  getStateCode :: Maybe String -> Maybe String\n *      var getStateCode = R.pipeK(\n *        parseJson,\n *        get('user'),\n *        get('address'),\n *        get('state'),\n *        R.compose(Maybe.of, R.toUpper)\n *      );\n *\n *      getStateCode('{\"user\":{\"address\":{\"state\":\"ny\"}}}');\n *      //=> Just('NY')\n *      getStateCode('[Invalid JSON]');\n *      //=> Nothing()\n * @symb R.pipeK(f, g, h)(a) = R.chain(h, R.chain(g, f(a)))\n */\nexport default function pipeK() {\n  if (arguments.length === 0) {\n    throw new Error('pipeK requires at least one argument');\n  }\n  return composeK.apply(this, reverse(arguments));\n}","import _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Returns a new list with the given element at the front, followed by the\n * contents of the list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The item to add to the head of the output list.\n * @param {Array} list The array to add to the tail of the output list.\n * @return {Array} A new array.\n * @see R.append\n * @example\n *\n *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n */\nvar prepend = /*#__PURE__*/_curry2(function prepend(el, list) {\n  return _concat([el], list);\n});\nexport default prepend;","import multiply from './multiply';\nimport reduce from './reduce';\n\n/**\n * Multiplies together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The product of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.product([2,4,6,8,100,1]); //=> 38400\n */\nvar product = /*#__PURE__*/reduce(multiply, 1);\nexport default product;","import _curry2 from './internal/_curry2';\nimport curryN from './curryN';\n\n/**\n * Accepts a function `fn` and a list of transformer functions and returns a\n * new curried function. When the new function is invoked, it calls the\n * function `fn` with parameters consisting of the result of calling each\n * supplied handler on successive arguments to the new function.\n *\n * If more arguments are passed to the returned function than transformer\n * functions, those arguments are passed directly to `fn` as additional\n * parameters. If you expect additional arguments that don't need to be\n * transformed, although you can ignore them, it's best to pass an identity\n * function so that the new function reports the correct arity.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [(a -> x1), (b -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} fn The function to wrap.\n * @param {Array} transformers A list of transformer functions\n * @return {Function} The wrapped function.\n * @see R.converge\n * @example\n *\n *      R.useWith(Math.pow, [R.identity, R.identity])(3, 4); //=> 81\n *      R.useWith(Math.pow, [R.identity, R.identity])(3)(4); //=> 81\n *      R.useWith(Math.pow, [R.dec, R.inc])(3, 4); //=> 32\n *      R.useWith(Math.pow, [R.dec, R.inc])(3)(4); //=> 32\n * @symb R.useWith(f, [g, h])(a, b) = f(g(a), h(b))\n */\nvar useWith = /*#__PURE__*/_curry2(function useWith(fn, transformers) {\n  return curryN(transformers.length, function () {\n    var args = [];\n    var idx = 0;\n    while (idx < transformers.length) {\n      args.push(transformers[idx].call(this, arguments[idx]));\n      idx += 1;\n    }\n    return fn.apply(this, args.concat(Array.prototype.slice.call(arguments, transformers.length)));\n  });\n});\nexport default useWith;","import _map from './internal/_map';\nimport identity from './identity';\nimport pickAll from './pickAll';\nimport useWith from './useWith';\n\n/**\n * Reasonable analog to SQL `select` statement.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @category Relation\n * @sig [k] -> [{k: v}] -> [{k: v}]\n * @param {Array} props The property names to project\n * @param {Array} objs The objects to query\n * @return {Array} An array of objects with just the `props` properties.\n * @example\n *\n *      var abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};\n *      var fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};\n *      var kids = [abby, fred];\n *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]\n */\nvar project = /*#__PURE__*/useWith(_map, [pickAll, identity]); // passing `identity` gives correct arity\nexport default project;","import _curry3 from './internal/_curry3';\nimport equals from './equals';\n\n/**\n * Returns `true` if the specified object property is equal, in\n * [`R.equals`](#equals) terms, to the given value; `false` otherwise.\n * You can test multiple properties with [`R.where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig String -> a -> Object -> Boolean\n * @param {String} name\n * @param {*} val\n * @param {*} obj\n * @return {Boolean}\n * @see R.whereEq, R.propSatisfies, R.equals\n * @example\n *\n *      var abby = {name: 'Abby', age: 7, hair: 'blond'};\n *      var fred = {name: 'Fred', age: 12, hair: 'brown'};\n *      var rusty = {name: 'Rusty', age: 10, hair: 'brown'};\n *      var alois = {name: 'Alois', age: 15, disposition: 'surly'};\n *      var kids = [abby, fred, rusty, alois];\n *      var hasBrownHair = R.propEq('hair', 'brown');\n *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\n */\nvar propEq = /*#__PURE__*/_curry3(function propEq(name, val, obj) {\n  return equals(val, obj[name]);\n});\nexport default propEq;","import _curry3 from './internal/_curry3';\nimport is from './is';\n\n/**\n * Returns `true` if the specified object property is of the given type;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Type\n * @sig Type -> String -> Object -> Boolean\n * @param {Function} type\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.is, R.propSatisfies\n * @example\n *\n *      R.propIs(Number, 'x', {x: 1, y: 2});  //=> true\n *      R.propIs(Number, 'x', {x: 'foo'});    //=> false\n *      R.propIs(Number, 'x', {});            //=> false\n */\nvar propIs = /*#__PURE__*/_curry3(function propIs(type, name, obj) {\n  return is(type, obj[name]);\n});\nexport default propIs;","import _curry3 from './internal/_curry3';\nimport _has from './internal/_has';\n\n/**\n * If the given, non-null object has an own property with the specified name,\n * returns the value of that property. Otherwise returns the provided default\n * value.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Object\n * @sig a -> String -> Object -> a\n * @param {*} val The default value.\n * @param {String} p The name of the property to return.\n * @param {Object} obj The object to query.\n * @return {*} The value of given property of the supplied object or the default value.\n * @example\n *\n *      var alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      var favorite = R.prop('favoriteLibrary');\n *      var favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');\n *\n *      favorite(alice);  //=> undefined\n *      favoriteWithDefault(alice);  //=> 'Ramda'\n */\nvar propOr = /*#__PURE__*/_curry3(function propOr(val, p, obj) {\n  return obj != null && _has(p, obj) ? obj[p] : val;\n});\nexport default propOr;","import _curry3 from './internal/_curry3';\n\n/**\n * Returns `true` if the specified object property satisfies the given\n * predicate; `false` otherwise. You can test multiple properties with\n * [`R.where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Logic\n * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n * @param {Function} pred\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.where, R.propEq, R.propIs\n * @example\n *\n *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n */\nvar propSatisfies = /*#__PURE__*/_curry3(function propSatisfies(pred, name, obj) {\n  return pred(obj[name]);\n});\nexport default propSatisfies;","import _curry2 from './internal/_curry2';\n\n/**\n * Acts as multiple `prop`: array of keys in, array of values out. Preserves\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> [v]\n * @param {Array} ps The property names to fetch\n * @param {Object} obj The object to query\n * @return {Array} The corresponding values or partially applied function.\n * @example\n *\n *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\n *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\n *\n *      var fullName = R.compose(R.join(' '), R.props(['first', 'last']));\n *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\n */\nvar props = /*#__PURE__*/_curry2(function props(ps, obj) {\n  var len = ps.length;\n  var out = [];\n  var idx = 0;\n\n  while (idx < len) {\n    out[idx] = obj[ps[idx]];\n    idx += 1;\n  }\n\n  return out;\n});\nexport default props;","import _curry2 from './internal/_curry2';\nimport _isNumber from './internal/_isNumber';\n\n/**\n * Returns a list of numbers from `from` (inclusive) to `to` (exclusive).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> Number -> [Number]\n * @param {Number} from The first number in the list.\n * @param {Number} to One more than the last number in the list.\n * @return {Array} The list of numbers in tthe set `[a, b)`.\n * @example\n *\n *      R.range(1, 5);    //=> [1, 2, 3, 4]\n *      R.range(50, 53);  //=> [50, 51, 52]\n */\nvar range = /*#__PURE__*/_curry2(function range(from, to) {\n  if (!(_isNumber(from) && _isNumber(to))) {\n    throw new TypeError('Both arguments to range must be numbers');\n  }\n  var result = [];\n  var n = from;\n  while (n < to) {\n    result.push(n);\n    n += 1;\n  }\n  return result;\n});\nexport default range;","import _curry3 from './internal/_curry3';\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * Similar to [`reduce`](#reduce), except moves through the input list from the\n * right to the left.\n *\n * The iterator function receives two values: *(value, acc)*, while the arguments'\n * order of `reduce`'s iterator function is *(acc, value)*.\n *\n * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduceRight` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> b) -> b -> [a] -> b\n * @param {Function} fn The iterator function. Receives two values, the current element from the array\n *        and the accumulator.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.addIndex\n * @example\n *\n *      R.reduceRight(R.subtract, 0, [1, 2, 3, 4]) // => (1 - (2 - (3 - (4 - 0)))) = -2\n *      //    -               -2\n *      //   / \\              / \\\n *      //  1   -            1   3\n *      //     / \\              / \\\n *      //    2   -     ==>    2  -1\n *      //       / \\              / \\\n *      //      3   -            3   4\n *      //         / \\              / \\\n *      //        4   0            4   0\n *\n * @symb R.reduceRight(f, a, [b, c, d]) = f(b, f(c, f(d, a)))\n */\nvar reduceRight = /*#__PURE__*/_curry3(function reduceRight(fn, acc, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    acc = fn(list[idx], acc);\n    idx -= 1;\n  }\n  return acc;\n});\nexport default reduceRight;","import _curryN from './internal/_curryN';\nimport _reduce from './internal/_reduce';\nimport _reduced from './internal/_reduced';\n\n/**\n * Like [`reduce`](#reduce), `reduceWhile` returns a single item by iterating\n * through the list, successively calling the iterator function. `reduceWhile`\n * also takes a predicate that is evaluated before each step. If the predicate\n * returns `false`, it \"short-circuits\" the iteration and returns the current\n * value of the accumulator.\n *\n * @func\n * @memberOf R\n * @since v0.22.0\n * @category List\n * @sig ((a, b) -> Boolean) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} pred The predicate. It is passed the accumulator and the\n *        current element.\n * @param {Function} fn The iterator function. Receives two values, the\n *        accumulator and the current element.\n * @param {*} a The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced\n * @example\n *\n *      var isOdd = (acc, x) => x % 2 === 1;\n *      var xs = [1, 3, 5, 60, 777, 800];\n *      R.reduceWhile(isOdd, R.add, 0, xs); //=> 9\n *\n *      var ys = [2, 4, 6]\n *      R.reduceWhile(isOdd, R.add, 111, ys); //=> 111\n */\nvar reduceWhile = /*#__PURE__*/_curryN(4, [], function _reduceWhile(pred, fn, a, list) {\n  return _reduce(function (acc, x) {\n    return pred(acc, x) ? fn(acc, x) : _reduced(acc);\n  }, a, list);\n});\nexport default reduceWhile;","import _curry1 from './internal/_curry1';\nimport _reduced from './internal/_reduced';\n\n/**\n * Returns a value wrapped to indicate that it is the final value of the reduce\n * and transduce functions. The returned value should be considered a black\n * box: the internal structure is not guaranteed to be stable.\n *\n * Note: this optimization is unavailable to functions not explicitly listed\n * above. For instance, it is not currently supported by\n * [`reduceRight`](#reduceRight).\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category List\n * @sig a -> *\n * @param {*} x The final value of the reduce.\n * @return {*} The wrapped value.\n * @see R.reduce, R.transduce\n * @example\n *\n *     R.reduce(\n *       (acc, item) => item > 3 ? R.reduced(acc) : acc.concat(item),\n *       [],\n *       [1, 2, 3, 4, 5]) // [1, 2, 3]\n */\nvar reduced = /*#__PURE__*/_curry1(_reduced);\nexport default reduced;","import _curry2 from './internal/_curry2';\n\n/**\n * Calls an input function `n` times, returning an array containing the results\n * of those function calls.\n *\n * `fn` is passed one argument: The current value of `n`, which begins at `0`\n * and is gradually incremented to `n - 1`.\n *\n * @func\n * @memberOf R\n * @since v0.2.3\n * @category List\n * @sig (Number -> a) -> Number -> [a]\n * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n * @return {Array} An array containing the return values of all calls to `fn`.\n * @see R.repeat\n * @example\n *\n *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n * @symb R.times(f, 0) = []\n * @symb R.times(f, 1) = [f(0)]\n * @symb R.times(f, 2) = [f(0), f(1)]\n */\nvar times = /*#__PURE__*/_curry2(function times(fn, n) {\n  var len = Number(n);\n  var idx = 0;\n  var list;\n\n  if (len < 0 || isNaN(len)) {\n    throw new RangeError('n must be a non-negative number');\n  }\n  list = new Array(len);\n  while (idx < len) {\n    list[idx] = fn(idx);\n    idx += 1;\n  }\n  return list;\n});\nexport default times;","import _curry2 from './internal/_curry2';\nimport always from './always';\nimport times from './times';\n\n/**\n * Returns a fixed list of size `n` containing a specified identical value.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig a -> n -> [a]\n * @param {*} value The value to repeat.\n * @param {Number} n The desired size of the output list.\n * @return {Array} A new array containing `n` `value`s.\n * @see R.times\n * @example\n *\n *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n *\n *      var obj = {};\n *      var repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n * @symb R.repeat(a, 0) = []\n * @symb R.repeat(a, 1) = [a]\n * @symb R.repeat(a, 2) = [a, a]\n */\nvar repeat = /*#__PURE__*/_curry2(function repeat(value, n) {\n  return times(always(value), n);\n});\nexport default repeat;","import _curry3 from './internal/_curry3';\n\n/**\n * Replace a substring or regex match in a string with a replacement.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category String\n * @sig RegExp|String -> String -> String -> String\n * @param {RegExp|String} pattern A regular expression or a substring to match.\n * @param {String} replacement The string to replace the matches with.\n * @param {String} str The String to do the search and replacement in.\n * @return {String} The result.\n * @example\n *\n *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *\n *      // Use the \"g\" (global) flag to replace all occurrences:\n *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n */\nvar replace = /*#__PURE__*/_curry3(function replace(regex, replacement, str) {\n  return str.replace(regex, replacement);\n});\nexport default replace;","import _curry3 from './internal/_curry3';\n\n/**\n * Scan is similar to [`reduce`](#reduce), but returns a list of successively\n * reduced values from the left\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> [a]\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {Array} A list of all intermediately reduced values.\n * @see R.reduce\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]\n * @symb R.scan(f, a, [b, c]) = [a, f(a, b), f(f(a, b), c)]\n */\nvar scan = /*#__PURE__*/_curry3(function scan(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [acc];\n  while (idx < len) {\n    acc = fn(acc, list[idx]);\n    result[idx + 1] = acc;\n    idx += 1;\n  }\n  return result;\n});\nexport default scan;","import _curry2 from './internal/_curry2';\nimport ap from './ap';\nimport map from './map';\nimport prepend from './prepend';\nimport reduceRight from './reduceRight';\n\n/**\n * Transforms a [Traversable](https://github.com/fantasyland/fantasy-land#traversable)\n * of [Applicative](https://github.com/fantasyland/fantasy-land#applicative) into an\n * Applicative of Traversable.\n *\n * Dispatches to the `sequence` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> t (f a) -> f (t a)\n * @param {Function} of\n * @param {*} traversable\n * @return {*}\n * @see R.traverse\n * @example\n *\n *      R.sequence(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n *      R.sequence(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n *\n *      R.sequence(R.of, Just([1, 2, 3])); //=> [Just(1), Just(2), Just(3)]\n *      R.sequence(R.of, Nothing());       //=> [Nothing()]\n */\nvar sequence = /*#__PURE__*/_curry2(function sequence(of, traversable) {\n  return typeof traversable.sequence === 'function' ? traversable.sequence(of) : reduceRight(function (x, acc) {\n    return ap(map(prepend, x), acc);\n  }, of([]), traversable);\n});\nexport default sequence;","import _curry3 from './internal/_curry3';\nimport always from './always';\nimport over from './over';\n\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the given value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> a -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\n *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\n */\nvar set = /*#__PURE__*/_curry3(function set(lens, v, x) {\n  return over(lens, always(v), x);\n});\nexport default set;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns a copy of the list, sorted according to the comparator function,\n * which should accept two values at a time and return a negative number if the\n * first value is smaller, a positive number if it's larger, and zero if they\n * are equal. Please note that this is a **copy** of the list. It does not\n * modify the original.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, a) -> Number) -> [a] -> [a]\n * @param {Function} comparator A sorting function :: a -> b -> Int\n * @param {Array} list The list to sort\n * @return {Array} a new array with its elements sorted by the comparator function.\n * @example\n *\n *      var diff = function(a, b) { return a - b; };\n *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n */\nvar sort = /*#__PURE__*/_curry2(function sort(comparator, list) {\n  return Array.prototype.slice.call(list, 0).sort(comparator);\n});\nexport default sort;","import _curry2 from './internal/_curry2';\n\n/**\n * Sorts the list according to the supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord b => (a -> b) -> [a] -> [a]\n * @param {Function} fn\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted by the keys generated by `fn`.\n * @example\n *\n *      var sortByFirstItem = R.sortBy(R.prop(0));\n *      var sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n *      var pairs = [[-1, 1], [-2, 2], [-3, 3]];\n *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n *      var alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      var bob = {\n *        name: 'Bob',\n *        age: -10\n *      };\n *      var clara = {\n *        name: 'clara',\n *        age: 314.159\n *      };\n *      var people = [clara, bob, alice];\n *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n */\nvar sortBy = /*#__PURE__*/_curry2(function sortBy(fn, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var aa = fn(a);\n    var bb = fn(b);\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  });\n});\nexport default sortBy;","import _curry2 from './internal/_curry2';\n\n/**\n * Sorts a list according to a list of comparators.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Relation\n * @sig [(a, a) -> Number] -> [a] -> [a]\n * @param {Array} functions A list of comparator functions.\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted according to the comarator functions.\n * @example\n *\n *      var alice = {\n *        name: 'alice',\n *        age: 40\n *      };\n *      var bob = {\n *        name: 'bob',\n *        age: 30\n *      };\n *      var clara = {\n *        name: 'clara',\n *        age: 40\n *      };\n *      var people = [clara, bob, alice];\n *      var ageNameSort = R.sortWith([\n *        R.descend(R.prop('age')),\n *        R.ascend(R.prop('name'))\n *      ]);\n *      ageNameSort(people); //=> [alice, clara, bob]\n */\nvar sortWith = /*#__PURE__*/_curry2(function sortWith(fns, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var result = 0;\n    var i = 0;\n    while (result === 0 && i < fns.length) {\n      result = fns[i](a, b);\n      i += 1;\n    }\n    return result;\n  });\n});\nexport default sortWith;","import invoker from './invoker';\n\n/**\n * Splits a string into an array of strings based on the given\n * separator.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig (String | RegExp) -> String -> [String]\n * @param {String|RegExp} sep The pattern.\n * @param {String} str The string to separate into an array.\n * @return {Array} The array of strings from `str` separated by `str`.\n * @see R.join\n * @example\n *\n *      var pathComponents = R.split('/');\n *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n *\n *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n */\nvar split = /*#__PURE__*/invoker(1, 'split');\nexport default split;","import _curry2 from './internal/_curry2';\nimport length from './length';\nimport slice from './slice';\n\n/**\n * Splits a given list or string at a given index.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig Number -> [a] -> [[a], [a]]\n * @sig Number -> String -> [String, String]\n * @param {Number} index The index where the array/string is split.\n * @param {Array|String} array The array/string to be split.\n * @return {Array}\n * @example\n *\n *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n */\nvar splitAt = /*#__PURE__*/_curry2(function splitAt(index, array) {\n  return [slice(0, index, array), slice(index, length(array), array)];\n});\nexport default splitAt;","import _curry2 from './internal/_curry2';\nimport slice from './slice';\n\n/**\n * Splits a collection into slices of the specified length.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @sig Number -> String -> [String]\n * @param {Number} n\n * @param {Array} list\n * @return {Array}\n * @example\n *\n *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]\n *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']\n */\nvar splitEvery = /*#__PURE__*/_curry2(function splitEvery(n, list) {\n  if (n <= 0) {\n    throw new Error('First argument to splitEvery must be a positive integer');\n  }\n  var result = [];\n  var idx = 0;\n  while (idx < list.length) {\n    result.push(slice(idx, idx += n, list));\n  }\n  return result;\n});\nexport default splitEvery;","import _curry2 from './internal/_curry2';\n\n/**\n * Takes a list and a predicate and returns a pair of lists with the following properties:\n *\n *  - the result of concatenating the two output lists is equivalent to the input list;\n *  - none of the elements of the first output list satisfies the predicate; and\n *  - if the second output list is non-empty, its first element satisfies the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [[a], [a]]\n * @param {Function} pred The predicate that determines where the array is split.\n * @param {Array} list The array to be split.\n * @return {Array}\n * @example\n *\n *      R.splitWhen(R.equals(2), [1, 2, 3, 1, 2, 3]);   //=> [[1], [2, 3, 1, 2, 3]]\n */\nvar splitWhen = /*#__PURE__*/_curry2(function splitWhen(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var prefix = [];\n\n  while (idx < len && !pred(list[idx])) {\n    prefix.push(list[idx]);\n    idx += 1;\n  }\n\n  return [prefix, Array.prototype.slice.call(list, idx)];\n});\nexport default splitWhen;","import _curry2 from './internal/_curry2';\nimport equals from './equals';\nimport take from './take';\n\n/**\n * Checks if a list starts with the provided values\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> Boolean\n * @sig String -> Boolean\n * @param {*} prefix\n * @param {*} list\n * @return {Boolean}\n * @example\n *\n *      R.startsWith('a', 'abc')                //=> true\n *      R.startsWith('b', 'abc')                //=> false\n *      R.startsWith(['a'], ['a', 'b', 'c'])    //=> true\n *      R.startsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\nvar startsWith = /*#__PURE__*/_curry2(function (prefix, list) {\n  return equals(take(prefix.length, list), prefix);\n});\nexport default startsWith;","import _curry2 from './internal/_curry2';\n\n/**\n * Subtracts its second argument from its first argument.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a - b`.\n * @see R.add\n * @example\n *\n *      R.subtract(10, 8); //=> 2\n *\n *      var minus5 = R.subtract(R.__, 5);\n *      minus5(17); //=> 12\n *\n *      var complementaryAngle = R.subtract(90);\n *      complementaryAngle(30); //=> 60\n *      complementaryAngle(72); //=> 18\n */\nvar subtract = /*#__PURE__*/_curry2(function subtract(a, b) {\n  return Number(a) - Number(b);\n});\nexport default subtract;","import _curry2 from './internal/_curry2';\nimport concat from './concat';\nimport difference from './difference';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifferenceWith, R.difference, R.differenceWith\n * @example\n *\n *      R.symmetricDifference([1,2,3,4], [7,6,5,4,3]); //=> [1,2,7,6,5]\n *      R.symmetricDifference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5,1,2]\n */\nvar symmetricDifference = /*#__PURE__*/_curry2(function symmetricDifference(list1, list2) {\n  return concat(difference(list1, list2), difference(list2, list1));\n});\nexport default symmetricDifference;","import _curry3 from './internal/_curry3';\nimport concat from './concat';\nimport differenceWith from './differenceWith';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both. Duplication is determined according to the value\n * returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifference, R.difference, R.differenceWith\n * @example\n *\n *      var eqA = R.eqBy(R.prop('a'));\n *      var l1 = [{a: 1}, {a: 2}, {a: 3}, {a: 4}];\n *      var l2 = [{a: 3}, {a: 4}, {a: 5}, {a: 6}];\n *      R.symmetricDifferenceWith(eqA, l1, l2); //=> [{a: 1}, {a: 2}, {a: 5}, {a: 6}]\n */\nvar symmetricDifferenceWith = /*#__PURE__*/_curry3(function symmetricDifferenceWith(pred, list1, list2) {\n  return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));\n});\nexport default symmetricDifferenceWith;","import _curry2 from './internal/_curry2';\nimport slice from './slice';\n\n/**\n * Returns a new list containing the last `n` elements of a given list, passing\n * each value to the supplied predicate function, and terminating when the\n * predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropLastWhile, R.addIndex\n * @example\n *\n *      var isNotOne = x => x !== 1;\n *\n *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\n *\n *      R.takeLastWhile(x => x !== 'R' , 'Ramda'); //=> 'amda'\n */\nvar takeLastWhile = /*#__PURE__*/_curry2(function takeLastWhile(fn, xs) {\n  var idx = xs.length - 1;\n  while (idx >= 0 && fn(xs[idx])) {\n    idx -= 1;\n  }\n  return slice(idx + 1, Infinity, xs);\n});\nexport default takeLastWhile;","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XTakeWhile = /*#__PURE__*/function () {\n  function XTakeWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\n  XTakeWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\n  };\n\n  return XTakeWhile;\n}();\n\nvar _xtakeWhile = /*#__PURE__*/_curry2(function _xtakeWhile(f, xf) {\n  return new XTakeWhile(f, xf);\n});\nexport default _xtakeWhile;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xtakeWhile from './internal/_xtakeWhile';\nimport slice from './slice';\n\n/**\n * Returns a new list containing the first `n` elements of a given list,\n * passing each value to the supplied predicate function, and terminating when\n * the predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * Dispatches to the `takeWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropWhile, R.transduce, R.addIndex\n * @example\n *\n *      var isNotFour = x => x !== 4;\n *\n *      R.takeWhile(isNotFour, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3]\n *\n *      R.takeWhile(x => x !== 'd' , 'Ramda'); //=> 'Ram'\n */\nvar takeWhile = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['takeWhile'], _xtakeWhile, function takeWhile(fn, xs) {\n  var idx = 0;\n  var len = xs.length;\n  while (idx < len && fn(xs[idx])) {\n    idx += 1;\n  }\n  return slice(0, idx, xs);\n}));\nexport default takeWhile;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XTap = /*#__PURE__*/function () {\n  function XTap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XTap.prototype['@@transducer/init'] = _xfBase.init;\n  XTap.prototype['@@transducer/result'] = _xfBase.result;\n  XTap.prototype['@@transducer/step'] = function (result, input) {\n    this.f(input);\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XTap;\n}();\n\nvar _xtap = /*#__PURE__*/_curry2(function _xtap(f, xf) {\n  return new XTap(f, xf);\n});\nexport default _xtap;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xtap from './internal/_xtap';\n\n/**\n * Runs the given function with the supplied object, then returns the object.\n *\n * Acts as a transducer if a transformer is given as second parameter.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a -> *) -> a -> a\n * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n * @param {*} x\n * @return {*} `x`.\n * @example\n *\n *      var sayX = x => console.log('x is ' + x);\n *      R.tap(sayX, 100); //=> 100\n *      // logs 'x is 100'\n * @symb R.tap(f, a) = a\n */\nvar tap = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xtap, function tap(fn, x) {\n  fn(x);\n  return x;\n}));\nexport default tap;","import _cloneRegExp from './internal/_cloneRegExp';\nimport _curry2 from './internal/_curry2';\nimport _isRegExp from './internal/_isRegExp';\nimport toString from './toString';\n\n/**\n * Determines whether a given string matches a given regular expression.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category String\n * @sig RegExp -> String -> Boolean\n * @param {RegExp} pattern\n * @param {String} str\n * @return {Boolean}\n * @see R.match\n * @example\n *\n *      R.test(/^x/, 'xyz'); //=> true\n *      R.test(/^y/, 'xyz'); //=> false\n */\nvar test = /*#__PURE__*/_curry2(function test(pattern, str) {\n  if (!_isRegExp(pattern)) {\n    throw new TypeError('‘test’ requires a value of type RegExp as its first argument; received ' + toString(pattern));\n  }\n  return _cloneRegExp(pattern).test(str);\n});\nexport default test;","export default function _isRegExp(x) {\n  return Object.prototype.toString.call(x) === '[object RegExp]';\n}","import invoker from './invoker';\n\n/**\n * The lower case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to lower case.\n * @return {String} The lower case version of `str`.\n * @see R.toUpper\n * @example\n *\n *      R.toLower('XYZ'); //=> 'xyz'\n */\nvar toLower = /*#__PURE__*/invoker(0, 'toLowerCase');\nexport default toLower;","import _curry1 from './internal/_curry1';\nimport _has from './internal/_has';\n\n/**\n * Converts an object into an array of key, value arrays. Only the object's\n * own properties are used.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own properties.\n * @see R.fromPairs\n * @example\n *\n *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n */\nvar toPairs = /*#__PURE__*/_curry1(function toPairs(obj) {\n  var pairs = [];\n  for (var prop in obj) {\n    if (_has(prop, obj)) {\n      pairs[pairs.length] = [prop, obj[prop]];\n    }\n  }\n  return pairs;\n});\nexport default toPairs;","import _curry1 from './internal/_curry1';\n\n/**\n * Converts an object into an array of key, value arrays. The object's own\n * properties and prototype properties are used. Note that the order of the\n * output array is not guaranteed to be consistent across different JS\n * platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own\n *         and prototype properties.\n * @example\n *\n *      var F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      var f = new F();\n *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\n */\nvar toPairsIn = /*#__PURE__*/_curry1(function toPairsIn(obj) {\n  var pairs = [];\n  for (var prop in obj) {\n    pairs[pairs.length] = [prop, obj[prop]];\n  }\n  return pairs;\n});\nexport default toPairsIn;","import invoker from './invoker';\n\n/**\n * The upper case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to upper case.\n * @return {String} The upper case version of `str`.\n * @see R.toLower\n * @example\n *\n *      R.toUpper('abc'); //=> 'ABC'\n */\nvar toUpper = /*#__PURE__*/invoker(0, 'toUpperCase');\nexport default toUpper;","import _reduce from './internal/_reduce';\nimport _xwrap from './internal/_xwrap';\nimport curryN from './curryN';\n\n/**\n * Initializes a transducer using supplied iterator function. Returns a single\n * item by iterating through the list, successively calling the transformed\n * iterator function and passing it an accumulator value and the current value\n * from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It will be\n * wrapped as a transformer to initialize the transducer. A transformer can be\n * passed directly in place of an iterator function. In both cases, iteration\n * may be stopped early with the [`R.reduced`](#reduced) function.\n *\n * A transducer is a function that accepts a transformer and returns a\n * transformer and can be composed directly.\n *\n * A transformer is an an object that provides a 2-arity reducing iterator\n * function, step, 0-arity initial value function, init, and 1-arity result\n * extraction function, result. The step function is used as the iterator\n * function in reduce. The result function is used to convert the final\n * accumulator into the return type and in most cases is\n * [`R.identity`](#identity). The init function can be used to provide an\n * initial accumulator, but is ignored by transduce.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (c -> c) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array. Wrapped as transformer, if necessary, and used to\n *        initialize the transducer\n * @param {*} acc The initial accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced, R.into\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]\n *\n *      var isOdd = (x) => x % 2 === 1;\n *      var firstOddTransducer = R.compose(R.filter(isOdd), R.take(1));\n *      R.transduce(firstOddTransducer, R.flip(R.append), [], R.range(0, 100)); //=> [1]\n */\nvar transduce = /*#__PURE__*/curryN(4, function transduce(xf, fn, acc, list) {\n  return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);\n});\nexport default transduce;","import _curry1 from './internal/_curry1';\n\n/**\n * Transposes the rows and columns of a 2D list.\n * When passed a list of `n` lists of length `x`,\n * returns a list of `x` lists of length `n`.\n *\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [[a]] -> [[a]]\n * @param {Array} list A 2D list\n * @return {Array} A 2D list\n * @example\n *\n *      R.transpose([[1, 'a'], [2, 'b'], [3, 'c']]) //=> [[1, 2, 3], ['a', 'b', 'c']]\n *      R.transpose([[1, 2, 3], ['a', 'b', 'c']]) //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n *\n *      // If some of the rows are shorter than the following rows, their elements are skipped:\n *      R.transpose([[10, 11], [20], [], [30, 31, 32]]) //=> [[10, 20, 30], [11, 31], [32]]\n * @symb R.transpose([[a], [b], [c]]) = [a, b, c]\n * @symb R.transpose([[a, b], [c, d]]) = [[a, c], [b, d]]\n * @symb R.transpose([[a, b], [c]]) = [[a, c], [b]]\n */\nvar transpose = /*#__PURE__*/_curry1(function transpose(outerlist) {\n  var i = 0;\n  var result = [];\n  while (i < outerlist.length) {\n    var innerlist = outerlist[i];\n    var j = 0;\n    while (j < innerlist.length) {\n      if (typeof result[j] === 'undefined') {\n        result[j] = [];\n      }\n      result[j].push(innerlist[j]);\n      j += 1;\n    }\n    i += 1;\n  }\n  return result;\n});\nexport default transpose;","import _curry3 from './internal/_curry3';\nimport map from './map';\nimport sequence from './sequence';\n\n/**\n * Maps an [Applicative](https://github.com/fantasyland/fantasy-land#applicative)-returning\n * function over a [Traversable](https://github.com/fantasyland/fantasy-land#traversable),\n * then uses [`sequence`](#sequence) to transform the resulting Traversable of Applicative\n * into an Applicative of Traversable.\n *\n * Dispatches to the `traverse` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> (a -> f b) -> t a -> f (t b)\n * @param {Function} of\n * @param {Function} f\n * @param {*} traversable\n * @return {*}\n * @see R.sequence\n * @example\n *\n *      // Returns `Nothing` if the given divisor is `0`\n *      safeDiv = n => d => d === 0 ? Nothing() : Just(n / d)\n *\n *      R.traverse(Maybe.of, safeDiv(10), [2, 4, 5]); //=> Just([5, 2.5, 2])\n *      R.traverse(Maybe.of, safeDiv(10), [2, 0, 5]); //=> Nothing\n */\nvar traverse = /*#__PURE__*/_curry3(function traverse(of, f, traversable) {\n  return typeof traversable['fantasy-land/traverse'] === 'function' ? traversable['fantasy-land/traverse'](f, of) : sequence(of, map(f, traversable));\n});\nexport default traverse;","import _curry1 from './internal/_curry1';\n\nvar ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\nvar zeroWidth = '\\u200b';\nvar hasProtoTrim = typeof String.prototype.trim === 'function';\n/**\n * Removes (strips) whitespace from both ends of the string.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to trim.\n * @return {String} Trimmed version of `str`.\n * @example\n *\n *      R.trim('   xyz  '); //=> 'xyz'\n *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n */\nvar _trim = !hasProtoTrim || /*#__PURE__*/ws.trim() || ! /*#__PURE__*/zeroWidth.trim() ? function trim(str) {\n  var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n  var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n  return str.replace(beginRx, '').replace(endRx, '');\n} : function trim(str) {\n  return str.trim();\n};\nvar trim = /*#__PURE__*/_curry1(_trim);\nexport default trim;","import _arity from './internal/_arity';\nimport _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\n\n/**\n * `tryCatch` takes two functions, a `tryer` and a `catcher`. The returned\n * function evaluates the `tryer`; if it does not throw, it simply returns the\n * result. If the `tryer` *does* throw, the returned function evaluates the\n * `catcher` function and returns its result. Note that for effective\n * composition with this function, both the `tryer` and `catcher` functions\n * must return the same type of results.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig (...x -> a) -> ((e, ...x) -> a) -> (...x -> a)\n * @param {Function} tryer The function that may throw.\n * @param {Function} catcher The function that will be evaluated if `tryer` throws.\n * @return {Function} A new function that will catch exceptions and send then to the catcher.\n * @example\n *\n *      R.tryCatch(R.prop('x'), R.F)({x: true}); //=> true\n *      R.tryCatch(R.prop('x'), R.F)(null);      //=> false\n */\nvar tryCatch = /*#__PURE__*/_curry2(function _tryCatch(tryer, catcher) {\n  return _arity(tryer.length, function () {\n    try {\n      return tryer.apply(this, arguments);\n    } catch (e) {\n      return catcher.apply(this, _concat([e], arguments));\n    }\n  });\n});\nexport default tryCatch;","import _curry1 from './internal/_curry1';\n\n/**\n * Takes a function `fn`, which takes a single array argument, and returns a\n * function which:\n *\n *   - takes any number of positional arguments;\n *   - passes these arguments to `fn` as an array; and\n *   - returns the result.\n *\n * In other words, `R.unapply` derives a variadic function from a function which\n * takes an array. `R.unapply` is the inverse of [`R.apply`](#apply).\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Function\n * @sig ([*...] -> a) -> (*... -> a)\n * @param {Function} fn\n * @return {Function}\n * @see R.apply\n * @example\n *\n *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\n * @symb R.unapply(f)(a, b) = f([a, b])\n */\nvar unapply = /*#__PURE__*/_curry1(function unapply(fn) {\n  return function () {\n    return fn(Array.prototype.slice.call(arguments, 0));\n  };\n});\nexport default unapply;","import _curry1 from './internal/_curry1';\nimport nAry from './nAry';\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 1 parameter. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (* -> b) -> (a -> b)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 1.\n * @see R.binary, R.nAry\n * @example\n *\n *      var takesTwoArgs = function(a, b) {\n *        return [a, b];\n *      };\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      var takesOneArg = R.unary(takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only 1 argument is passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.unary(f)(a, b, c) = f(a)\n */\nvar unary = /*#__PURE__*/_curry1(function unary(fn) {\n  return nAry(1, fn);\n});\nexport default unary;","import _curry2 from './internal/_curry2';\nimport curryN from './curryN';\n\n/**\n * Returns a function of arity `n` from a (manually) curried function.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Function\n * @sig Number -> (a -> b) -> (a -> c)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to uncurry.\n * @return {Function} A new function.\n * @see R.curry\n * @example\n *\n *      var addFour = a => b => c => d => a + b + c + d;\n *\n *      var uncurriedAddFour = R.uncurryN(4, addFour);\n *      uncurriedAddFour(1, 2, 3, 4); //=> 10\n */\nvar uncurryN = /*#__PURE__*/_curry2(function uncurryN(depth, fn) {\n  return curryN(depth, function () {\n    var currentDepth = 1;\n    var value = fn;\n    var idx = 0;\n    var endIdx;\n    while (currentDepth <= depth && typeof value === 'function') {\n      endIdx = currentDepth === depth ? arguments.length : idx + value.length;\n      value = value.apply(this, Array.prototype.slice.call(arguments, idx, endIdx));\n      currentDepth += 1;\n      idx = endIdx;\n    }\n    return value;\n  });\n});\nexport default uncurryN;","import _curry2 from './internal/_curry2';\n\n/**\n * Builds a list from a seed value. Accepts an iterator function, which returns\n * either false to stop iteration or an array of length 2 containing the value\n * to add to the resulting list and the seed to be used in the next call to the\n * iterator function.\n *\n * The iterator function receives one argument: *(seed)*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (a -> [b]) -> * -> [b]\n * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n *        either false to quit iteration or an array of length two to proceed. The element\n *        at index 0 of this array will be added to the resulting array, and the element\n *        at index 1 will be passed to the next call to `fn`.\n * @param {*} seed The seed value.\n * @return {Array} The final list.\n * @example\n *\n *      var f = n => n > 50 ? false : [-n, n + 10];\n *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n * @symb R.unfold(f, x) = [f(x)[0], f(f(x)[1])[0], f(f(f(x)[1])[1])[0], ...]\n */\nvar unfold = /*#__PURE__*/_curry2(function unfold(fn, seed) {\n  var pair = fn(seed);\n  var result = [];\n  while (pair && pair.length) {\n    result[result.length] = pair[0];\n    pair = fn(pair[1]);\n  }\n  return result;\n});\nexport default unfold;","import _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\nimport compose from './compose';\nimport uniq from './uniq';\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @example\n *\n *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n */\nvar union = /*#__PURE__*/_curry2( /*#__PURE__*/compose(uniq, _concat));\nexport default union;","import _containsWith from './internal/_containsWith';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied predicate to\n * two list elements. Prefers the first item if two items compare equal based\n * on the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      var strEq = R.eqBy(String);\n *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n */\nvar uniqWith = /*#__PURE__*/_curry2(function uniqWith(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var item;\n  while (idx < len) {\n    item = list[idx];\n    if (!_containsWith(pred, item, result)) {\n      result[result.length] = item;\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default uniqWith;","import _concat from './internal/_concat';\nimport _curry3 from './internal/_curry3';\nimport uniqWith from './uniqWith';\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list. Duplication is determined according to the value returned by\n * applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [*] -> [*] -> [*]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @see R.union\n * @example\n *\n *      var l1 = [{a: 1}, {a: 2}];\n *      var l2 = [{a: 1}, {a: 4}];\n *      R.unionWith(R.eqBy(R.prop('a')), l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]\n */\nvar unionWith = /*#__PURE__*/_curry3(function unionWith(pred, list1, list2) {\n  return uniqWith(pred, _concat(list1, list2));\n});\nexport default unionWith;","import _curry3 from './internal/_curry3';\n\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is not satisfied, the function will return the result of\n * calling the `whenFalseFn` function with the same argument. If the predicate\n * is satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred        A predicate function\n * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates\n *                               to a falsy value.\n * @param {*}        x           An object to test with the `pred` function and\n *                               pass to `whenFalseFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.\n * @see R.ifElse, R.when\n * @example\n *\n *      let safeInc = R.unless(R.isNil, R.inc);\n *      safeInc(null); //=> null\n *      safeInc(1); //=> 2\n */\nvar unless = /*#__PURE__*/_curry3(function unless(pred, whenFalseFn, x) {\n  return pred(x) ? x : whenFalseFn(x);\n});\nexport default unless;","import _identity from './internal/_identity';\nimport chain from './chain';\n\n/**\n * Shorthand for `R.chain(R.identity)`, which removes one level of nesting from\n * any [Chain](https://github.com/fantasyland/fantasy-land#chain).\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain c => c (c a) -> c a\n * @param {*} list\n * @return {*}\n * @see R.flatten, R.chain\n * @example\n *\n *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n */\nvar unnest = /*#__PURE__*/chain(_identity);\nexport default unnest;","import _curry3 from './internal/_curry3';\n\n/**\n * Takes a predicate, a transformation function, and an initial value,\n * and returns a value of the same type as the initial value.\n * It does so by applying the transformation until the predicate is satisfied,\n * at which point it returns the satisfactory value.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred A predicate function\n * @param {Function} fn The iterator function\n * @param {*} init Initial value\n * @return {*} Final value that satisfies predicate\n * @example\n *\n *      R.until(R.gt(R.__, 100), R.multiply(2))(1) // => 128\n */\nvar until = /*#__PURE__*/_curry3(function until(pred, fn, init) {\n  var val = init;\n  while (!pred(val)) {\n    val = fn(val);\n  }\n  return val;\n});\nexport default until;","import _curry1 from './internal/_curry1';\n\n/**\n * Returns a list of all the properties, including prototype properties, of the\n * supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own and prototype properties.\n * @see R.values, R.keysIn\n * @example\n *\n *      var F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      var f = new F();\n *      R.valuesIn(f); //=> ['X', 'Y']\n */\nvar valuesIn = /*#__PURE__*/_curry1(function valuesIn(obj) {\n  var prop;\n  var vs = [];\n  for (prop in obj) {\n    vs[vs.length] = obj[prop];\n  }\n  return vs;\n});\nexport default valuesIn;","import _curry2 from './internal/_curry2';\n\n// `Const` is a functor that effectively ignores the function given to `map`.\nvar Const = function (x) {\n  return { value: x, 'fantasy-land/map': function () {\n      return this;\n    } };\n};\n\n/**\n * Returns a \"view\" of the given data structure, determined by the given lens.\n * The lens's focus determines which portion of the data structure is visible.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> s -> a\n * @param {Lens} lens\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});  //=> 1\n *      R.view(xLens, {x: 4, y: 2});  //=> 4\n */\nvar view = /*#__PURE__*/_curry2(function view(lens, x) {\n  // Using `Const` effectively ignores the setter function of the `lens`,\n  // leaving the value returned by the getter function unmodified.\n  return lens(Const)(x).value;\n});\nexport default view;","import _curry3 from './internal/_curry3';\n\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is satisfied, the function will return the result of calling\n * the `whenTrueFn` function with the same argument. If the predicate is not\n * satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred       A predicate function\n * @param {Function} whenTrueFn A function to invoke when the `condition`\n *                              evaluates to a truthy value.\n * @param {*}        x          An object to test with the `pred` function and\n *                              pass to `whenTrueFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`.\n * @see R.ifElse, R.unless\n * @example\n *\n *      // truncate :: String -> String\n *      var truncate = R.when(\n *        R.propSatisfies(R.gt(R.__, 10), 'length'),\n *        R.pipe(R.take(10), R.append('…'), R.join(''))\n *      );\n *      truncate('12345');         //=> '12345'\n *      truncate('0123456789ABC'); //=> '0123456789…'\n */\nvar when = /*#__PURE__*/_curry3(function when(pred, whenTrueFn, x) {\n  return pred(x) ? whenTrueFn(x) : x;\n});\nexport default when;","import _curry2 from './internal/_curry2';\nimport _has from './internal/_has';\n\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec. Each of the spec's own properties must be a predicate function.\n * Each predicate is applied to the value of the corresponding property of the\n * test object. `where` returns true if all the predicates return true, false\n * otherwise.\n *\n * `where` is well suited to declaratively expressing constraints for other\n * functions such as [`filter`](#filter) and [`find`](#find).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Object\n * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propSatisfies, R.whereEq\n * @example\n *\n *      // pred :: Object -> Boolean\n *      var pred = R.where({\n *        a: R.equals('foo'),\n *        b: R.complement(R.equals('bar')),\n *        x: R.gt(R.__, 10),\n *        y: R.lt(R.__, 20)\n *      });\n *\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true\n *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false\n */\nvar where = /*#__PURE__*/_curry2(function where(spec, testObj) {\n  for (var prop in spec) {\n    if (_has(prop, spec) && !spec[prop](testObj[prop])) {\n      return false;\n    }\n  }\n  return true;\n});\nexport default where;","import _curry2 from './internal/_curry2';\nimport equals from './equals';\nimport map from './map';\nimport where from './where';\n\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec, false otherwise. An object satisfies the spec if, for each of the\n * spec's own properties, accessing that property of the object gives the same\n * value (in [`R.equals`](#equals) terms) as accessing that property of the\n * spec.\n *\n * `whereEq` is a specialization of [`where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @sig {String: *} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propEq, R.where\n * @example\n *\n *      // pred :: Object -> Boolean\n *      var pred = R.whereEq({a: 1, b: 2});\n *\n *      pred({a: 1});              //=> false\n *      pred({a: 1, b: 2});        //=> true\n *      pred({a: 1, b: 2, c: 3});  //=> true\n *      pred({a: 1, b: 1});        //=> false\n */\nvar whereEq = /*#__PURE__*/_curry2(function whereEq(spec, testObj) {\n  return where(map(equals, spec), testObj);\n});\nexport default whereEq;","import _contains from './internal/_contains';\nimport _curry2 from './internal/_curry2';\nimport flip from './flip';\nimport reject from './reject';\n\n/**\n * Returns a new list without values in the first argument.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @param {Array} list1 The values to be removed from `list2`.\n * @param {Array} list2 The array to remove values from.\n * @return {Array} The new array without values in `list1`.\n * @see R.transduce, R.difference\n * @example\n *\n *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n */\nvar without = /*#__PURE__*/_curry2(function (xs, list) {\n  return reject(flip(_contains)(xs), list);\n});\nexport default without;","import _curry2 from './internal/_curry2';\n\n/**\n * Creates a new list out of the two supplied by creating each possible pair\n * from the lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The list made by combining each possible pair from\n *         `as` and `bs` into pairs (`[a, b]`).\n * @example\n *\n *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n * @symb R.xprod([a, b], [c, d]) = [[a, c], [a, d], [b, c], [b, d]]\n */\nvar xprod = /*#__PURE__*/_curry2(function xprod(a, b) {\n  // = xprodWith(prepend); (takes about 3 times as long...)\n  var idx = 0;\n  var ilen = a.length;\n  var j;\n  var jlen = b.length;\n  var result = [];\n  while (idx < ilen) {\n    j = 0;\n    while (j < jlen) {\n      result[result.length] = [a[idx], b[j]];\n      j += 1;\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default xprod;","import _curry2 from './internal/_curry2';\n\n/**\n * Creates a new list out of the two supplied by pairing up equally-positioned\n * items from both lists. The returned list is truncated to the length of the\n * shorter of the two input lists.\n * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n * @example\n *\n *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n * @symb R.zip([a, b, c], [d, e, f]) = [[a, d], [b, e], [c, f]]\n */\nvar zip = /*#__PURE__*/_curry2(function zip(a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n  while (idx < len) {\n    rv[idx] = [a[idx], b[idx]];\n    idx += 1;\n  }\n  return rv;\n});\nexport default zip;","import _curry2 from './internal/_curry2';\n\n/**\n * Creates a new object out of a list of keys and a list of values.\n * Key/value pairing is truncated to the length of the shorter of the two lists.\n * Note: `zipObj` is equivalent to `pipe(zip, fromPairs)`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [String] -> [*] -> {String: *}\n * @param {Array} keys The array that will be properties on the output object.\n * @param {Array} values The list of values on the output object.\n * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n * @example\n *\n *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n */\nvar zipObj = /*#__PURE__*/_curry2(function zipObj(keys, values) {\n  var idx = 0;\n  var len = Math.min(keys.length, values.length);\n  var out = {};\n  while (idx < len) {\n    out[keys[idx]] = values[idx];\n    idx += 1;\n  }\n  return out;\n});\nexport default zipObj;","import _curry3 from './internal/_curry3';\n\n/**\n * Creates a new list out of the two supplied by applying the function to each\n * equally-positioned pair in the lists. The returned list is truncated to the\n * length of the shorter of the two input lists.\n *\n * @function\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> c) -> [a] -> [b] -> [c]\n * @param {Function} fn The function used to combine the two elements into one value.\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\n *         using `fn`.\n * @example\n *\n *      var f = (x, y) => {\n *        // ...\n *      };\n *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\n *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\n * @symb R.zipWith(fn, [a, b, c], [d, e, f]) = [fn(a, d), fn(b, e), fn(c, f)]\n */\nvar zipWith = /*#__PURE__*/_curry3(function zipWith(fn, a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n  while (idx < len) {\n    rv[idx] = fn(a[idx], b[idx]);\n    idx += 1;\n  }\n  return rv;\n});\nexport default zipWith;","/*jshint browser:true, node:true*/\n\n'use strict';\n\n/**\n * @preserve Create and manage a DOM event delegator.\n *\n * @version 0.3.0\n * @codingstandard ftlabs-jsv2\n * @copyright The Financial Times Limited [All Rights Reserved]\n * @license MIT License (see LICENSE.txt)\n */\nvar Delegate = require('./delegate');\n\nmodule.exports = function(root) {\n  return new Delegate(root);\n};\n\nmodule.exports.Delegate = Delegate;\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',\n  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',\n  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',\n  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',\n  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',\n  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',\n  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',\n  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',\n  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',\n  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',\n  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // Internet Explorer and Edge do not support colors.\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","\n/**\n * Expose `parse`.\n */\n\nmodule.exports = parse;\n\n/**\n * Tests for browser support.\n */\n\nvar innerHTMLBug = false;\nvar bugTestDiv;\nif (typeof document !== 'undefined') {\n  bugTestDiv = document.createElement('div');\n  // Setup\n  bugTestDiv.innerHTML = '  <link/><table></table><a href=\"/a\">a</a><input type=\"checkbox\"/>';\n  // Make sure that link elements get serialized correctly by innerHTML\n  // This requires a wrapper element in IE\n  innerHTMLBug = !bugTestDiv.getElementsByTagName('link').length;\n  bugTestDiv = undefined;\n}\n\n/**\n * Wrap map from jquery.\n */\n\nvar map = {\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n  // for script/link/style tags to work in IE6-8, you have to wrap\n  // in a div with a non-whitespace character in front, ha!\n  _default: innerHTMLBug ? [1, 'X<div>', '</div>'] : [0, '', '']\n};\n\nmap.td =\nmap.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option =\nmap.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead =\nmap.tbody =\nmap.colgroup =\nmap.caption =\nmap.tfoot = [1, '<table>', '</table>'];\n\nmap.polyline =\nmap.ellipse =\nmap.polygon =\nmap.circle =\nmap.text =\nmap.line =\nmap.path =\nmap.rect =\nmap.g = [1, '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">','</svg>'];\n\n/**\n * Parse `html` and return a DOM Node instance, which could be a TextNode,\n * HTML DOM Node of some kind (<div> for example), or a DocumentFragment\n * instance, depending on the contents of the `html` string.\n *\n * @param {String} html - HTML string to \"domify\"\n * @param {Document} doc - The `document` instance to create the Node for\n * @return {DOMNode} the TextNode, DOM Node, or DocumentFragment instance\n * @api private\n */\n\nfunction parse(html, doc) {\n  if ('string' != typeof html) throw new TypeError('String expected');\n\n  // default to the global `document` object\n  if (!doc) doc = document;\n\n  // tag name\n  var m = /<([\\w:]+)/.exec(html);\n  if (!m) return doc.createTextNode(html);\n\n  html = html.replace(/^\\s+|\\s+$/g, ''); // Remove leading/trailing whitespace\n\n  var tag = m[1];\n\n  // body support\n  if (tag == 'body') {\n    var el = doc.createElement('html');\n    el.innerHTML = html;\n    return el.removeChild(el.lastChild);\n  }\n\n  // wrap map\n  var wrap = map[tag] || map._default;\n  var depth = wrap[0];\n  var prefix = wrap[1];\n  var suffix = wrap[2];\n  var el = doc.createElement('div');\n  el.innerHTML = prefix + html + suffix;\n  while (depth--) el = el.lastChild;\n\n  // one element\n  if (el.firstChild == el.lastChild) {\n    return el.removeChild(el.firstChild);\n  }\n\n  // several elements\n  var fragment = doc.createDocumentFragment();\n  while (el.firstChild) {\n    fragment.appendChild(el.removeChild(el.firstChild));\n  }\n\n  return fragment;\n}\n","'use strict';\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _LocationUtils = require('./LocationUtils');\n\nvar _PathUtils = require('./PathUtils');\n\nvar _createTransitionManager = require('./createTransitionManager');\n\nvar _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);\n\nvar _DOMUtils = require('./DOMUtils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar PopStateEvent = 'popstate';\nvar HashChangeEvent = 'hashchange';\n\nvar getHistoryState = function getHistoryState() {\n  try {\n    return window.history.state || {};\n  } catch (e) {\n    // IE 11 sometimes throws when accessing window.history.state\n    // See https://github.com/ReactTraining/history/pull/289\n    return {};\n  }\n};\n\n/**\n * Creates a history object that uses the HTML5 history API including\n * pushState, replaceState, and the popstate event.\n */\nvar createBrowserHistory = function createBrowserHistory() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  (0, _invariant2.default)(_DOMUtils.canUseDOM, 'Browser history needs a DOM');\n\n  var globalHistory = window.history;\n  var canUseHistory = (0, _DOMUtils.supportsHistory)();\n  var needsHashChangeListener = !(0, _DOMUtils.supportsPopStateOnHashChange)();\n\n  var _props$forceRefresh = props.forceRefresh,\n      forceRefresh = _props$forceRefresh === undefined ? false : _props$forceRefresh,\n      _props$getUserConfirm = props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === undefined ? _DOMUtils.getConfirmation : _props$getUserConfirm,\n      _props$keyLength = props.keyLength,\n      keyLength = _props$keyLength === undefined ? 6 : _props$keyLength;\n\n  var basename = props.basename ? (0, _PathUtils.stripTrailingSlash)((0, _PathUtils.addLeadingSlash)(props.basename)) : '';\n\n  var getDOMLocation = function getDOMLocation(historyState) {\n    var _ref = historyState || {},\n        key = _ref.key,\n        state = _ref.state;\n\n    var _window$location = window.location,\n        pathname = _window$location.pathname,\n        search = _window$location.search,\n        hash = _window$location.hash;\n\n\n    var path = pathname + search + hash;\n\n    (0, _warning2.default)(!basename || (0, _PathUtils.hasBasename)(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".');\n\n    if (basename) path = (0, _PathUtils.stripBasename)(path, basename);\n\n    return (0, _LocationUtils.createLocation)(path, state, key);\n  };\n\n  var createKey = function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  };\n\n  var transitionManager = (0, _createTransitionManager2.default)();\n\n  var setState = function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n\n    transitionManager.notifyListeners(history.location, history.action);\n  };\n\n  var handlePopState = function handlePopState(event) {\n    // Ignore extraneous popstate events in WebKit.\n    if ((0, _DOMUtils.isExtraneousPopstateEvent)(event)) return;\n\n    handlePop(getDOMLocation(event.state));\n  };\n\n  var handleHashChange = function handleHashChange() {\n    handlePop(getDOMLocation(getHistoryState()));\n  };\n\n  var forceNextPop = false;\n\n  var handlePop = function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({ action: action, location: location });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  };\n\n  var revertPop = function revertPop(fromLocation) {\n    var toLocation = history.location;\n\n    // TODO: We could probably make this more reliable by\n    // keeping a list of keys we've seen in sessionStorage.\n    // Instead, we just default to 0 for keys we don't know.\n\n    var toIndex = allKeys.indexOf(toLocation.key);\n\n    if (toIndex === -1) toIndex = 0;\n\n    var fromIndex = allKeys.indexOf(fromLocation.key);\n\n    if (fromIndex === -1) fromIndex = 0;\n\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  };\n\n  var initialLocation = getDOMLocation(getHistoryState());\n  var allKeys = [initialLocation.key];\n\n  // Public interface\n\n  var createHref = function createHref(location) {\n    return basename + (0, _PathUtils.createPath)(location);\n  };\n\n  var push = function push(path, state) {\n    (0, _warning2.default)(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored');\n\n    var action = 'PUSH';\n    var location = (0, _LocationUtils.createLocation)(path, state, createKey(), history.location);\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n\n      if (canUseHistory) {\n        globalHistory.pushState({ key: key, state: state }, null, href);\n\n        if (forceRefresh) {\n          window.location.href = href;\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          var nextKeys = allKeys.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\n\n          nextKeys.push(location.key);\n          allKeys = nextKeys;\n\n          setState({ action: action, location: location });\n        }\n      } else {\n        (0, _warning2.default)(state === undefined, 'Browser history cannot push state in browsers that do not support HTML5 history');\n\n        window.location.href = href;\n      }\n    });\n  };\n\n  var replace = function replace(path, state) {\n    (0, _warning2.default)(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored');\n\n    var action = 'REPLACE';\n    var location = (0, _LocationUtils.createLocation)(path, state, createKey(), history.location);\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n\n      if (canUseHistory) {\n        globalHistory.replaceState({ key: key, state: state }, null, href);\n\n        if (forceRefresh) {\n          window.location.replace(href);\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n\n          if (prevIndex !== -1) allKeys[prevIndex] = location.key;\n\n          setState({ action: action, location: location });\n        }\n      } else {\n        (0, _warning2.default)(state === undefined, 'Browser history cannot replace state in browsers that do not support HTML5 history');\n\n        window.location.replace(href);\n      }\n    });\n  };\n\n  var go = function go(n) {\n    globalHistory.go(n);\n  };\n\n  var goBack = function goBack() {\n    return go(-1);\n  };\n\n  var goForward = function goForward() {\n    return go(1);\n  };\n\n  var listenerCount = 0;\n\n  var checkDOMListeners = function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1) {\n      (0, _DOMUtils.addEventListener)(window, PopStateEvent, handlePopState);\n\n      if (needsHashChangeListener) (0, _DOMUtils.addEventListener)(window, HashChangeEvent, handleHashChange);\n    } else if (listenerCount === 0) {\n      (0, _DOMUtils.removeEventListener)(window, PopStateEvent, handlePopState);\n\n      if (needsHashChangeListener) (0, _DOMUtils.removeEventListener)(window, HashChangeEvent, handleHashChange);\n    }\n  };\n\n  var isBlocked = false;\n\n  var block = function block() {\n    var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  };\n\n  var listen = function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  };\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n\n  return history;\n};\n\nexports.default = createBrowserHistory;","/**\n * Expose `pathToRegexp`.\n */\nmodule.exports = pathToRegexp\nmodule.exports.parse = parse\nmodule.exports.compile = compile\nmodule.exports.tokensToFunction = tokensToFunction\nmodule.exports.tokensToRegExp = tokensToRegExp\n\n/**\n * Default configs.\n */\nvar DEFAULT_DELIMITER = '/'\nvar DEFAULT_DELIMITERS = './'\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\"]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined]\n  '(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?'\n].join('|'), 'g')\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = []\n  var key = 0\n  var index = 0\n  var path = ''\n  var defaultDelimiter = (options && options.delimiter) || DEFAULT_DELIMITER\n  var delimiters = (options && options.delimiters) || DEFAULT_DELIMITERS\n  var pathEscaped = false\n  var res\n\n  while ((res = PATH_REGEXP.exec(str)) !== null) {\n    var m = res[0]\n    var escaped = res[1]\n    var offset = res.index\n    path += str.slice(index, offset)\n    index = offset + m.length\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1]\n      pathEscaped = true\n      continue\n    }\n\n    var prev = ''\n    var next = str[index]\n    var name = res[2]\n    var capture = res[3]\n    var group = res[4]\n    var modifier = res[5]\n\n    if (!pathEscaped && path.length) {\n      var k = path.length - 1\n\n      if (delimiters.indexOf(path[k]) > -1) {\n        prev = path[k]\n        path = path.slice(0, k)\n      }\n    }\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path)\n      path = ''\n      pathEscaped = false\n    }\n\n    var partial = prev !== '' && next !== undefined && next !== prev\n    var repeat = modifier === '+' || modifier === '*'\n    var optional = modifier === '?' || modifier === '*'\n    var delimiter = prev || defaultDelimiter\n    var pattern = capture || group\n\n    tokens.push({\n      name: name || key++,\n      prefix: prev,\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      pattern: pattern ? escapeGroup(pattern) : '[^' + escapeString(delimiter) + ']+?'\n    })\n  }\n\n  // Push any remaining characters.\n  if (path || index < str.length) {\n    tokens.push(path + str.substr(index))\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length)\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$')\n    }\n  }\n\n  return function (data, options) {\n    var path = ''\n    var encode = (options && options.encode) || encodeURIComponent\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i]\n\n      if (typeof token === 'string') {\n        path += token\n        continue\n      }\n\n      var value = data ? data[token.name] : undefined\n      var segment\n\n      if (Array.isArray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but got array')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) continue\n\n          throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j], token)\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\"')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment\n        }\n\n        continue\n      }\n\n      if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        segment = encode(String(value), token)\n\n        if (!matches[i].test(segment)) {\n          throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but got \"' + segment + '\"')\n        }\n\n        path += token.prefix + segment\n        continue\n      }\n\n      if (token.optional) {\n        // Prepend partial segment prefixes.\n        if (token.partial) path += token.prefix\n\n        continue\n      }\n\n      throw new TypeError('Expected \"' + token.name + '\" to be ' + (token.repeat ? 'an array' : 'a string'))\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$/()])/g, '\\\\$1')\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options && options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {Array=}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  if (!keys) return path\n\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g)\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        pattern: null\n      })\n    }\n  }\n\n  return path\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = []\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source)\n  }\n\n  return new RegExp('(?:' + parts.join('|') + ')', flags(options))\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}  tokens\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  options = options || {}\n\n  var strict = options.strict\n  var end = options.end !== false\n  var delimiter = escapeString(options.delimiter || DEFAULT_DELIMITER)\n  var delimiters = options.delimiters || DEFAULT_DELIMITERS\n  var endsWith = [].concat(options.endsWith || []).map(escapeString).concat('$').join('|')\n  var route = ''\n  var isEndDelimited = false\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n\n    if (typeof token === 'string') {\n      route += escapeString(token)\n      isEndDelimited = i === tokens.length - 1 && delimiters.indexOf(token[token.length - 1]) > -1\n    } else {\n      var prefix = escapeString(token.prefix)\n      var capture = token.repeat\n        ? '(?:' + token.pattern + ')(?:' + prefix + '(?:' + token.pattern + '))*'\n        : token.pattern\n\n      if (keys) keys.push(token)\n\n      if (token.optional) {\n        if (token.partial) {\n          route += prefix + '(' + capture + ')?'\n        } else {\n          route += '(?:' + prefix + '(' + capture + '))?'\n        }\n      } else {\n        route += prefix + '(' + capture + ')'\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += '(?:' + delimiter + ')?'\n\n    route += endsWith === '$' ? '$' : '(?=' + endsWith + ')'\n  } else {\n    if (!strict) route += '(?:' + delimiter + '(?=' + endsWith + '))?'\n    if (!isEndDelimited) route += '(?=' + delimiter + '|' + endsWith + ')'\n  }\n\n  return new RegExp('^' + route, flags(options))\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {Array=}                keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, keys)\n  }\n\n  if (Array.isArray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), keys, options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), keys, options)\n}\n","//      \n// An event handler can take an optional event argument\n// and should not return a value\n                                          \n                                                               \n\n// An array of all currently registered event handlers for a type\n                                            \n                                                            \n// A map of event types and their corresponding event handlers.\n                        \n                                 \n                                   \n  \n\n/** Mitt: Tiny (~200b) functional event emitter / pubsub.\n *  @name mitt\n *  @returns {Mitt}\n */\nfunction mitt(all                 ) {\n\tall = all || Object.create(null);\n\n\treturn {\n\t\t/**\n\t\t * Register an event handler for the given type.\n\t\t *\n\t\t * @param  {String} type\tType of event to listen for, or `\"*\"` for all events\n\t\t * @param  {Function} handler Function to call in response to given event\n\t\t * @memberOf mitt\n\t\t */\n\t\ton: function on(type        , handler              ) {\n\t\t\t(all[type] || (all[type] = [])).push(handler);\n\t\t},\n\n\t\t/**\n\t\t * Remove an event handler for the given type.\n\t\t *\n\t\t * @param  {String} type\tType of event to unregister `handler` from, or `\"*\"`\n\t\t * @param  {Function} handler Handler function to remove\n\t\t * @memberOf mitt\n\t\t */\n\t\toff: function off(type        , handler              ) {\n\t\t\tif (all[type]) {\n\t\t\t\tall[type].splice(all[type].indexOf(handler) >>> 0, 1);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Invoke all handlers for the given type.\n\t\t * If present, `\"*\"` handlers are invoked after type-matched handlers.\n\t\t *\n\t\t * @param {String} type  The event type to invoke\n\t\t * @param {Any} [evt]  Any value (object is recommended and powerful), passed to each handler\n\t\t * @memberOf mitt\n\t\t */\n\t\temit: function emit(type        , evt     ) {\n\t\t\t(all[type] || []).slice().map(function (handler) { handler(evt); });\n\t\t\t(all['*'] || []).slice().map(function (handler) { handler(type, evt); });\n\t\t}\n\t};\n}\n\nexport default mitt;\n//# sourceMappingURL=mitt.es.js.map\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","'use strict';\n\nexports.__esModule = true;\nvar addLeadingSlash = exports.addLeadingSlash = function addLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path : '/' + path;\n};\n\nvar stripLeadingSlash = exports.stripLeadingSlash = function stripLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path.substr(1) : path;\n};\n\nvar hasBasename = exports.hasBasename = function hasBasename(path, prefix) {\n  return new RegExp('^' + prefix + '(\\\\/|\\\\?|#|$)', 'i').test(path);\n};\n\nvar stripBasename = exports.stripBasename = function stripBasename(path, prefix) {\n  return hasBasename(path, prefix) ? path.substr(prefix.length) : path;\n};\n\nvar stripTrailingSlash = exports.stripTrailingSlash = function stripTrailingSlash(path) {\n  return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;\n};\n\nvar parsePath = exports.parsePath = function parsePath(path) {\n  var pathname = path || '/';\n  var search = '';\n  var hash = '';\n\n  var hashIndex = pathname.indexOf('#');\n  if (hashIndex !== -1) {\n    hash = pathname.substr(hashIndex);\n    pathname = pathname.substr(0, hashIndex);\n  }\n\n  var searchIndex = pathname.indexOf('?');\n  if (searchIndex !== -1) {\n    search = pathname.substr(searchIndex);\n    pathname = pathname.substr(0, searchIndex);\n  }\n\n  return {\n    pathname: pathname,\n    search: search === '?' ? '' : search,\n    hash: hash === '#' ? '' : hash\n  };\n};\n\nvar createPath = exports.createPath = function createPath(location) {\n  var pathname = location.pathname,\n      search = location.search,\n      hash = location.hash;\n\n\n  var path = pathname || '/';\n\n  if (search && search !== '?') path += search.charAt(0) === '?' ? search : '?' + search;\n\n  if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : '#' + hash;\n\n  return path;\n};","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n        '`warning(condition, format, ...args)` requires a warning ' +\n        'message argument'\n      );\n    }\n\n    if (format.length < 10 || (/^[s\\W]*$/).test(format)) {\n      throw new Error(\n        'The warning format should be able to uniquely identify this ' +\n        'warning. Please, use a more descriptive format than: ' + format\n      );\n    }\n\n    if (!condition) {\n      var argIndex = 0;\n      var message = 'Warning: ' +\n        format.replace(/%s/g, function() {\n          return args[argIndex++];\n        });\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n      try {\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch(x) {}\n    }\n  };\n}\n\nmodule.exports = warning;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// Generated by CoffeeScript 1.12.2\n(function() {\n  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - nodeLoadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    moduleLoadTime = getNanoSeconds();\n    upTime = process.uptime() * 1e9;\n    nodeLoadTime = moduleLoadTime - upTime;\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(this);\n\n//# sourceMappingURL=performance-now.js.map\n","'use strict';\n\nexports.__esModule = true;\nvar canUseDOM = exports.canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\nvar addEventListener = exports.addEventListener = function addEventListener(node, event, listener) {\n  return node.addEventListener ? node.addEventListener(event, listener, false) : node.attachEvent('on' + event, listener);\n};\n\nvar removeEventListener = exports.removeEventListener = function removeEventListener(node, event, listener) {\n  return node.removeEventListener ? node.removeEventListener(event, listener, false) : node.detachEvent('on' + event, listener);\n};\n\nvar getConfirmation = exports.getConfirmation = function getConfirmation(message, callback) {\n  return callback(window.confirm(message));\n}; // eslint-disable-line no-alert\n\n/**\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\n *\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586\n */\nvar supportsHistory = exports.supportsHistory = function supportsHistory() {\n  var ua = window.navigator.userAgent;\n\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;\n\n  return window.history && 'pushState' in window.history;\n};\n\n/**\n * Returns true if browser fires popstate on hash change.\n * IE10 and IE11 do not.\n */\nvar supportsPopStateOnHashChange = exports.supportsPopStateOnHashChange = function supportsPopStateOnHashChange() {\n  return window.navigator.userAgent.indexOf('Trident') === -1;\n};\n\n/**\n * Returns false if using go(n) with hash history causes a full page reload.\n */\nvar supportsGoWithoutReloadUsingHash = exports.supportsGoWithoutReloadUsingHash = function supportsGoWithoutReloadUsingHash() {\n  return window.navigator.userAgent.indexOf('Firefox') === -1;\n};\n\n/**\n * Returns true if a given popstate event is an extraneous WebKit event.\n * Accounts for the fact that Chrome on iOS fires real popstate events\n * containing undefined state when pressing the back button.\n */\nvar isExtraneousPopstateEvent = exports.isExtraneousPopstateEvent = function isExtraneousPopstateEvent(event) {\n  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;\n};","'use strict';\n\nexports.__esModule = true;\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar createTransitionManager = function createTransitionManager() {\n  var prompt = null;\n\n  var setPrompt = function setPrompt(nextPrompt) {\n    (0, _warning2.default)(prompt == null, 'A history supports only one prompt at a time');\n\n    prompt = nextPrompt;\n\n    return function () {\n      if (prompt === nextPrompt) prompt = null;\n    };\n  };\n\n  var confirmTransitionTo = function confirmTransitionTo(location, action, getUserConfirmation, callback) {\n    // TODO: If another transition starts while we're still confirming\n    // the previous one, we may end up in a weird state. Figure out the\n    // best way to handle this.\n    if (prompt != null) {\n      var result = typeof prompt === 'function' ? prompt(location, action) : prompt;\n\n      if (typeof result === 'string') {\n        if (typeof getUserConfirmation === 'function') {\n          getUserConfirmation(result, callback);\n        } else {\n          (0, _warning2.default)(false, 'A history needs a getUserConfirmation function in order to use a prompt message');\n\n          callback(true);\n        }\n      } else {\n        // Return false from a transition hook to cancel the transition.\n        callback(result !== false);\n      }\n    } else {\n      callback(true);\n    }\n  };\n\n  var listeners = [];\n\n  var appendListener = function appendListener(fn) {\n    var isActive = true;\n\n    var listener = function listener() {\n      if (isActive) fn.apply(undefined, arguments);\n    };\n\n    listeners.push(listener);\n\n    return function () {\n      isActive = false;\n      listeners = listeners.filter(function (item) {\n        return item !== listener;\n      });\n    };\n  };\n\n  var notifyListeners = function notifyListeners() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    listeners.forEach(function (listener) {\n      return listener.apply(undefined, args);\n    });\n  };\n\n  return {\n    setPrompt: setPrompt,\n    confirmTransitionTo: confirmTransitionTo,\n    appendListener: appendListener,\n    notifyListeners: notifyListeners\n  };\n};\n\nexports.default = createTransitionManager;","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction valueEqual(a, b) {\n  if (a === b) return true;\n\n  if (a == null || b == null) return false;\n\n  if (Array.isArray(a)) {\n    return Array.isArray(b) && a.length === b.length && a.every(function (item, index) {\n      return valueEqual(item, b[index]);\n    });\n  }\n\n  var aType = typeof a === 'undefined' ? 'undefined' : _typeof(a);\n  var bType = typeof b === 'undefined' ? 'undefined' : _typeof(b);\n\n  if (aType !== bType) return false;\n\n  if (aType === 'object') {\n    var aValue = a.valueOf();\n    var bValue = b.valueOf();\n\n    if (aValue !== a || bValue !== b) return valueEqual(aValue, bValue);\n\n    var aKeys = Object.keys(a);\n    var bKeys = Object.keys(b);\n\n    if (aKeys.length !== bKeys.length) return false;\n\n    return aKeys.every(function (key) {\n      return valueEqual(a[key], b[key]);\n    });\n  }\n\n  return false;\n}\n\nexport default valueEqual;","function isAbsolute(pathname) {\n  return pathname.charAt(0) === '/';\n}\n\n// About 1.5x faster than the two-arg version of Array#splice()\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {\n    list[i] = list[k];\n  }\n\n  list.pop();\n}\n\n// This implementation is based heavily on node's url.parse\nfunction resolvePathname(to) {\n  var from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  var toParts = to && to.split('/') || [];\n  var fromParts = from && from.split('/') || [];\n\n  var isToAbs = to && isAbsolute(to);\n  var isFromAbs = from && isAbsolute(from);\n  var mustEndAbs = isToAbs || isFromAbs;\n\n  if (to && isAbsolute(to)) {\n    // to is absolute\n    fromParts = toParts;\n  } else if (toParts.length) {\n    // to is relative, drop the filename\n    fromParts.pop();\n    fromParts = fromParts.concat(toParts);\n  }\n\n  if (!fromParts.length) return '/';\n\n  var hasTrailingSlash = void 0;\n  if (fromParts.length) {\n    var last = fromParts[fromParts.length - 1];\n    hasTrailingSlash = last === '.' || last === '..' || last === '';\n  } else {\n    hasTrailingSlash = false;\n  }\n\n  var up = 0;\n  for (var i = fromParts.length; i >= 0; i--) {\n    var part = fromParts[i];\n\n    if (part === '.') {\n      spliceOne(fromParts, i);\n    } else if (part === '..') {\n      spliceOne(fromParts, i);\n      up++;\n    } else if (up) {\n      spliceOne(fromParts, i);\n      up--;\n    }\n  }\n\n  if (!mustEndAbs) for (; up--; up) {\n    fromParts.unshift('..');\n  }if (mustEndAbs && fromParts[0] !== '' && (!fromParts[0] || !isAbsolute(fromParts[0]))) fromParts.unshift('');\n\n  var result = fromParts.join('/');\n\n  if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';\n\n  return result;\n}\n\nexport default resolvePathname;","'use strict';\n\nexports.__esModule = true;\nexports.locationsAreEqual = exports.createLocation = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _resolvePathname = require('resolve-pathname');\n\nvar _resolvePathname2 = _interopRequireDefault(_resolvePathname);\n\nvar _valueEqual = require('value-equal');\n\nvar _valueEqual2 = _interopRequireDefault(_valueEqual);\n\nvar _PathUtils = require('./PathUtils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar createLocation = exports.createLocation = function createLocation(path, state, key, currentLocation) {\n  var location = void 0;\n  if (typeof path === 'string') {\n    // Two-arg form: push(path, state)\n    location = (0, _PathUtils.parsePath)(path);\n    location.state = state;\n  } else {\n    // One-arg form: push(location)\n    location = _extends({}, path);\n\n    if (location.pathname === undefined) location.pathname = '';\n\n    if (location.search) {\n      if (location.search.charAt(0) !== '?') location.search = '?' + location.search;\n    } else {\n      location.search = '';\n    }\n\n    if (location.hash) {\n      if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;\n    } else {\n      location.hash = '';\n    }\n\n    if (state !== undefined && location.state === undefined) location.state = state;\n  }\n\n  try {\n    location.pathname = decodeURI(location.pathname);\n  } catch (e) {\n    if (e instanceof URIError) {\n      throw new URIError('Pathname \"' + location.pathname + '\" could not be decoded. ' + 'This is likely caused by an invalid percent-encoding.');\n    } else {\n      throw e;\n    }\n  }\n\n  if (key) location.key = key;\n\n  if (currentLocation) {\n    // Resolve incomplete/relative pathname relative to current location.\n    if (!location.pathname) {\n      location.pathname = currentLocation.pathname;\n    } else if (location.pathname.charAt(0) !== '/') {\n      location.pathname = (0, _resolvePathname2.default)(location.pathname, currentLocation.pathname);\n    }\n  } else {\n    // When there is no prior location and pathname is empty, set it to /\n    if (!location.pathname) {\n      location.pathname = '/';\n    }\n  }\n\n  return location;\n};\n\nvar locationsAreEqual = exports.locationsAreEqual = function locationsAreEqual(a, b) {\n  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && (0, _valueEqual2.default)(a.state, b.state);\n};","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","/*jshint browser:true, node:true*/\n\n'use strict';\n\nmodule.exports = Delegate;\n\n/**\n * DOM event delegator\n *\n * The delegator will listen\n * for events that bubble up\n * to the root node.\n *\n * @constructor\n * @param {Node|string} [root] The root node or a selector string matching the root node\n */\nfunction Delegate(root) {\n\n  /**\n   * Maintain a map of listener\n   * lists, keyed by event name.\n   *\n   * @type Object\n   */\n  this.listenerMap = [{}, {}];\n  if (root) {\n    this.root(root);\n  }\n\n  /** @type function() */\n  this.handle = Delegate.prototype.handle.bind(this);\n}\n\n/**\n * Start listening for events\n * on the provided DOM element\n *\n * @param  {Node|string} [root] The root node or a selector string matching the root node\n * @returns {Delegate} This method is chainable\n */\nDelegate.prototype.root = function(root) {\n  var listenerMap = this.listenerMap;\n  var eventType;\n\n  // Remove master event listeners\n  if (this.rootElement) {\n    for (eventType in listenerMap[1]) {\n      if (listenerMap[1].hasOwnProperty(eventType)) {\n        this.rootElement.removeEventListener(eventType, this.handle, true);\n      }\n    }\n    for (eventType in listenerMap[0]) {\n      if (listenerMap[0].hasOwnProperty(eventType)) {\n        this.rootElement.removeEventListener(eventType, this.handle, false);\n      }\n    }\n  }\n\n  // If no root or root is not\n  // a dom node, then remove internal\n  // root reference and exit here\n  if (!root || !root.addEventListener) {\n    if (this.rootElement) {\n      delete this.rootElement;\n    }\n    return this;\n  }\n\n  /**\n   * The root node at which\n   * listeners are attached.\n   *\n   * @type Node\n   */\n  this.rootElement = root;\n\n  // Set up master event listeners\n  for (eventType in listenerMap[1]) {\n    if (listenerMap[1].hasOwnProperty(eventType)) {\n      this.rootElement.addEventListener(eventType, this.handle, true);\n    }\n  }\n  for (eventType in listenerMap[0]) {\n    if (listenerMap[0].hasOwnProperty(eventType)) {\n      this.rootElement.addEventListener(eventType, this.handle, false);\n    }\n  }\n\n  return this;\n};\n\n/**\n * @param {string} eventType\n * @returns boolean\n */\nDelegate.prototype.captureForType = function(eventType) {\n  return ['blur', 'error', 'focus', 'load', 'resize', 'scroll'].indexOf(eventType) !== -1;\n};\n\n/**\n * Attach a handler to one\n * event for all elements\n * that match the selector,\n * now or in the future\n *\n * The handler function receives\n * three arguments: the DOM event\n * object, the node that matched\n * the selector while the event\n * was bubbling and a reference\n * to itself. Within the handler,\n * 'this' is equal to the second\n * argument.\n *\n * The node that actually received\n * the event can be accessed via\n * 'event.target'.\n *\n * @param {string} eventType Listen for these events\n * @param {string|undefined} selector Only handle events on elements matching this selector, if undefined match root element\n * @param {function()} handler Handler function - event data passed here will be in event.data\n * @param {Object} [eventData] Data to pass in event.data\n * @returns {Delegate} This method is chainable\n */\nDelegate.prototype.on = function(eventType, selector, handler, useCapture) {\n  var root, listenerMap, matcher, matcherParam;\n\n  if (!eventType) {\n    throw new TypeError('Invalid event type: ' + eventType);\n  }\n\n  // handler can be passed as\n  // the second or third argument\n  if (typeof selector === 'function') {\n    useCapture = handler;\n    handler = selector;\n    selector = null;\n  }\n\n  // Fallback to sensible defaults\n  // if useCapture not set\n  if (useCapture === undefined) {\n    useCapture = this.captureForType(eventType);\n  }\n\n  if (typeof handler !== 'function') {\n    throw new TypeError('Handler must be a type of Function');\n  }\n\n  root = this.rootElement;\n  listenerMap = this.listenerMap[useCapture ? 1 : 0];\n\n  // Add master handler for type if not created yet\n  if (!listenerMap[eventType]) {\n    if (root) {\n      root.addEventListener(eventType, this.handle, useCapture);\n    }\n    listenerMap[eventType] = [];\n  }\n\n  if (!selector) {\n    matcherParam = null;\n\n    // COMPLEX - matchesRoot needs to have access to\n    // this.rootElement, so bind the function to this.\n    matcher = matchesRoot.bind(this);\n\n  // Compile a matcher for the given selector\n  } else if (/^[a-z]+$/i.test(selector)) {\n    matcherParam = selector;\n    matcher = matchesTag;\n  } else if (/^#[a-z0-9\\-_]+$/i.test(selector)) {\n    matcherParam = selector.slice(1);\n    matcher = matchesId;\n  } else {\n    matcherParam = selector;\n    matcher = matches;\n  }\n\n  // Add to the list of listeners\n  listenerMap[eventType].push({\n    selector: selector,\n    handler: handler,\n    matcher: matcher,\n    matcherParam: matcherParam\n  });\n\n  return this;\n};\n\n/**\n * Remove an event handler\n * for elements that match\n * the selector, forever\n *\n * @param {string} [eventType] Remove handlers for events matching this type, considering the other parameters\n * @param {string} [selector] If this parameter is omitted, only handlers which match the other two will be removed\n * @param {function()} [handler] If this parameter is omitted, only handlers which match the previous two will be removed\n * @returns {Delegate} This method is chainable\n */\nDelegate.prototype.off = function(eventType, selector, handler, useCapture) {\n  var i, listener, listenerMap, listenerList, singleEventType;\n\n  // Handler can be passed as\n  // the second or third argument\n  if (typeof selector === 'function') {\n    useCapture = handler;\n    handler = selector;\n    selector = null;\n  }\n\n  // If useCapture not set, remove\n  // all event listeners\n  if (useCapture === undefined) {\n    this.off(eventType, selector, handler, true);\n    this.off(eventType, selector, handler, false);\n    return this;\n  }\n\n  listenerMap = this.listenerMap[useCapture ? 1 : 0];\n  if (!eventType) {\n    for (singleEventType in listenerMap) {\n      if (listenerMap.hasOwnProperty(singleEventType)) {\n        this.off(singleEventType, selector, handler);\n      }\n    }\n\n    return this;\n  }\n\n  listenerList = listenerMap[eventType];\n  if (!listenerList || !listenerList.length) {\n    return this;\n  }\n\n  // Remove only parameter matches\n  // if specified\n  for (i = listenerList.length - 1; i >= 0; i--) {\n    listener = listenerList[i];\n\n    if ((!selector || selector === listener.selector) && (!handler || handler === listener.handler)) {\n      listenerList.splice(i, 1);\n    }\n  }\n\n  // All listeners removed\n  if (!listenerList.length) {\n    delete listenerMap[eventType];\n\n    // Remove the main handler\n    if (this.rootElement) {\n      this.rootElement.removeEventListener(eventType, this.handle, useCapture);\n    }\n  }\n\n  return this;\n};\n\n\n/**\n * Handle an arbitrary event.\n *\n * @param {Event} event\n */\nDelegate.prototype.handle = function(event) {\n  var i, l, type = event.type, root, phase, listener, returned, listenerList = [], target, /** @const */ EVENTIGNORE = 'ftLabsDelegateIgnore';\n\n  if (event[EVENTIGNORE] === true) {\n    return;\n  }\n\n  target = event.target;\n\n  // Hardcode value of Node.TEXT_NODE\n  // as not defined in IE8\n  if (target.nodeType === 3) {\n    target = target.parentNode;\n  }\n\n  root = this.rootElement;\n\n  phase = event.eventPhase || ( event.target !== event.currentTarget ? 3 : 2 );\n  \n  switch (phase) {\n    case 1: //Event.CAPTURING_PHASE:\n      listenerList = this.listenerMap[1][type];\n    break;\n    case 2: //Event.AT_TARGET:\n      if (this.listenerMap[0] && this.listenerMap[0][type]) listenerList = listenerList.concat(this.listenerMap[0][type]);\n      if (this.listenerMap[1] && this.listenerMap[1][type]) listenerList = listenerList.concat(this.listenerMap[1][type]);\n    break;\n    case 3: //Event.BUBBLING_PHASE:\n      listenerList = this.listenerMap[0][type];\n    break;\n  }\n\n  // Need to continuously check\n  // that the specific list is\n  // still populated in case one\n  // of the callbacks actually\n  // causes the list to be destroyed.\n  l = listenerList.length;\n  while (target && l) {\n    for (i = 0; i < l; i++) {\n      listener = listenerList[i];\n\n      // Bail from this loop if\n      // the length changed and\n      // no more listeners are\n      // defined between i and l.\n      if (!listener) {\n        break;\n      }\n\n      // Check for match and fire\n      // the event if there's one\n      //\n      // TODO:MCG:20120117: Need a way\n      // to check if event#stopImmediatePropagation\n      // was called. If so, break both loops.\n      if (listener.matcher.call(target, listener.matcherParam, target)) {\n        returned = this.fire(event, target, listener);\n      }\n\n      // Stop propagation to subsequent\n      // callbacks if the callback returned\n      // false\n      if (returned === false) {\n        event[EVENTIGNORE] = true;\n        event.preventDefault();\n        return;\n      }\n    }\n\n    // TODO:MCG:20120117: Need a way to\n    // check if event#stopPropagation\n    // was called. If so, break looping\n    // through the DOM. Stop if the\n    // delegation root has been reached\n    if (target === root) {\n      break;\n    }\n\n    l = listenerList.length;\n    target = target.parentElement;\n  }\n};\n\n/**\n * Fire a listener on a target.\n *\n * @param {Event} event\n * @param {Node} target\n * @param {Object} listener\n * @returns {boolean}\n */\nDelegate.prototype.fire = function(event, target, listener) {\n  return listener.handler.call(target, event, target);\n};\n\n/**\n * Check whether an element\n * matches a generic selector.\n *\n * @type function()\n * @param {string} selector A CSS selector\n */\nvar matches = (function(el) {\n  if (!el) return;\n  var p = el.prototype;\n  return (p.matches || p.matchesSelector || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || p.oMatchesSelector);\n}(Element));\n\n/**\n * Check whether an element\n * matches a tag selector.\n *\n * Tags are NOT case-sensitive,\n * except in XML (and XML-based\n * languages such as XHTML).\n *\n * @param {string} tagName The tag name to test against\n * @param {Element} element The element to test with\n * @returns boolean\n */\nfunction matchesTag(tagName, element) {\n  return tagName.toLowerCase() === element.tagName.toLowerCase();\n}\n\n/**\n * Check whether an element\n * matches the root.\n *\n * @param {?String} selector In this case this is always passed through as null and not used\n * @param {Element} element The element to test with\n * @returns boolean\n */\nfunction matchesRoot(selector, element) {\n  /*jshint validthis:true*/\n  if (this.rootElement === window) return element === document;\n  return this.rootElement === element;\n}\n\n/**\n * Check whether the ID of\n * the element in 'this'\n * matches the given ID.\n *\n * IDs are case-sensitive.\n *\n * @param {string} id The ID to test against\n * @param {Element} element The element to test with\n * @returns boolean\n */\nfunction matchesId(id, element) {\n  return id === element.id;\n}\n\n/**\n * Short hand for off()\n * and root(), ie both\n * with no parameters\n *\n * @return void\n */\nDelegate.prototype.destroy = function() {\n  this.off();\n  this.root();\n};\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * Active `debug` instances.\n */\nexports.instances = [];\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy;\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n\n  return debug;\n}\n\nfunction destroy () {\n  var index = exports.instances.indexOf(this);\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","var now = require('performance-now')\n  , root = typeof window === 'undefined' ? global : window\n  , vendors = ['moz', 'webkit']\n  , suffix = 'AnimationFrame'\n  , raf = root['request' + suffix]\n  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]\n\nfor(var i = 0; !raf && i < vendors.length; i++) {\n  raf = root[vendors[i] + 'Request' + suffix]\n  caf = root[vendors[i] + 'Cancel' + suffix]\n      || root[vendors[i] + 'CancelRequest' + suffix]\n}\n\n// Some versions of FF have rAF but not cAF\nif(!raf || !caf) {\n  var last = 0\n    , id = 0\n    , queue = []\n    , frameDuration = 1000 / 60\n\n  raf = function(callback) {\n    if(queue.length === 0) {\n      var _now = now()\n        , next = Math.max(0, frameDuration - (_now - last))\n      last = next + _now\n      setTimeout(function() {\n        var cp = queue.slice(0)\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0\n        for(var i = 0; i < cp.length; i++) {\n          if(!cp[i].cancelled) {\n            try{\n              cp[i].callback(last)\n            } catch(e) {\n              setTimeout(function() { throw e }, 0)\n            }\n          }\n        }\n      }, Math.round(next))\n    }\n    queue.push({\n      handle: ++id,\n      callback: callback,\n      cancelled: false\n    })\n    return id\n  }\n\n  caf = function(handle) {\n    for(var i = 0; i < queue.length; i++) {\n      if(queue[i].handle === handle) {\n        queue[i].cancelled = true\n      }\n    }\n  }\n}\n\nmodule.exports = function(fn) {\n  // Wrap in a new function to prevent\n  // `cancel` potentially being assigned\n  // to the native rAF function\n  return raf.call(root, fn)\n}\nmodule.exports.cancel = function() {\n  caf.apply(root, arguments)\n}\nmodule.exports.polyfill = function(object) {\n  if (!object) {\n    object = root;\n  }\n  object.requestAnimationFrame = raf\n  object.cancelAnimationFrame = caf\n}\n"],"sourceRoot":""}