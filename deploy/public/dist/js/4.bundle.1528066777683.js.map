{"version":3,"sources":["webpack:///./behaviours/Page1.js","webpack:///./core/modules/resizer.js","webpack:///./core/modules/inview.js","webpack:///./core/Behaviour.js"],"names":["Page1","mount","log","window","location","pathname","unmount","_core_Behaviour__WEBPACK_IMPORTED_MODULE_0__","resizer_query","es","item","getPropertyValue","getCurrentMediaQuery","getComputedStyle","document","body","windowMatch","breakpoint","matchMedia","matches","getWindowProps","width","innerWidth","height","innerHeight","query","mapEventsToResize","events","_ref","_ref2","_slicedToArray","fn","matchQueryTest","once","arg","value","match","bind","eventBus","on","Object","entries","modules_resizer","handle","last","windowResizeEvent","_getWindowProps","emit","addWindowResizeEvent","isRunning","raf_default","a","addEventListener","destroy","removeEventListener","cancel","arguments","length","undefined","bank","_extends","forEach","off","modules_inview","root","options","defaults","inview_extends","rootMargin","threshold","observer","unobserve","IntersectionObserver","entry","type","isIntersecting","observe","Behaviour","_this","this","el","name","_classCallCheck","registerObserverOptions","routes","enter","exit","viewport","screens","init","$observer","$el","$eventBus","actions","$refs","refs","$screen","$events","createEvents","call","updateRefs","Behaviour_extends","$name","$data","composeProps","attributes"],"mappings":"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","file":"4.bundle.1528066777683.js","sourcesContent":["import Behaviour from '@/core/Behaviour'\n\nexport default class Page1 extends Behaviour {\n\tmount = () => {\n\t\tlog(`mount: ${window.location.pathname} Example Behaviour`)\n\t}\n\n\tunmount = () => {\n\t\tlog(`unmount: ${window.location.pathname} Example Behaviour`)\n\t}\n}\n","import eventBus from '@/core/modules/eventBus'\nimport raf from 'raf'\nimport * as R from 'ramda'\n\n// get the :after style from the body\nconst getStyle = () => window.getComputedStyle(document.body, ':after')\n\n// get the content prop and give it a clean\nconst query = R.compose(R.replace(/'|\"/g, ''), item =>\n\titem.getPropertyValue('content')\n)\n\n// compose the functions together to return the current breakpoint\nconst getCurrentMediaQuery = R.compose(query, getStyle)\n\nconst windowMatch = breakpoint => window.matchMedia(breakpoint).matches\n\n/**\n *\n * @function getWindowProps\n *\n * @return :object with the current width/height/breakpoint\n */\nfunction getWindowProps() {\n\tconst width = window.innerWidth\n\tconst height = window.innerHeight\n\tconst query = getCurrentMediaQuery()\n\n\treturn {\n\t\twidth,\n\t\theight,\n\t\tquery\n\t}\n}\n/**\n *\n * consumes an object like this:\n *\n *  {\n *\t'(min-width: 960px)': () => {},\n *\t'(min-width: 680px)': () => {}\n *\t}\n *\n * @function mapEventsToResize\n *\n * @param :object\n *\n * @return :array of functions\n */\nfunction mapEventsToResize(events) {\n\treturn R.compose(\n\t\tR.map(([breakpoint, fn]) => {\n\t\t\t// <REFACTOR></REFACTOR> me thinks this could be written in\n\t\t\t// a way that it can be defined outside of the loop\n\t\t\tconst once = (arg, fn) => {\n\t\t\t\tif (once.value === arg) return\n\t\t\t\tfn({ match: arg, ...getWindowProps() })\n\t\t\t\tonce.value = arg\n\t\t\t}\n\n\t\t\t// <REFACTOR></REFACTOR> me thinks this could be written in\n\t\t\t// a way that it can be defined outside of the loop\n\t\t\tconst test = (breakpoint, fn) => {\n\t\t\t\tconst state = windowMatch(breakpoint)\n\t\t\t\tonce(state, fn)\n\t\t\t}\n\n\t\t\tconst matchQueryTest = test.bind(null, breakpoint, fn)\n\t\t\twindowMatch(breakpoint) && matchQueryTest()\n\t\t\teventBus.on('window:resize', matchQueryTest)\n\n\t\t\treturn matchQueryTest\n\t\t}),\n\t\tObject.entries\n\t)(events)\n}\n\n/***\n *\n * Wrapper/Helper window resize event\n *\n * @function resizer\n *\n * @return :function resizer\n */\n\nexport default (function resizer() {\n\t// setup a handle reference\n\tlet handle\n\n\t// reference the current, will become to previous one\n\tlet last = getCurrentMediaQuery()\n\n\t/**\n\t * The throttled window resize event\n\t * @private\n\t * @function windowResizeEvent\n\t *\n\t * @return void\n\t */\n\tfunction windowResizeEvent() {\n\t\tconst { width, height, query } = getWindowProps()\n\n\t\teventBus.emit('window:resize', {\n\t\t\twidth,\n\t\t\theight,\n\t\t\tquery\n\t\t})\n\n\t\tif (query !== last) {\n\t\t\tlast = query\n\t\t\teventBus.emit('window:breakpoint', {\n\t\t\t\twidth,\n\t\t\t\theight,\n\t\t\t\tquery\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * add the window resize event\n\t *\n\t * returns the destroy method\n\t *\n\t * @function addWindowResizeEvent\n\t *\n\t * @return object\n\t */\n\tfunction addWindowResizeEvent() {\n\t\tif (addWindowResizeEvent.isRunning) return\n\t\taddWindowResizeEvent.isRunning = true\n\t\thandle = raf.bind(null, windowResizeEvent)\n\n\t\twindow.addEventListener('resize', handle, false)\n\n\t\treturn {\n\t\t\tdestroy() {\n\t\t\t\tif (!addWindowResizeEvent.isRunning) return\n\t\t\t\taddWindowResizeEvent.isRunning = false\n\t\t\t\twindow.removeEventListener('resize', handle, false)\n\t\t\t\thandle.cancel()\n\t\t\t}\n\t\t}\n\t}\n\n\taddWindowResizeEvent.isRunning = false\n\n\treturn (events = {}) => {\n\t\taddWindowResizeEvent()\n\n\t\t// store the current events\n\t\tlet bank = mapEventsToResize(events)\n\n\t\treturn {\n\t\t\tget breakpoint() {\n\t\t\t\treturn getCurrentMediaQuery()\n\t\t\t},\n\n\t\t\tget width() {\n\t\t\t\treturn window.innerWidth\n\t\t\t},\n\n\t\t\tget height() {\n\t\t\t\treturn window.innerHeight\n\t\t\t},\n\n\t\t\tdestroy() {\n\t\t\t\tbank.forEach(fn => eventBus.off('window:resize', fn))\n\t\t\t\tbank = []\n\t\t\t},\n\n\t\t\t...eventBus\n\t\t}\n\t}\n})()\n","import * as R from 'ramda'\n\nconst inview = R.curry((root, events, options) => {\n\tif (!events) return\n\n\tconst opts = options ? options : {}\n\tconst defaults = {\n\t\trootMargin: '0px',\n\t\tthreshold: 0,\n\t\t...opts\n\t}\n\n\tconst destroy = () => observer.unobserve(root)\n\n\tconst onIntersection = entry => {\n\t\tconst item = R.head(entry)\n\t\tconst { isIntersecting } = item\n\t\tconst type = isIntersecting ? 'enter' : 'exit'\n\t\tif (events[type]) {\n\t\t\tevents[type]({\n\t\t\t\t...item,\n\t\t\t\tdestroy\n\t\t\t})\n\t\t}\n\t}\n\n\tconst observer = new IntersectionObserver(onIntersection, defaults)\n\n\tobserver.observe(root)\n\n\treturn {\n\t\tdestroy\n\t}\n})\n\nexport default inview\n","import createEvents from '@/core/modules/createEvents'\nimport refs, { composeProps } from '@/core/modules/refs'\nimport eventBus from '@/core/modules/eventBus'\nimport resizer from '@/core/modules/resizer'\nimport inview from '@/core/modules/inview'\nimport * as Actions from '@/core/router/actions'\n\n/**\n * class Behaviour\n *\n */\nexport default class Behaviour {\n\tconstructor(el = document, name) {\n\t\tthis.$name = name\n\t\tthis.$el = el\n\t\tthis.$eventBus = eventBus\n\t\tthis.$data = composeProps([...this.$el.attributes]) // here lies a bug\n\t}\n\n\tregisterObserverOptions = {}\n\n\troutes = {\n\t\tenter: () => {},\n\t\texit: () => {}\n\t}\n\n\tviewport = {\n\t\tenter: () => {},\n\t\texit: () => {}\n\t}\n\n\tscreens = {}\n\n\tinit = () => {\n\t\tthis.$observer = inview(\n\t\t\tthis.$el,\n\t\t\tthis.viewport,\n\t\t\tthis.registerObserverOptions\n\t\t)\n\n\t\tthis.$eventBus.on(Actions.ROUTE_TRANSITION_ENTER, this.routes.enter)\n\t\tthis.$eventBus.on(Actions.ROUTE_TRANSITION_EXIT, this.routes.exit)\n\t\tthis.$refs = refs(this.$el)\n\t\tthis.$screen = resizer(this.screens)\n\t\tif (this.events) {\n\t\t\tthis.$events = createEvents.call(this, this.$el, this.events)\n\t\t}\n\n\t\treturn this\n\t}\n\n\tupdateRefs = () => {\n\t\tthis.$refs = { ...this.$refs, ...refs(this.$el) }\n\t}\n\n\tmount = () => {}\n\n\tunmount = () => {}\n\n\tdestroy = () => {\n\t\tthis.unmount()\n\t\tthis.$eventBus.off(Actions.ROUTE_TRANSITION_ENTER, this.routes.enter)\n\t\tthis.$eventBus.off(Actions.ROUTE_TRANSITION_EXIT, this.routes.exit)\n\t\tthis.$screen.destroy()\n\n\t\tif (this.viewport) {\n\t\t\tthis.$observer.destroy()\n\t\t}\n\n\t\tif (this.events) {\n\t\t\tthis.$events.destroy()\n\t\t}\n\t}\n}\n"],"sourceRoot":""}