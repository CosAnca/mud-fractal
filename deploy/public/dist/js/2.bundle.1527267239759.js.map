{"version":3,"sources":["webpack:///./behaviours/ModuleA.js","webpack:///./core/modules/refs.js","webpack:///./core/modules/resizer.js","webpack:///./core/modules/inview.js","webpack:///./core/behaviour.js"],"names":["ModuleA","mount","_this","$events","attachAll","events","click [data-link]","onClick","e","elm","preventDefault","classList","add","_core_behaviour__WEBPACK_IMPORTED_MODULE_0__","sanitizeName","name","replace","$0","$1","toUpperCase","removeValueLess","es","_ref","value","getDataAttributes","attr","test","cleanName","_ref2","substr","flattenToObject","acc","_ref3","key","composeProps","createRefs","node","getAttribute","_extends","attributes","gatherProps","refs","root","querySelectorAll","handle","resizer_query","item","getPropertyValue","getCurrentMediaQuery","window","getComputedStyle","document","body","last","getWindowProps","width","innerWidth","height","innerHeight","query","resizer_windowResizeEvent","_getWindowProps","eventBus","emit","resizer_windowResize","windowResize","isRunning","raf_default","a","bind","addEventListener","destroy","removeEventListener","cancel","windowMatch","breakpoint","matchMedia","matches","resizer_mapEventsToResize","Object","entries","map","_slicedToArray","fn","funk","once","arg","resizer_extends","match","on","modules_resizer","arguments","length","undefined","bank","forEach","off","modules_inview","options","defaults","inview_extends","rootMargin","threshold","observer","unobserve","IntersectionObserver","entry","type","isIntersecting","observe","Behaviour","this","el","_classCallCheck","registerObserverOptions","routes","enter","exit","viewport","screens","init","$observer","$el","$eventBus","$refs","$screen","createEvents","call","updateRefs","behaviour_extends","unmount","$name","$data","behaviour_toConsumableArray"],"mappings":"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","file":"2.bundle.1527267239759.js","sourcesContent":["import Behaviour from '@/core/behaviour'\n\nexport default class ModuleA extends Behaviour {\n\tmount = () => {\n\t\tthis.$events.attachAll()\n\t}\n\n\tevents = {\n\t\t'click [data-link]': 'onClick'\n\t}\n\n\tonClick = (e, elm) => {\n\t\te.preventDefault()\n\t\telm.classList.add('huzzah')\n\t}\n}\n","// ({\n// \tplugins: 'jsdom-quokka-plugin',\n// \tjsdom: {\n// \t\thtml: `<div id=\"test\">\n//             <b data-element=\"mod1\" data-prop1-th=\"a\" data-prop2=\"b\"></b>\n//             <b data-element=\"mod2\" data-prop1-th=\"a\" data-prop2=\"b\"></b>\n//             <b data-element=\"mod3\" data-prop1-th=\"a\" data-prop2=\"b\"></b>\n//             <b data-element=\"mod4\" data-prop1-th=\"a\" data-prop2=\"b\"></b>\n//             <div id=\"wrapper\" data-group=\"gr1\">\n// \t\t\t\t\t\t\t<b class=\"fake\" data-behaviour=\"ModuleB\"></b>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t</div>`\n// \t}\n// })\n\nimport * as R from 'ramda'\n\nconst sanitizeName = name => name.replace(/-(.)/g, ($0, $1) => $1.toUpperCase())\n\nconst removeValueLess = R.filter(({ value }) => value)\n\nconst getDataAttributes = R.filter(\n\tattr =>\n\t\t/^data-/.test(attr.name) &&\n\t\tattr.name !== 'data-element' &&\n\t\tattr.name !== 'data-behaviour'\n)\nconst cleanName = R.map(({ name, value }) => ({\n\tname: sanitizeName(name.substr(5)),\n\tvalue\n}))\n\nconst flattenToObject = R.reduce((acc, { name: key, value }) => {\n\tacc[key] = value\n\treturn acc\n}, {})\n\nexport const composeProps = R.compose(\n\tflattenToObject,\n\tcleanName,\n\tremoveValueLess,\n\tgetDataAttributes\n)\n\nconst gatherProps = node => composeProps([...node.attributes])\n\nconst createRefs = R.reduce((acc, node) => {\n\tacc[`${sanitizeName(node.getAttribute('data-element'))}`] = {\n\t\tnode: node,\n\t\t...gatherProps(node)\n\t}\n\n\treturn acc\n}, {})\n\nexport default root => createRefs([...root.querySelectorAll('*[data-element]')])\n","import eventBus from '@/core/modules/eventBus'\nimport raf from 'raf'\nimport * as R from 'ramda'\n\nlet handle\n\nconst getStyle = () => window.getComputedStyle(document.body, ':after')\nconst query = R.compose(R.replace(/'|\"/g, ''), item =>\n\titem.getPropertyValue('content')\n)\nconst getCurrentMediaQuery = R.compose(query, getStyle)\n\nlet last = getCurrentMediaQuery()\n\nconst getWindowProps = () => {\n\tconst width = window.innerWidth\n\tconst height = window.innerHeight\n\tconst query = getCurrentMediaQuery()\n\n\treturn {\n\t\twidth,\n\t\theight,\n\t\tquery\n\t}\n}\n\nconst windowResizeEvent = () => {\n\tconst { width, height, query } = getWindowProps()\n\n\teventBus.emit('window:resize', {\n\t\twidth,\n\t\theight,\n\t\tquery\n\t})\n\n\tif (query !== last) {\n\t\tlast = query\n\t\teventBus.emit('window:breakpoint', {\n\t\t\twidth,\n\t\t\theight,\n\t\t\tquery\n\t\t})\n\t}\n}\n\nconst windowResize = () => {\n\tif (windowResize.isRunning) return\n\twindowResize.isRunning = true\n\thandle = raf.bind(null, windowResizeEvent)\n\n\twindow.addEventListener('resize', handle, false)\n\n\treturn {\n\t\tdestroy() {\n\t\t\tif (!windowResize.isRunning) return\n\t\t\twindowResize.isRunning = false\n\t\t\twindow.removeEventListener('resize', handle, false)\n\t\t\thandle.cancel()\n\t\t}\n\t}\n}\nwindowResize.isRunning = false\n\nconst windowMatch = breakpoint => window.matchMedia(breakpoint).matches\n\nconst mapEventsToResize = events =>\n\tObject.entries(events).map(([breakpoint, fn]) => {\n\t\tconst once = (arg, fn) => {\n\t\t\tif (once.value === arg) return\n\t\t\tfn({ match: arg, ...getWindowProps() })\n\t\t\tonce.value = arg\n\t\t}\n\n\t\tconst test = (breakpoint, fn) => {\n\t\t\tconst state = windowMatch(breakpoint)\n\t\t\tonce(state, fn)\n\t\t}\n\n\t\tconst funk = test.bind(null, breakpoint, fn)\n\t\twindowMatch(breakpoint) && funk()\n\t\teventBus.on('window:resize', funk)\n\n\t\treturn funk\n\t})\n\nconst resizer = (events = {}) => {\n\twindowResize()\n\n\tlet bank = mapEventsToResize(events)\n\n\tconst destroy = () => {\n\t\tbank.forEach(fn => eventBus.off('window:resize', fn))\n\t\tbank = []\n\t}\n\n\treturn {\n\t\tget breakpoint() {\n\t\t\treturn getCurrentMediaQuery()\n\t\t},\n\n\t\tget width() {\n\t\t\treturn window.innerWidth\n\t\t},\n\n\t\tget height() {\n\t\t\treturn window.innerHeight\n\t\t},\n\n\t\tdestroy,\n\n\t\t...eventBus\n\t}\n}\n\nexport default resizer\n","import * as R from 'ramda'\n\nconst inview = R.curry((root, events, options) => {\n\tif (!events) return\n\n\tconst opts = options ? options : {}\n\tconst defaults = {\n\t\trootMargin: '0px',\n\t\tthreshold: 0,\n\t\t...opts\n\t}\n\n\tconst destroy = () => observer.unobserve(root)\n\n\tconst onIntersection = entry => {\n\t\tconst item = R.head(entry)\n\t\tconst { isIntersecting } = item\n\t\tconst type = isIntersecting ? 'enter' : 'exit'\n\t\tif (events[type]) {\n\t\t\tevents[type]({\n\t\t\t\t...item,\n\t\t\t\tdestroy\n\t\t\t})\n\t\t}\n\t}\n\n\tconst observer = new IntersectionObserver(onIntersection, defaults)\n\n\tobserver.observe(root)\n\n\treturn {\n\t\tdestroy\n\t}\n})\n\nexport default inview\n","import createEvents from '@/core/modules/createEvents'\nimport refs, { composeProps } from '@/core/modules/refs'\nimport eventBus from '@/core/modules/eventBus'\nimport resizer from '@/core/modules/resizer'\nimport inview from '@/core/modules/inview'\n\n/**\n * class Behaviour\n *\n */\nexport default class Behaviour {\n\tconstructor(el = document, name) {\n\t\tthis.$name = name\n\t\tthis.$el = el\n\t\tthis.$eventBus = eventBus\n\t\tthis.$data = composeProps([...this.$el.attributes]) // here lies a bug\n\t}\n\n\tregisterObserverOptions = {}\n\n\troutes = {\n\t\tenter: () => {},\n\t\texit: () => {}\n\t}\n\n\tviewport = {\n\t\tenter: () => {},\n\t\texit: () => {}\n\t}\n\n\tscreens = {}\n\n\tinit = () => {\n\t\tthis.$observer = inview(\n\t\t\tthis.$el,\n\t\t\tthis.viewport,\n\t\t\tthis.registerObserverOptions\n\t\t)\n\n\t\tthis.$eventBus.on('routes:enter', this.routes.enter)\n\t\tthis.$eventBus.on('routes:exit', this.routes.exit)\n\t\tthis.$refs = refs(this.$el)\n\t\tthis.$screen = resizer(this.screens)\n\t\tif (this.events) {\n\t\t\tthis.$events = createEvents.call(this, this.$el, this.events)\n\t\t}\n\n\t\treturn this\n\t}\n\n\tupdateRefs = () => {\n\t\tthis.$refs = { ...this.$refs, ...refs(this.$el) }\n\t}\n\n\tmount = () => {}\n\n\tunmount = () => {}\n\n\tdestroy = () => {\n\t\tthis.unmount()\n\t\tthis.$eventBus.off('routes:enter', this.routes.enter)\n\t\tthis.$eventBus.off('routes:exit', this.routes.exit)\n\t\tthis.$screen.destroy()\n\n\t\tif (this.viewport) {\n\t\t\tthis.$observer.destroy()\n\n\t\t\t// delete this.$observer\n\t\t}\n\n\t\tif (this.events) {\n\t\t\tthis.$events.destroy()\n\n\t\t\t// delete this.$events\n\t\t}\n\n\t\t// delete this.$eventBus\n\t\t// delete this.$screen\n\t}\n}\n"],"sourceRoot":""}