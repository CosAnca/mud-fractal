{"version":3,"sources":["webpack:///./behaviours/MobileMenu.js","webpack:///./core/utils/index.js","webpack:///./core/domEvents.js","webpack:///./core/index.js"],"names":["__webpack_require__","MobileMenu","mounted","_this","resizer","_sponResize2","default","start","$logo","document","getElementById","nav","_sponDraw2","openButton","closeButton","overlay","contents","at","match","destroy","unmatch","init","isFn","fn","MixinBuilder","superclass","_classCallCheck","this","_len","arguments","length","mixins","Array","_key","reduce","c","mixin","_domDelegate","transform","context","output","key","events","eventKey","method","parts","split","capture","includes","push","bind","bindDomEvents","$delegate","_domDelegate2","$el","enabled","addEvents","forEach","event","on","apply","_toConsumableArray","removeEvents","off","DomEvents","_superclass","_class2","_ref","_temp","args","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","concat","addDomEvents","_domEvents","removeDomEvents","_inherits","_utils","mix","$dom","$html","getElementsByTagName","$body","body","KEY_CODES","DELETE_KEY","SHIFT_KEY","CTRL_KEY","ALT_KEY","RETURN_KEY","ESC_KEY","SPACE_KEY","LEFT_KEY","UP_KEY","RIGHT_KEY","DOWN_KEY","A_KEY","S_KEY","CMD_KEY","Behaviour","undefined","options","initialize","setTimeout","unmount","assign"],"mappings":"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","file":"2.bundle.1525872371084.js","sourcesContent":["import Behaviour from '@/core'\n// https://github.com/magicspon/spon-draw\nimport SponDraw from 'spon-draw'\n// https://github.com/magicspon/spon-resize\nimport resizer from 'spon-resize'\n\nexport default class MobileMenu extends Behaviour {\n\tmounted = () => {\n\t\tthis.resizer = resizer()\n\t\tthis.resizer.start()\n\n\t\tthis.$logo = document.getElementById('logo-svg')\n\n\t\tthis.nav = new SponDraw({\n\t\t\topenButton: '[data-menu-opener]',\n\t\t\tcloseButton: '[data-menu-closer]',\n\t\t\toverlay: document.getElementById('site-menu'),\n\t\t\tcontents: document.getElementById('site-menu-inner')\n\t\t})\n\n\t\tthis.resizer.at('(min-width: 62em)', {\n\t\t\tmatch: () => {\n\t\t\t\tthis.nav.destroy()\n\t\t\t},\n\n\t\t\tunmatch: () => {\n\t\t\t\tthis.nav.init()\n\t\t\t}\n\t\t})\n\t}\n}\n","export const isFn = fn => typeof fn === 'function'\n\nexport class MixinBuilder {\n\tconstructor(superclass) {\n\t\tthis.superclass = superclass\n\t}\n\n\twith(...mixins) {\n\t\treturn mixins.reduce((c, mixin) => mixin(c), this.superclass)\n\t}\n}\n","import Delegate from 'dom-delegate'\n\nconst transform = context => {\n\tconst output = []\n\tfor (let key in context.events) {\n\t\tconst eventKey = context.events[key]\n\t\tconst method = typeof eventKey === 'function' ? eventKey : context[eventKey]\n\t\tconst parts = key.split(' ')\n\t\tconst capture = parts[0].includes('mouse') ? true : false\n\t\toutput.push([parts[0], parts[1], method.bind(context), capture])\n\t}\n\treturn output\n}\n\nconst bindDomEvents = context => {\n\tconst $delegate = new Delegate(context.$el)\n\tlet enabled = false\n\n\treturn {\n\t\taddEvents: () => {\n\t\t\tif (enabled) return\n\t\t\tenabled = true\n\t\t\tif (!context.events) return this\n\t\t\ttransform(context).forEach(event => $delegate.on(...event))\n\t\t\treturn this\n\t\t},\n\n\t\tremoveEvents: () => {\n\t\t\tif (!enabled && !context.events) return\n\t\t\tenabled = false\n\t\t\ttransform(context).forEach(event => $delegate.off(...event))\n\t\t\treturn this\n\t\t}\n\t}\n}\n\nexport const DomEvents = superclass =>\n\tclass extends superclass {\n\t\taddDomEvents = () => {\n\t\t\tthis._domEvents = bindDomEvents(this)\n\t\t\tthis._domEvents.addEvents()\n\t\t\treturn this\n\t\t}\n\n\t\tremoveDomEvents = () => {\n\t\t\tthis._domEvents && this._domEvents.removeEvents()\n\t\t\treturn this\n\t\t}\n\t}\n","import { isFn, MixinBuilder } from './utils'\n\nexport { DomEvents } from './domEvents'\n\nexport const mix = superclass => new MixinBuilder(superclass)\n\nconst $dom = {\n\t$html: document.getElementsByTagName('html')[0],\n\t$body: document.body\n}\n\nconst KEY_CODES = {\n\tDELETE_KEY: 8,\n\tSHIFT_KEY: 16,\n\tCTRL_KEY: 17,\n\tALT_KEY: 18,\n\tRETURN_KEY: 13,\n\tESC_KEY: 27,\n\tSPACE_KEY: 32,\n\tLEFT_KEY: 37,\n\tUP_KEY: 38,\n\tRIGHT_KEY: 39,\n\tDOWN_KEY: 40,\n\tA_KEY: 65,\n\tS_KEY: 83,\n\tCMD_KEY: 91\n}\n\nexport default class Behaviour {\n\tconstructor($el = document, options = {}) {\n\t\tthis.options = options\n\n\t\tthis.$el = $el\n\n\t\tthis.KEY_CODES = KEY_CODES\n\n\t\tObject.assign(this, $dom)\n\n\t\treturn this\n\t}\n\n\tinitialize = () => {\n\t\tsetTimeout(() => this.mounted())\n\n\t\treturn this\n\t}\n\n\tdestroy = () => {\n\t\tif (isFn(this.unmount)) this.unmount()\n\n\t\tif (this.events) {\n\t\t\tthis.removeDomEvents()\n\t\t}\n\n\t\treturn this\n\t}\n\n\tmounted = () => {}\n\n\tunmount = () => {}\n}\n"],"sourceRoot":""}