{"version":3,"sources":["webpack:///./behaviours/HomePage.js","webpack:///./core/modules/resizer.js","webpack:///./core/modules/inview.js","webpack:///./core/Behaviour.js"],"names":["HomePage","mount","_this","$el","classList","add","$events","attachAll","$screen","on","_ref2","width","height","query","unmount","events","click [data-link]","onClick","e","elm","preventDefault","toggle","viewport","enter","exit","routes","screens","(min-width: 1024px)","_ref3","match","(min-width: 680px)","_ref4","_core_Behaviour__WEBPACK_IMPORTED_MODULE_0__","handle","resizer_query","es","item","getPropertyValue","getCurrentMediaQuery","window","getComputedStyle","document","body","last","getWindowProps","innerWidth","innerHeight","resizer_windowResizeEvent","_getWindowProps","eventBus","emit","resizer_windowResize","windowResize","isRunning","raf_default","a","bind","addEventListener","destroy","removeEventListener","cancel","windowMatch","breakpoint","matchMedia","matches","resizer_mapEventsToResize","Object","entries","map","_ref","_slicedToArray","fn","funk","once","arg","value","modules_resizer","arguments","length","undefined","bank","_extends","forEach","off","modules_inview","root","options","defaults","inview_extends","rootMargin","threshold","observer","unobserve","IntersectionObserver","entry","type","isIntersecting","observe","Behaviour","this","el","name","_classCallCheck","registerObserverOptions","init","$observer","$eventBus","actions","$refs","refs","createEvents","call","updateRefs","Behaviour_extends","$name","$data","composeProps","attributes"],"mappings":"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","file":"5.bundle.1527723905070.js","sourcesContent":["import Behaviour from '@/core/Behaviour'\n\nexport default class HomePage extends Behaviour {\n\tmount = () => {\n\t\t// log('mount: HomePage')\n\t\tthis.$el.classList.add('mount')\n\t\tthis.$events.attachAll()\n\t\tthis.$screen.on('window:resize', ({ width, height, query }) => {\n\t\t\t// log({ width, height, query })\n\t\t})\n\t}\n\n\tunmount = () => {\n\t\t// log('unmount: HomePage')\n\t\tthis.$el.classList.add('unmount')\n\t}\n\n\tevents = {\n\t\t'click [data-link]': 'onClick'\n\t}\n\n\tonClick = (e, elm) => {\n\t\te.preventDefault()\n\t\telm.classList.toggle('huzzah')\n\t}\n\n\tviewport = {\n\t\tenter: () => {\n\t\t\t// log('ExampleClass enter')\n\t\t},\n\n\t\texit: () => {\n\t\t\t// log('ExampleClass exit')\n\t\t}\n\t}\n\n\troutes = {\n\t\tenter: () => {\n\t\t\tthis.$el.classList.toggle('enter')\n\t\t},\n\t\texit: () => {\n\t\t\tthis.$el.classList.toggle('exit')\n\t\t}\n\t}\n\n\tscreens = {\n\t\t'(min-width: 1024px)': ({ match, width, height, query }) => {\n\t\t\t// log('(min-width: 1024px)', match, width, height, query)\n\t\t},\n\n\t\t'(min-width: 680px)': ({ match, width, height, query }) => {\n\t\t\t// log('(min-width: 680px)', match, width, height, query)\n\t\t}\n\t}\n}\n","import eventBus from '@/core/modules/eventBus'\nimport raf from 'raf'\nimport * as R from 'ramda'\n\nlet handle\n\nconst getStyle = () => window.getComputedStyle(document.body, ':after')\nconst query = R.compose(R.replace(/'|\"/g, ''), item =>\n\titem.getPropertyValue('content')\n)\nconst getCurrentMediaQuery = R.compose(query, getStyle)\n\nlet last = getCurrentMediaQuery()\n\nconst getWindowProps = () => {\n\tconst width = window.innerWidth\n\tconst height = window.innerHeight\n\tconst query = getCurrentMediaQuery()\n\n\treturn {\n\t\twidth,\n\t\theight,\n\t\tquery\n\t}\n}\n\nconst windowResizeEvent = () => {\n\tconst { width, height, query } = getWindowProps()\n\n\teventBus.emit('window:resize', {\n\t\twidth,\n\t\theight,\n\t\tquery\n\t})\n\n\tif (query !== last) {\n\t\tlast = query\n\t\teventBus.emit('window:breakpoint', {\n\t\t\twidth,\n\t\t\theight,\n\t\t\tquery\n\t\t})\n\t}\n}\n\nconst windowResize = () => {\n\tif (windowResize.isRunning) return\n\twindowResize.isRunning = true\n\thandle = raf.bind(null, windowResizeEvent)\n\n\twindow.addEventListener('resize', handle, false)\n\n\treturn {\n\t\tdestroy() {\n\t\t\tif (!windowResize.isRunning) return\n\t\t\twindowResize.isRunning = false\n\t\t\twindow.removeEventListener('resize', handle, false)\n\t\t\thandle.cancel()\n\t\t}\n\t}\n}\nwindowResize.isRunning = false\n\nconst windowMatch = breakpoint => window.matchMedia(breakpoint).matches\n\nconst mapEventsToResize = events =>\n\tObject.entries(events).map(([breakpoint, fn]) => {\n\t\tconst once = (arg, fn) => {\n\t\t\tif (once.value === arg) return\n\t\t\tfn({ match: arg, ...getWindowProps() })\n\t\t\tonce.value = arg\n\t\t}\n\n\t\tconst test = (breakpoint, fn) => {\n\t\t\tconst state = windowMatch(breakpoint)\n\t\t\tonce(state, fn)\n\t\t}\n\n\t\tconst funk = test.bind(null, breakpoint, fn)\n\t\twindowMatch(breakpoint) && funk()\n\t\teventBus.on('window:resize', funk)\n\n\t\treturn funk\n\t})\n\nconst resizer = (events = {}) => {\n\twindowResize()\n\n\tlet bank = mapEventsToResize(events)\n\n\tconst destroy = () => {\n\t\tbank.forEach(fn => eventBus.off('window:resize', fn))\n\t\tbank = []\n\t}\n\n\treturn {\n\t\tget breakpoint() {\n\t\t\treturn getCurrentMediaQuery()\n\t\t},\n\n\t\tget width() {\n\t\t\treturn window.innerWidth\n\t\t},\n\n\t\tget height() {\n\t\t\treturn window.innerHeight\n\t\t},\n\n\t\tdestroy,\n\n\t\t...eventBus\n\t}\n}\n\nexport default resizer\n","import * as R from 'ramda'\n\nconst inview = R.curry((root, events, options) => {\n\tif (!events) return\n\n\tconst opts = options ? options : {}\n\tconst defaults = {\n\t\trootMargin: '0px',\n\t\tthreshold: 0,\n\t\t...opts\n\t}\n\n\tconst destroy = () => observer.unobserve(root)\n\n\tconst onIntersection = entry => {\n\t\tconst item = R.head(entry)\n\t\tconst { isIntersecting } = item\n\t\tconst type = isIntersecting ? 'enter' : 'exit'\n\t\tif (events[type]) {\n\t\t\tevents[type]({\n\t\t\t\t...item,\n\t\t\t\tdestroy\n\t\t\t})\n\t\t}\n\t}\n\n\tconst observer = new IntersectionObserver(onIntersection, defaults)\n\n\tobserver.observe(root)\n\n\treturn {\n\t\tdestroy\n\t}\n})\n\nexport default inview\n","import createEvents from '@/core/modules/createEvents'\nimport refs, { composeProps } from '@/core/modules/refs'\nimport eventBus from '@/core/modules/eventBus'\nimport resizer from '@/core/modules/resizer'\nimport inview from '@/core/modules/inview'\nimport * as Actions from '@/core/router/actions'\n\n/**\n * class Behaviour\n *\n */\nexport default class Behaviour {\n\tconstructor(el = document, name) {\n\t\tthis.$name = name\n\t\tthis.$el = el\n\t\tthis.$eventBus = eventBus\n\t\tthis.$data = composeProps([...this.$el.attributes]) // here lies a bug\n\t}\n\n\tregisterObserverOptions = {}\n\n\troutes = {\n\t\tenter: () => {},\n\t\texit: () => {}\n\t}\n\n\tviewport = {\n\t\tenter: () => {},\n\t\texit: () => {}\n\t}\n\n\tscreens = {}\n\n\tinit = () => {\n\t\tthis.$observer = inview(\n\t\t\tthis.$el,\n\t\t\tthis.viewport,\n\t\t\tthis.registerObserverOptions\n\t\t)\n\n\t\tthis.$eventBus.on(Actions.ROUTE_TRANSITION_ENTER, this.routes.enter)\n\t\tthis.$eventBus.on(Actions.ROUTE_TRANSITION_EXIT, this.routes.exit)\n\t\tthis.$refs = refs(this.$el)\n\t\tthis.$screen = resizer(this.screens)\n\t\tif (this.events) {\n\t\t\tthis.$events = createEvents.call(this, this.$el, this.events)\n\t\t}\n\n\t\treturn this\n\t}\n\n\tupdateRefs = () => {\n\t\tthis.$refs = { ...this.$refs, ...refs(this.$el) }\n\t}\n\n\tmount = () => {}\n\n\tunmount = () => {}\n\n\tdestroy = () => {\n\t\tthis.unmount()\n\t\tthis.$eventBus.off(Actions.ROUTE_TRANSITION_ENTER, this.routes.enter)\n\t\tthis.$eventBus.off(Actions.ROUTE_TRANSITION_EXIT, this.routes.exit)\n\t\tthis.$screen.destroy()\n\n\t\tif (this.viewport) {\n\t\t\tthis.$observer.destroy()\n\t\t}\n\n\t\tif (this.events) {\n\t\t\tthis.$events.destroy()\n\t\t}\n\t}\n}\n"],"sourceRoot":""}